components:
  headers:
    ContentLocation:
      explode: false
      schema:
        example: /some-resource/d98d621a-23da-49fe-af96-6be709abb718
        maxLength: 128
        type: string
      style: simple
    Location:
      explode: false
      schema:
        example: /some-resource/d98d621a-23da-49fe-af96-6be709abb718
        maxLength: 128
        type: string
      style: simple
  parameters:
    AccountId:
      description: The `account` ID.
      explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    ApplicationId:
      description: The `application` ID.
      explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    FileId:
      description: The `file` ID.
      explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    Height:
      description: The height of the image to render.
      explode: true
      in: query
      name: height
      required: false
      schema:
        example: 1000
        format: int32
        maximum: 2160
        minimum: 1
        type: integer
      style: form
    IncludePartRevisions:
      description: Comma-separated list of relationships to include in response.
      explode: true
      in: query
      name: include
      required: false
      schema:
        example: partRevisions
        maxLength: 32
        type: string
      style: form
    IncludeSource:
      description: Comma-separated list of relationships to include in response.
      explode: true
      in: query
      name: include
      required: false
      schema:
        example: results.sceneItem.source
        maxLength: 32
        type: string
      style: form
    PageCursor:
      description: The cursor for the next page of items.
      explode: true
      in: query
      name: 'page[cursor]'
      required: false
      schema:
        example: cHJkMDVFR2RLag==
        type: string
      style: form
    PageSize:
      description: The number of items to return.
      explode: true
      in: query
      name: 'page[size]'
      required: false
      schema:
        example: 10
        format: int32
        maximum: 200
        minimum: 1
        type: integer
      style: form
    ParentIdFilter:
      description: Parent ID to filter on.
      explode: true
      in: query
      name: 'filter[parent]'
      required: false
      schema:
        example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
        format: uuid
        maxLength: 36
        type: string
      style: form
    PartId:
      description: The `part` ID.
      explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    PartRevisionFields:
      description: >-
        Comma-separated list of fields to return in response. An empty value
        returns no fields. Due to its potential size, metadata is only returned
        if explicitly requested.
      explode: true
      in: query
      name: 'fields[part-revision]'
      required: false
      schema:
        example: 'created,suppliedId'
        maxLength: 32
        type: string
      style: form
    PartRevisionId:
      description: The `part-revision` ID.
      explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    SceneId:
      description: The `scene` ID.
      explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    SceneItemId:
      description: The `scene-item` ID.
      explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    SceneItemOverrideId:
      description: The `scene-item-override` ID.
      explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    SceneViewId:
      description: The `scene-view` ID.
      explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    StreamKeyFilter:
      description: Stream key to filter on.
      explode: true
      in: query
      name: 'filter[key]'
      required: false
      schema:
        example: i3MFRDOmg1pxD36dGCTONRwOujkgV8m9LQ
        type: string
      style: form
    SuppliedIdFilter:
      description: Comma-separated list of supplied IDs to filter on.
      explode: true
      in: query
      name: 'filter[suppliedId]'
      required: false
      schema:
        example: 'some-id-1,some-id-2'
        maxLength: 1024
        type: string
      style: form
    Width:
      description: The width of the image to render.
      explode: true
      in: query
      name: width
      required: false
      schema:
        example: 1000
        format: int32
        maximum: 3840
        minimum: 1
        type: integer
      style: form
  responses:
    Accepted:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/QueuedJob'
      description: Accepted
      headers:
        content-location:
          $ref: '#/components/headers/ContentLocation'
    BadRequest:
      content:
        application/vnd.api+json:
          example:
            errors:
              - code: BadRequest
                status: '400'
                title: 'Invalid, missing, or out-of-range request parameters.'
          schema:
            $ref: '#/components/schemas/Failure'
      description: Bad Request
    Conflict:
      content:
        application/vnd.api+json:
          example:
            errors:
              - code: Conflict
                status: '409'
                title: The state of the resource does not permit this operation.
          schema:
            $ref: '#/components/schemas/Failure'
      description: Conflict
    MovedPermanently:
      description: Moved Permanently
    NoContent:
      description: No Content
    NotFound:
      content:
        application/vnd.api+json:
          example:
            errors:
              - code: NotFound
                status: '404'
                title: The requested resource was not found.
          schema:
            $ref: '#/components/schemas/Failure'
      description: Not Found
    Unauthorized:
      content:
        application/vnd.api+json:
          example:
            errors:
              - code: Unauthorized
                status: '401'
                title: Invalid or missing credentials.
          schema:
            $ref: '#/components/schemas/Failure'
      description: Unauthorized
    UnsupportedMediaType:
      content:
        application/vnd.api+json:
          example:
            errors:
              - code: UnsupportedMediaType
                status: '415'
                title: >-
                  The provided media type is not supported. Update the
                  Content-Type header to application/vnd.api+json and try again.
          schema:
            $ref: '#/components/schemas/Failure'
      description: Unsupported Media Type
  schemas:
    Camera:
      additionalProperties: false
      description: Camera placement in 3D space.
      example:
        lookAt:
          x: 0
          'y': 0
          z: 0
        position:
          x: 0
          'y': 0
          z: -100
        up:
          x: 0
          'y': 1
          z: 0
      properties:
        lookAt:
          $ref: '#/components/schemas/Vector3'
        position:
          $ref: '#/components/schemas/Vector3'
        up:
          $ref: '#/components/schemas/Vector3'
      required:
        - lookAt
        - position
        - up
      type: object
    CameraFit:
      additionalProperties: false
      description: Fit camera in 3D space based on items in scene.
      properties:
        type:
          description: Resource object type.
          enum:
            - fit-visible-scene-items
          example: fit-visible-scene-items
          maxLength: 32
          type: string
      required:
        - type
      type: object
    ChangeMaterialOperation:
      additionalProperties: false
      properties:
        material:
          $ref: '#/components/schemas/ColorMaterial'
        type:
          description: Resource object type.
          enum:
            - change-material
          example: change-material
          maxLength: 32
          type: string
      required:
        - material
        - type
      type: object
    ChangeTransformOperation:
      additionalProperties: false
      properties:
        transform:
          $ref: '#/components/schemas/Matrix4'
        type:
          description: Resource object type.
          enum:
            - change-transform
          example: change-transform
          maxLength: 32
          type: string
      required:
        - transform
        - type
      type: object
    ChangeVisibilityOperation:
      additionalProperties: false
      properties:
        type:
          description: Resource object type.
          enum:
            - change-visibility
          example: change-visibility
          maxLength: 32
          type: string
        visible:
          description: Item visibility.
          example: true
          type: boolean
      required:
        - type
        - visible
      type: object
    ClearMaterialOperation:
      additionalProperties: false
      properties:
        type:
          description: Resource object type.
          enum:
            - clear-material
          example: clear-material
          maxLength: 32
          type: string
      required:
        - type
      type: object
    ClearTransformOperation:
      additionalProperties: false
      properties:
        type:
          description: Resource object type.
          enum:
            - clear-transform
          example: clear-transform
          maxLength: 32
          type: string
      required:
        - type
      type: object
    Color:
      description: Color value from 0 to 255.
      example: 255
      format: int32
      maximum: 255
      minimum: 0
      type: integer
    Color3:
      additionalProperties: false
      description: RGB color.
      properties:
        b:
          description: Color value from 0 to 255.
          example: 255
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        g:
          description: Color value from 0 to 255.
          example: 255
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        r:
          description: Color value from 0 to 255.
          example: 255
          format: int32
          maximum: 255
          minimum: 0
          type: integer
      required:
        - b
        - g
        - r
      type: object
    ColorMaterial:
      additionalProperties: false
      description: Color properties describing how a material looks.
      properties:
        ambient:
          $ref: '#/components/schemas/Color3'
        diffuse:
          $ref: '#/components/schemas/Color3'
        emissive:
          $ref: '#/components/schemas/Color3'
        glossiness:
          description: Glossiness from 0 to 128.
          example: 0
          format: int32
          maximum: 128
          minimum: 0
          type: integer
        opacity:
          description: Opacity from 0 to 100.
          example: 0
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        specular:
          $ref: '#/components/schemas/Color3'
      required:
        - ambient
        - diffuse
        - emissive
        - glossiness
        - opacity
        - specular
      type: object
    ColorMaterialNullable:
      additionalProperties: false
      description: Color properties describing how a material looks.
      nullable: true
      properties:
        ambient:
          $ref: '#/components/schemas/Color3'
        diffuse:
          $ref: '#/components/schemas/Color3'
        emissive:
          $ref: '#/components/schemas/Color3'
        glossiness:
          description: Glossiness from 0 to 128.
          example: 0
          format: int32
          maximum: 128
          minimum: 0
          type: integer
        opacity:
          description: Opacity from 0 to 100.
          example: 0
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        specular:
          $ref: '#/components/schemas/Color3'
      required:
        - ambient
        - diffuse
        - emissive
        - glossiness
        - opacity
        - specular
      type: object
    CreateFileRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateFileRequest_data'
      required:
        - data
      type: object
    CreateFileRequest_data:
      properties:
        attributes:
          $ref: '#/components/schemas/CreateFileRequest_data_attributes'
        type:
          description: Resource object type.
          example: file
          maxLength: 32
          type: string
      required:
        - attributes
        - type
      type: object
    CreateFileRequest_data_attributes:
      properties:
        name:
          description: >-
            Name matching that of the file you are uploading, including file
            extension.
          example: model.zip
          maxLength: 1024
          minLength: 1
          type: string
        rootFileName:
          description: >-
            File name of the root part or assembly, including file extension.
            Required if `name` references an archive file extension, ignored
            otherwise.
          example: root-assembly.prt.1
          maxLength: 1024
          type: string
        suppliedId:
          description: >-
            ID provided for correlation. For example, an existing ID from a PLM
            system.
          example: PN12345
          maxLength: 1024
          type: string
      required:
        - name
      type: object
    CreateGeometrySetRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateGeometrySetRequest_data'
      required:
        - data
      type: object
    CreateGeometrySetRequest_data:
      properties:
        relationships:
          $ref: '#/components/schemas/CreateGeometrySetRequest_data_relationships'
        type:
          description: Resource object type.
          example: geometry-set
          maxLength: 32
          type: string
      required:
        - relationships
        - type
      type: object
    CreateGeometrySetRequest_data_relationships:
      properties:
        source:
          $ref: '#/components/schemas/FileRelationship'
      required:
        - source
      type: object
    CreateHitRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateHitRequest_data'
      required:
        - data
      type: object
    CreateHitRequest_data:
      properties:
        attributes:
          $ref: '#/components/schemas/CreateHitRequest_data_attributes'
        type:
          description: Resource object type.
          example: hit
          maxLength: 32
          type: string
      required:
        - attributes
        - type
      type: object
    CreateHitRequest_data_attributes:
      properties:
        point:
          $ref: '#/components/schemas/Point'
        viewport:
          $ref: '#/components/schemas/Dimensions'
      required:
        - point
        - viewport
      type: object
    CreatePartRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreatePartRequest_data'
      required:
        - data
      type: object
    CreatePartRequest_data:
      properties:
        attributes:
          $ref: '#/components/schemas/CreatePartRequest_data_attributes'
        relationships:
          $ref: '#/components/schemas/CreateGeometrySetRequest_data_relationships'
        type:
          description: Resource object type.
          example: part
          maxLength: 32
          type: string
      required:
        - attributes
        - relationships
        - type
      type: object
    CreatePartRequest_data_attributes:
      properties:
        indexMetadata:
          description: Whether or not to index metadata in the part file.
          example: false
          type: boolean
        suppliedId:
          description: >-
            ID provided for correlation. For example, an existing ID from a PLM
            system.
          example: PN12345
          maxLength: 1024
          type: string
        suppliedRevisionId:
          description: >-
            ID provided for correlation. For example, an existing ID from a PLM
            system.
          example: RevA
          maxLength: 1024
          type: string
      required:
        - suppliedId
        - suppliedRevisionId
      type: object
    CreateSceneAlterationRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateSceneAlterationRequest_data'
      required:
        - data
      type: object
    CreateSceneAlterationRequest_data:
      properties:
        attributes:
          $ref: '#/components/schemas/CreateSceneAlterationRequest_data_attributes'
        type:
          description: Resource object type.
          example: scene-alteration
          maxLength: 32
          type: string
      required:
        - attributes
        - type
      type: object
    CreateSceneAlterationRequest_data_attributes:
      properties:
        alterations:
          description: List of alterations to apply.
          items:
            $ref: '#/components/schemas/SceneOperation'
          maxItems: 1024
          type: array
      required:
        - alterations
      type: object
    CreateSceneItemOverrideRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateSceneItemOverrideRequest_data'
      required:
        - data
      type: object
    CreateSceneItemOverrideRequest_data:
      properties:
        attributes:
          $ref: '#/components/schemas/CreateSceneItemOverrideRequest_data_attributes'
        relationships:
          $ref: >-
            #/components/schemas/CreateSceneItemOverrideRequest_data_relationships
        type:
          description: Resource object type.
          example: scene-item-override
          maxLength: 32
          type: string
      required:
        - attributes
        - relationships
        - type
      type: object
    CreateSceneItemOverrideRequest_data_attributes:
      properties:
        material:
          $ref: '#/components/schemas/ColorMaterial'
        transform:
          $ref: '#/components/schemas/Matrix4'
        visible:
          description: Item visibility.
          example: true
          type: boolean
      type: object
    CreateSceneItemOverrideRequest_data_relationships:
      properties:
        sceneItem:
          $ref: '#/components/schemas/SceneItemRelationship'
      required:
        - sceneItem
      type: object
    CreateSceneItemRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateSceneItemRequest_data'
      required:
        - data
      type: object
    CreateSceneItemRequest_data:
      properties:
        attributes:
          $ref: '#/components/schemas/CreateSceneItemRequest_data_attributes'
        relationships:
          $ref: '#/components/schemas/CreateSceneItemRequest_data_relationships'
        type:
          description: Resource object type.
          example: scene-item
          maxLength: 32
          type: string
      required:
        - attributes
        - relationships
        - type
      type: object
    CreateSceneItemRequest_data_attributes:
      properties:
        materialOverride:
          $ref: '#/components/schemas/ColorMaterial'
        parent:
          description: >-
            ID provided for correlation. For example, an existing ID from a PLM
            system.
          example: PN12345
          maxLength: 1024
          type: string
        source:
          $ref: '#/components/schemas/PartRevisionSuppliedId'
        suppliedId:
          description: >-
            ID provided for correlation. For example, an existing ID from a PLM
            system.
          example: PN12345
          maxLength: 1024
          type: string
        transform:
          $ref: '#/components/schemas/Matrix4'
        visible:
          description: Item visibility.
          example: true
          type: boolean
      type: object
    CreateSceneItemRequest_data_relationships:
      properties:
        parent:
          $ref: '#/components/schemas/SceneItemRelationship'
        source:
          anyOf:
            - $ref: '#/components/schemas/GeometrySetRelationship'
            - $ref: '#/components/schemas/PartRevisionRelationship'
            - $ref: '#/components/schemas/SceneRelationship'
          description: 'Relationship to a `geometry-set`, `part-revision`, or `scene`.'
      type: object
    CreateSceneRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateSceneRequest_data'
      required:
        - data
      type: object
    CreateSceneRequest_data:
      properties:
        attributes:
          $ref: '#/components/schemas/CreateSceneRequest_data_attributes'
        relationships:
          $ref: '#/components/schemas/CreateSceneRequest_data_relationships'
        type:
          description: Resource object type.
          example: scene
          maxLength: 32
          type: string
      required:
        - attributes
        - type
      type: object
    CreateSceneRequest_data_attributes:
      properties:
        camera:
          $ref: '#/components/schemas/Camera'
        name:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        suppliedId:
          description: >-
            ID provided for correlation. For example, an existing ID from a PLM
            system.
          example: PN12345
          maxLength: 1024
          type: string
      type: object
    CreateSceneRequest_data_relationships:
      properties:
        source:
          oneOf:
            - $ref: '#/components/schemas/SceneTemplateRelationship'
            - $ref: '#/components/schemas/SceneRelationship'
      required:
        - source
      type: object
    CreateSceneTemplateRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateSceneTemplateRequest_data'
      required:
        - data
      type: object
    CreateSceneTemplateRequest_data:
      properties:
        attributes:
          $ref: '#/components/schemas/CreateSceneTemplateRequest_data_attributes'
        relationships:
          $ref: '#/components/schemas/CreateGeometrySetRequest_data_relationships'
        type:
          description: Resource object type.
          example: scene-template
          maxLength: 32
          type: string
      required:
        - attributes
        - relationships
        - type
      type: object
    CreateSceneTemplateRequest_data_attributes:
      properties:
        name:
          description: Name of the scene template.
          example: Config A
          maxLength: 1024
          type: string
        suppliedId:
          description: >-
            ID provided for correlation. For example, an existing ID from a PLM
            system.
          example: ConfigA
          maxLength: 1024
          type: string
      required:
        - suppliedId
      type: object
    CreateSceneViewRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateSceneViewRequest_data'
      required:
        - data
      type: object
    CreateSceneViewRequest_data:
      properties:
        attributes:
          $ref: '#/components/schemas/CreateSceneViewRequest_data_attributes'
        type:
          description: Resource object type.
          example: scene-view
          maxLength: 32
          type: string
      required:
        - attributes
        - type
      type: object
    CreateSceneViewRequest_data_attributes:
      properties:
        camera:
          $ref: '#/components/schemas/Camera'
      type: object
    CreateStreamKeyRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateStreamKeyRequest_data'
      required:
        - data
      type: object
    CreateStreamKeyRequest_data:
      properties:
        attributes:
          $ref: '#/components/schemas/CreateStreamKeyRequest_data_attributes'
        type:
          description: Resource object type.
          example: stream-key
          maxLength: 32
          type: string
      required:
        - attributes
        - type
      type: object
    CreateStreamKeyRequest_data_attributes:
      properties:
        expiry:
          description: Number of seconds before the `stream-key` expires.
          example: 600
          format: int32
          maximum: 31557600
          minimum: 1
          type: integer
      type: object
    CreateTokenRequest:
      additionalProperties: false
      properties:
        grant_type:
          example: client_credentials
          maxLength: 32
          type: string
        scope:
          maxLength: 1024
          type: string
      required:
        - grant_type
      type: object
    CreateTranslationInspectionRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateTranslationInspectionRequest_data'
      required:
        - data
      type: object
    CreateTranslationInspectionRequest_data:
      properties:
        relationships:
          $ref: '#/components/schemas/CreateGeometrySetRequest_data_relationships'
        type:
          description: Resource object type.
          example: translation-inspection
          maxLength: 32
          type: string
      required:
        - relationships
        - type
      type: object
    DateTime:
      example: '2020-01-01T12:00:00Z'
      format: date-time
      type: string
    Dimensions:
      additionalProperties: false
      description: An item's height and width.
      properties:
        height:
          description: Item's height.
          example: 10
          format: int32
          type: integer
        width:
          description: Item's width.
          example: 10
          format: int32
          type: integer
      required:
        - height
        - width
      type: object
    Error:
      additionalProperties: false
      properties:
        code:
          example: ValidationError
          type: string
        detail:
          example: '$.data.attributes.suppliedId: is missing but it is required'
          type: string
        id:
          example: 7c46d4c3-e065-4eae-87ec-08233cf8743b
          type: string
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        meta:
          additionalProperties:
            type: string
          type: object
        source:
          $ref: '#/components/schemas/Error_source'
        status:
          example: '400'
          type: string
        title:
          example: A validation error occurred.
          type: string
      type: object
    Error_source:
      properties:
        parameter:
          example: 'page[cursor]'
          type: string
        pointer:
          example: /body/data/attributes
          type: string
      type: object
    Failure:
      additionalProperties: false
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Error'
          maxItems: 20
          type: array
          uniqueItems: true
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        meta:
          additionalProperties:
            type: string
          type: object
      required:
        - errors
      type: object
    FileList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/FileMetadataData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    FileMetadata:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/FileMetadataData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    FileMetadataData:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/FileMetadataData_attributes'
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        type:
          example: file
          type: string
      required:
        - attributes
        - id
        - type
      type: object
    FileMetadataData_attributes:
      properties:
        created:
          example: '2020-01-01T12:00:00Z'
          format: date-time
          type: string
        name:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        rootFileName:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        status:
          example: complete
          type: string
        suppliedId:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        uploaded:
          example: '2020-01-01T12:00:00Z'
          format: date-time
          type: string
      required:
        - created
        - name
        - status
      type: object
    FileRelationship:
      additionalProperties: false
      description: Relationship to a `file`.
      properties:
        data:
          $ref: '#/components/schemas/FileRelationship_data'
      required:
        - data
      type: object
    FileRelationship_data:
      properties:
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        type:
          description: Resource object type.
          enum:
            - file
          example: file
          maxLength: 32
          type: string
      required:
        - id
        - type
      type: object
    GeometrySet:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/GeometrySetData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    GeometrySetData:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/Hit_data_attributes'
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        type:
          example: geometry-set
          type: string
      required:
        - attributes
        - id
        - type
      type: object
    GeometrySetList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/GeometrySetData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    GeometrySetRelationship:
      additionalProperties: false
      description: Relationship to a `geometry-set`.
      properties:
        data:
          $ref: '#/components/schemas/GeometrySetRelationshipData'
      required:
        - data
      type: object
    GeometrySetRelationshipData:
      additionalProperties: false
      properties:
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        type:
          description: Resource object type.
          enum:
            - geometry-set
          example: geometry-set
          maxLength: 32
          type: string
      required:
        - id
        - type
      type: object
    Glossiness:
      description: Glossiness from 0 to 128.
      example: 0
      format: int32
      maximum: 128
      minimum: 0
      type: integer
    Hit:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Hit_data'
        included:
          items:
            oneOf:
              - $ref: '#/components/schemas/HitResultData'
              - $ref: '#/components/schemas/SceneItemData'
              - $ref: '#/components/schemas/PartRevisionData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - included
      type: object
    HitResultData:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/HitResultData_attributes'
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        relationships:
          $ref: '#/components/schemas/HitResultData_relationships'
        type:
          example: hit
          type: string
      required:
        - attributes
        - id
        - relationships
        - type
      type: object
    HitResultData_attributes:
      properties:
        normal:
          $ref: '#/components/schemas/Vector3'
        point:
          $ref: '#/components/schemas/Vector3'
      required:
        - normal
        - point
      type: object
    HitResultData_relationships:
      properties:
        sceneItem:
          $ref: '#/components/schemas/RelationshipData'
      required:
        - sceneItem
      type: object
    Hit_data:
      properties:
        attributes:
          $ref: '#/components/schemas/Hit_data_attributes'
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        relationships:
          $ref: '#/components/schemas/Hit_data_relationships'
        type:
          example: hit
          type: string
      required:
        - attributes
        - id
        - relationships
        - type
      type: object
    Hit_data_attributes:
      properties:
        created:
          example: '2020-01-01T12:00:00Z'
          format: date-time
          type: string
      required:
        - created
      type: object
    Hit_data_relationships:
      properties:
        results:
          items:
            $ref: '#/components/schemas/RelationshipData'
          type: array
      required:
        - results
      type: object
    Link:
      additionalProperties: false
      properties:
        href:
          example: /some-resource/d98d621a-23da-49fe-af96-6be709abb718
          type: string
      required:
        - href
      type: object
    Links:
      additionalProperties:
        $ref: '#/components/schemas/Link'
      type: object
    MaterialOverride:
      additionalProperties: false
      description: Color material override.
      properties:
        value:
          $ref: '#/components/schemas/ColorMaterial'
      type: object
    Matrix4:
      additionalProperties: false
      description: >-
        4x4 affine transformation matrix, see [Transformation
        Matrices](https://developer.vertexvis.com/docs/guides/rendering-scenes#transformation-matrices)
        for details.
      example:
        r0:
          w: 0
          x: 1
          'y': 0
          z: 0
        r1:
          w: 0
          x: 0
          'y': 1
          z: 0
        r2:
          w: 0
          x: 0
          'y': 0
          z: 1
        r3:
          w: 1
          x: 0
          'y': 0
          z: 0
      properties:
        r0:
          $ref: '#/components/schemas/Vector4'
        r1:
          $ref: '#/components/schemas/Vector4'
        r2:
          $ref: '#/components/schemas/Vector4'
        r3:
          $ref: '#/components/schemas/Vector4'
      required:
        - r0
        - r1
        - r2
        - r3
      type: object
    Matrix4Nullable:
      additionalProperties: false
      description: >-
        4x4 affine transformation matrix, see [Transformation
        Matrices](https://developer.vertexvis.com/docs/guides/rendering-scenes#transformation-matrices)
        for details.
      example:
        r0:
          w: 0
          x: 1
          'y': 0
          z: 0
        r1:
          w: 0
          x: 0
          'y': 1
          z: 0
        r2:
          w: 0
          x: 0
          'y': 0
          z: 1
        r3:
          w: 1
          x: 0
          'y': 0
          z: 0
      nullable: true
      properties:
        r0:
          $ref: '#/components/schemas/Vector4'
        r1:
          $ref: '#/components/schemas/Vector4'
        r2:
          $ref: '#/components/schemas/Vector4'
        r3:
          $ref: '#/components/schemas/Vector4'
      required:
        - r0
        - r1
        - r2
        - r3
      type: object
    Meta:
      additionalProperties:
        type: string
      type: object
    MetadataValue:
      properties:
        type:
          description: Type of metadata value.
          enum:
            - string
            - long
            - float
            - date
            - 'null'
          example: string
          maxLength: 32
          type: string
        value:
          description: Metadata value.
          example: Rev A
          maxLength: 1024
          type: string
      required:
        - type
      type: object
    NonEmptyString:
      example: some-string
      maxLength: 1024
      minLength: 1
      type: string
    OAuth2BadRequest:
      additionalProperties: false
      properties:
        error:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
      required:
        - error
      type: object
    OAuth2Token:
      additionalProperties: false
      properties:
        access_token:
          example: HnkQzHpk4iTaPfssu3zpI.PTbAxKdDIfrNcgrmsxQqg
          type: string
        account_id:
          example: 7b3f55e2-60f3-4bf3-82bc-f8afbce843b0
          type: string
        expires_in:
          example: 3600
          format: int32
          type: integer
        scopes:
          items:
            $ref: '#/components/schemas/NonEmptyString'
          type: array
        token_type:
          example: bearer
          type: string
      required:
        - access_token
        - account_id
        - expires_in
        - scopes
        - token_type
      type: object
    Opacity:
      description: Opacity from 0 to 100.
      example: 0
      format: int32
      maximum: 100
      minimum: 0
      type: integer
    Part:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/PartData'
        included:
          items:
            $ref: '#/components/schemas/PartRevisionData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    PartData:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/PartData_attributes'
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        relationships:
          $ref: '#/components/schemas/PartData_relationships'
        type:
          example: part
          type: string
      required:
        - attributes
        - id
        - type
      type: object
    PartData_attributes:
      properties:
        created:
          example: '2020-01-01T12:00:00Z'
          format: date-time
          type: string
        name:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        suppliedId:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
      required:
        - created
        - name
        - suppliedId
      type: object
    PartData_relationships:
      properties:
        partRevisions:
          items:
            $ref: '#/components/schemas/PartData_relationships_partRevisions'
          type: array
      required:
        - partRevisions
      type: object
    PartData_relationships_partRevisions:
      properties:
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        type:
          description: Resource object type.
          enum:
            - part-revision
          example: part-revision
          maxLength: 32
          type: string
      required:
        - id
        - type
      type: object
    PartList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/PartData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    PartRelationshipData:
      additionalProperties: false
      properties:
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        type:
          description: Resource object type.
          enum:
            - part
          example: part
          maxLength: 32
          type: string
      required:
        - id
        - type
      type: object
    PartRevision:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/PartRevisionData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    PartRevisionData:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/PartRevisionData_attributes'
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        relationships:
          $ref: '#/components/schemas/PartRevisionData_relationships'
        type:
          example: part-revision
          type: string
      required:
        - attributes
        - id
        - relationships
        - type
      type: object
    PartRevisionData_attributes:
      properties:
        created:
          example: '2020-01-01T12:00:00Z'
          format: date-time
          type: string
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/MetadataValue'
          type: object
        suppliedId:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
      type: object
    PartRevisionData_relationships:
      properties:
        geometrySet:
          $ref: '#/components/schemas/GeometrySetRelationshipData'
        part:
          $ref: '#/components/schemas/PartRelationshipData'
      type: object
    PartRevisionList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/PartRevisionData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    PartRevisionRelationship:
      additionalProperties: false
      description: Relationship to a `part-revision`.
      properties:
        data:
          $ref: '#/components/schemas/PartData_relationships_partRevisions'
      required:
        - data
      type: object
    PartRevisionSuppliedId:
      additionalProperties: false
      properties:
        suppliedPartId:
          description: >-
            ID provided for correlation. For example, an existing ID from a PLM
            system.
          maxLength: 1024
          type: string
        suppliedRevisionId:
          description: >-
            ID provided for correlation. For example, an existing ID from a PLM
            system.
          maxLength: 1024
          type: string
      required:
        - suppliedPartId
        - suppliedRevisionId
      type: object
    Point:
      additionalProperties: false
      description: 2D point.
      properties:
        dx:
          description: x-axis coordinate.
          example: 0
          format: int32
          type: integer
        dy:
          description: y-axis coordinate.
          example: 0
          format: int32
          type: integer
      required:
        - dx
        - dy
      type: object
    QueryAll:
      description: Resource object type.
      enum:
        - all
      example: all
      maxLength: 32
      type: string
    QueryByCollection:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/QueryByCollection_data'
      required:
        - data
      type: object
    QueryByCollection_data:
      properties:
        attributes:
          $ref: '#/components/schemas/QueryByCollection_data_attributes'
        type:
          description: Resource object type.
          enum:
            - query-by-collection
          example: query-by-collection
          maxLength: 32
          type: string
      required:
        - attributes
        - type
      type: object
    QueryByCollection_data_attributes:
      properties:
        type:
          description: Resource object type.
          enum:
            - and
            - or
          example: and
          maxLength: 32
          type: string
        values:
          description: Query `scene-items`.
          items:
            $ref: '#/components/schemas/QueryById'
          maxItems: 1024
          type: array
      required:
        - type
        - values
      type: object
    QueryById:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/QueryById_data'
      required:
        - data
      type: object
    QueryById_data:
      properties:
        attributes:
          $ref: '#/components/schemas/QueryById_data_attributes'
        type:
          description: Resource object type.
          enum:
            - query-by-id
          example: query-by-id
          maxLength: 32
          type: string
      required:
        - attributes
        - type
      type: object
    QueryById_data_attributes:
      properties:
        type:
          description: Resource object type.
          enum:
            - id
            - suppliedId
          example: suppliedId
          maxLength: 32
          type: string
        value:
          description: ID of the resource.
          maxLength: 1024
          type: string
      required:
        - type
        - value
      type: object
    QueuedJob:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/QueuedJob_data'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    QueuedJob_data:
      properties:
        attributes:
          $ref: '#/components/schemas/QueuedJob_data_attributes'
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        type:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
      required:
        - attributes
        - id
        - type
      type: object
    QueuedJob_data_attributes:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Error'
          maxItems: 20
          type: array
          uniqueItems: true
        status:
          example: running
          type: string
      required:
        - status
      type: object
    RelationshipData:
      additionalProperties: false
      properties:
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        type:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
      required:
        - id
        - type
      type: object
    RevokeOAuth2TokenRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/RevokeOAuth2TokenRequest_data'
      required:
        - data
      type: object
    RevokeOAuth2TokenRequest_data:
      properties:
        attributes:
          $ref: '#/components/schemas/RevokeOAuth2TokenRequest_data_attributes'
        type:
          description: Resource object type.
          example: oauth2
          maxLength: 32
          type: string
      required:
        - attributes
        - type
      type: object
    RevokeOAuth2TokenRequest_data_attributes:
      properties:
        token:
          description: Token to revoke.
          example: yj4oeKWCib6JlLsN64Ns.9CyY4gvhueXfCw6wPBJ6
          maxLength: 1024
          type: string
      required:
        - token
      type: object
    Scene:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/SceneData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    SceneAlteration:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/SceneAlterationData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    SceneAlterationData:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/Hit_data_attributes'
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        relationships:
          $ref: '#/components/schemas/SceneAlterationData_relationships'
        type:
          example: scene-alteration
          type: string
      required:
        - attributes
        - id
        - relationships
        - type
      type: object
    SceneAlterationData_relationships:
      properties:
        sceneView:
          $ref: '#/components/schemas/SceneViewRelationship'
      required:
        - sceneView
      type: object
    SceneAlterationList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/SceneAlterationData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    SceneData:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/SceneData_attributes'
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        type:
          example: scene
          type: string
      required:
        - attributes
        - id
        - type
      type: object
    SceneData_attributes:
      properties:
        camera:
          $ref: '#/components/schemas/Camera'
        created:
          example: '2020-01-01T12:00:00Z'
          format: date-time
          type: string
        name:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        state:
          example: draft
          type: string
        suppliedId:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
      required:
        - created
        - state
      type: object
    SceneItem:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/SceneItemData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    SceneItemData:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/SceneItemData_attributes'
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        relationships:
          $ref: '#/components/schemas/SceneItemData_relationships'
        type:
          example: scene-item
          type: string
      required:
        - attributes
        - id
        - relationships
        - type
      type: object
    SceneItemData_attributes:
      properties:
        created:
          example: '2020-01-01T12:00:00Z'
          format: date-time
          type: string
        materialOverride:
          $ref: '#/components/schemas/ColorMaterial'
        suppliedId:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        transform:
          $ref: '#/components/schemas/Matrix4'
        visible:
          example: true
          type: boolean
      required:
        - created
        - suppliedId
        - transform
        - visible
      type: object
    SceneItemData_relationships:
      properties:
        parent:
          $ref: '#/components/schemas/SceneItemRelationship'
        source:
          anyOf:
            - $ref: '#/components/schemas/GeometrySetRelationship'
            - $ref: '#/components/schemas/PartRevisionRelationship'
            - $ref: '#/components/schemas/SceneRelationship'
      type: object
    SceneItemList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/SceneItemData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    SceneItemOverride:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/SceneItemOverrideData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    SceneItemOverrideData:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/SceneItemOverrideData_attributes'
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        relationships:
          $ref: '#/components/schemas/SceneItemOverrideData_relationships'
        type:
          example: scene-item-override
          type: string
      required:
        - attributes
        - id
        - relationships
        - type
      type: object
    SceneItemOverrideData_attributes:
      properties:
        created:
          example: '2020-01-01T12:00:00Z'
          format: date-time
          type: string
        material:
          $ref: '#/components/schemas/ColorMaterial'
        transform:
          $ref: '#/components/schemas/Matrix4'
        visible:
          example: true
          type: boolean
      required:
        - created
      type: object
    SceneItemOverrideData_relationships:
      properties:
        sceneItem:
          $ref: '#/components/schemas/SceneItemRelationship'
        sceneView:
          $ref: '#/components/schemas/SceneViewRelationship'
      required:
        - sceneItem
        - sceneView
      type: object
    SceneItemOverrideList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/SceneItemOverrideData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    SceneItemRelationship:
      additionalProperties: false
      description: Relationship to a `scene-item`.
      properties:
        data:
          $ref: '#/components/schemas/SceneItemRelationship_data'
      required:
        - data
      type: object
    SceneItemRelationship_data:
      properties:
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        type:
          description: Resource object type.
          enum:
            - scene-item
          example: scene-item
          maxLength: 32
          type: string
      required:
        - id
        - type
      type: object
    SceneList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/SceneData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    SceneOperation:
      additionalProperties: false
      properties:
        operations:
          description: List of operations to perform on `scene-items` matching the query.
          items:
            anyOf:
              - $ref: '#/components/schemas/ChangeVisibilityOperation'
              - $ref: '#/components/schemas/ChangeMaterialOperation'
              - $ref: '#/components/schemas/ClearMaterialOperation'
              - $ref: '#/components/schemas/ChangeTransformOperation'
              - $ref: '#/components/schemas/ClearTransformOperation'
          maxItems: 1024
          type: array
        query:
          anyOf:
            - $ref: '#/components/schemas/QueryById'
            - $ref: '#/components/schemas/QueryByCollection'
            - $ref: '#/components/schemas/QueryAll'
          description: >-
            Query `scene-items`. Use `query-by-collection` to combine multiple
            queries.
      required:
        - operations
        - query
      type: object
    SceneRelationship:
      additionalProperties: false
      description: Relationship to a `scene`.
      properties:
        data:
          $ref: '#/components/schemas/SceneRelationship_data'
      required:
        - data
      type: object
    SceneRelationship_data:
      properties:
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        type:
          description: Resource object type.
          enum:
            - scene
          example: scene
          maxLength: 32
          type: string
      required:
        - id
        - type
      type: object
    SceneTemplate:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/SceneTemplateData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    SceneTemplateData:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/SceneTemplateData_attributes'
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        type:
          example: scene-template
          type: string
      required:
        - attributes
        - id
        - type
      type: object
    SceneTemplateData_attributes:
      properties:
        created:
          example: '2020-01-01T12:00:00Z'
          format: date-time
          type: string
        name:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        suppliedId:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
      required:
        - created
        - suppliedId
      type: object
    SceneTemplateList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/SceneTemplateData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    SceneTemplateRelationship:
      additionalProperties: false
      description: Relationship to a `scene-template`.
      properties:
        data:
          $ref: '#/components/schemas/SceneTemplateRelationship_data'
      required:
        - data
      type: object
    SceneTemplateRelationship_data:
      properties:
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        type:
          description: Resource object type.
          enum:
            - scene-template
          example: scene-template
          maxLength: 32
          type: string
      required:
        - id
        - type
      type: object
    SceneView:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/SceneView_data'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    SceneViewRelationship:
      additionalProperties: false
      description: Relationship to a `scene-view`.
      properties:
        data:
          $ref: '#/components/schemas/SceneViewRelationship_data'
      required:
        - data
      type: object
    SceneViewRelationship_data:
      properties:
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        type:
          description: Resource object type.
          enum:
            - scene-view
          example: scene-view
          maxLength: 32
          type: string
      required:
        - id
        - type
      type: object
    SceneView_data:
      properties:
        attributes:
          $ref: '#/components/schemas/SceneView_data_attributes'
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        relationships:
          $ref: '#/components/schemas/SceneView_data_relationships'
        type:
          example: scene-view
          type: string
      required:
        - attributes
        - id
        - relationships
        - type
      type: object
    SceneView_data_attributes:
      properties:
        camera:
          $ref: '#/components/schemas/Camera'
        created:
          example: '2020-01-01T12:00:00Z'
          format: date-time
          type: string
      required:
        - camera
        - created
      type: object
    SceneView_data_relationships:
      properties:
        scene:
          $ref: '#/components/schemas/SceneRelationship'
      required:
        - scene
      type: object
    StreamKey:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/StreamKeyData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    StreamKeyData:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/StreamKeyData_attributes'
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        relationships:
          $ref: '#/components/schemas/SceneView_data_relationships'
        type:
          example: stream-key
          type: string
      required:
        - attributes
        - id
        - relationships
        - type
      type: object
    StreamKeyData_attributes:
      properties:
        created:
          example: '2020-01-01T12:00:00Z'
          format: date-time
          type: string
        expiry:
          example: 600
          format: int32
          type: integer
        key:
          example: i3MFRDOmg1pxD36dGCTONRwOujkgV8m9LQ
          type: string
      required:
        - created
        - expiry
      type: object
    StreamKeyList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/StreamKeyData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    TranslationInspectionJob:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/TranslationInspectionJob_data'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    TranslationInspectionJob_data:
      properties:
        attributes:
          $ref: '#/components/schemas/TranslationInspectionJob_data_attributes'
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        type:
          example: translation-inspection
          type: string
      required:
        - attributes
        - id
        - type
      type: object
    TranslationInspectionJob_data_attributes:
      properties:
        missing:
          items:
            $ref: '#/components/schemas/NonEmptyString'
          type: array
        status:
          example: running
          type: string
      required:
        - missing
        - status
      type: object
    UpdatePartRevisionRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/UpdatePartRevisionRequest_data'
      required:
        - data
      type: object
    UpdatePartRevisionRequest_data:
      properties:
        attributes:
          $ref: '#/components/schemas/UpdatePartRevisionRequest_data_attributes'
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        type:
          description: Resource object type.
          example: part-revision
          maxLength: 32
          type: string
      required:
        - attributes
        - id
        - type
      type: object
    UpdatePartRevisionRequest_data_attributes:
      properties:
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/MetadataValue'
          description: Metadata about the `part` and/or `part-revision`.
          type: object
      type: object
    UpdateSceneItemOverrideRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/UpdateSceneItemOverrideRequest_data'
      required:
        - data
      type: object
    UpdateSceneItemOverrideRequest_data:
      properties:
        attributes:
          $ref: '#/components/schemas/UpdateSceneItemOverrideRequest_data_attributes'
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        type:
          description: Resource object type.
          example: scene-item-override
          maxLength: 32
          type: string
      required:
        - attributes
        - id
        - type
      type: object
    UpdateSceneItemOverrideRequest_data_attributes:
      properties:
        material:
          $ref: '#/components/schemas/ColorMaterialNullable'
        transform:
          $ref: '#/components/schemas/Matrix4Nullable'
        visible:
          description: Item visibility.
          example: true
          nullable: true
          type: boolean
      type: object
    UpdateSceneItemRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/UpdateSceneItemRequest_data'
      required:
        - data
      type: object
    UpdateSceneItemRequest_data:
      properties:
        attributes:
          $ref: '#/components/schemas/UpdateSceneItemRequest_data_attributes'
        type:
          description: Resource object type.
          example: scene-item
          maxLength: 32
          type: string
      required:
        - attributes
        - type
      type: object
    UpdateSceneItemRequest_data_attributes:
      properties:
        materialOverride:
          $ref: '#/components/schemas/MaterialOverride'
        transform:
          $ref: '#/components/schemas/Matrix4'
        visible:
          description: Item visibility.
          example: true
          type: boolean
      type: object
    UpdateSceneRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/UpdateSceneRequest_data'
      required:
        - data
      type: object
    UpdateSceneRequest_data:
      properties:
        attributes:
          $ref: '#/components/schemas/UpdateSceneRequest_data_attributes'
        type:
          description: Resource object type.
          example: scene
          maxLength: 32
          type: string
      required:
        - attributes
        - type
      type: object
    UpdateSceneRequest_data_attributes:
      properties:
        camera:
          anyOf:
            - $ref: '#/components/schemas/Camera'
            - $ref: '#/components/schemas/CameraFit'
        name:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        state:
          description: State of the scene.
          enum:
            - draft
            - commit
          example: commit
          maxLength: 32
          type: string
        suppliedId:
          description: >-
            ID provided for correlation. For example, an existing ID from a PLM
            system.
          example: PN12345
          maxLength: 1024
          type: string
      type: object
    UpdateSceneViewRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/UpdateSceneViewRequest_data'
      required:
        - data
      type: object
    UpdateSceneViewRequest_data:
      properties:
        attributes:
          $ref: '#/components/schemas/UpdateSceneViewRequest_data_attributes'
        type:
          description: Resource object type.
          example: scene-view
          maxLength: 32
          type: string
      required:
        - attributes
        - type
      type: object
    UpdateSceneViewRequest_data_attributes:
      properties:
        camera:
          anyOf:
            - $ref: '#/components/schemas/Camera'
            - $ref: '#/components/schemas/CameraFit'
      type: object
    Uuid:
      description: ID of the resource.
      example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
      format: uuid
      maxLength: 36
      type: string
    Vector3:
      additionalProperties: false
      description: 3D vector.
      properties:
        x:
          description: x-axis coordinate.
          example: 1
          type: number
        'y':
          description: y-axis coordinate.
          example: 0
          type: number
        z:
          description: z-axis coordinate.
          example: 0
          type: number
      required:
        - x
        - 'y'
        - z
      type: object
    Vector4:
      additionalProperties: false
      description: 4D vector.
      properties:
        w:
          description: w value.
          example: 0
          type: number
        x:
          description: x-axis coordinate.
          example: 1
          type: number
        'y':
          description: y-axis coordinate.
          example: 0
          type: number
        z:
          description: z-axis coordinate.
          example: 0
          type: number
      required:
        - w
        - x
        - 'y'
        - z
      type: object
  securitySchemes:
    OAuth2:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: /oauth2/token
      type: oauth2
    basicAuth:
      scheme: basic
      type: http
externalDocs:
  description: Getting started guides
  url: 'https://developer.vertexvis.com/docs/guides/getting-started'
info:
  contact:
    name: Vertex API support
    url: 'https://developer.vertexvis.com/docs/support'
  description: >
    The Vertex distributed cloud rendering platform includes a set of APIs and
    SDKs, which together allow easily integrating 3D product data into your
    business application.


    See our [Developer Portal
    Guides](https://developer.vertexvis.com/docs/guides/getting-started/) to get
    started.


    Note that we use auto-generated UUIDs in example requests that may share the
    same value. This is for ease of documentation only. In actual requests and
    responses, they should uniquely identify their corresponding resource.
  termsOfService: 'https://vertexvis.com/terms-of-use'
  title: Vertex Platform API
  version: '1.0'
  x-logo:
    altText: Vertex Software
    backgroundColor: '#ffffff'
    url: 'https://vertexvis.com/themes/custom/sparrow/img/vertex-logo.png'
openapi: 3.0.3
paths:
  /files:
    get:
      description: |+

        Get `files`.

      operationId: getFiles
      parameters:
        - description: The cursor for the next page of items.
          explode: true
          in: query
          name: 'page[cursor]'
          required: false
          schema:
            example: cHJkMDVFR2RLag==
            type: string
          style: form
        - description: The number of items to return.
          explode: true
          in: query
          name: 'page[size]'
          required: false
          schema:
            example: 10
            format: int32
            maximum: 200
            minimum: 1
            type: integer
          style: form
        - description: Comma-separated list of supplied IDs to filter on.
          explode: true
          in: query
          name: 'filter[suppliedId]'
          required: false
          schema:
            example: 'some-id-1,some-id-2'
            maxLength: 1024
            type: string
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FileList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - files
    post:
      description: >+

        Create a `file`. Once created, upload file content via the uploadFile
        API. For details including supported file formats, see our [Importing
        data](https://developer.vertexvis.com/docs/guides/importing-data) guide.


        ###### Body Params


        |Name|Type|Required|Description|

        |---|---|---|---|

        |data|CreateFileRequest_data|true||

        |▹ attributes|CreateFileRequest_data_attributes|true||

        |▹▹ name|string|true|Name matching that of the file you are uploading,
        including file extension.|

        |▹▹ rootFileName|string|false|File name of the root part or assembly,
        including file extension. Required if `name` references an archive file
        extension, ignored otherwise.|

        |▹▹ suppliedId|string|false|ID provided for correlation. For example, an
        existing ID from a PLM system.|

        |▹ type|string|true|Resource object type.|

      operationId: createFile
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateFileRequest'
        required: true
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FileMetadata'
          description: Created
          headers:
            location:
              $ref: '#/components/headers/Location'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: BadRequest
                    status: '400'
                    title: 'Invalid, missing, or out-of-range request parameters.'
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - files
  '/files/{id}':
    delete:
      description: |+

        Delete a `file`.

      operationId: deleteFile
      parameters:
        - description: The `file` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FileMetadata'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - files
    get:
      description: |+

        Get a `file` by ID.

      operationId: getFile
      parameters:
        - description: The `file` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FileMetadata'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - files
    post:
      description: >+

        Upload a `file`. Once uploaded, create either parts or geometry sets via
        the createPart or createGeometrySet APIs.

      operationId: uploadFile
      parameters:
        - description: The `file` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
        required: true
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: BadRequest
                    status: '400'
                    title: 'Invalid, missing, or out-of-range request parameters.'
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - files
  /geometry-sets:
    get:
      description: |+

        Get `geometry-sets`.

      operationId: getGeometrySets
      parameters:
        - description: The cursor for the next page of items.
          explode: true
          in: query
          name: 'page[cursor]'
          required: false
          schema:
            example: cHJkMDVFR2RLag==
            type: string
          style: form
        - description: The number of items to return.
          explode: true
          in: query
          name: 'page[size]'
          required: false
          schema:
            example: 10
            format: int32
            maximum: 200
            minimum: 1
            type: integer
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GeometrySetList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - geometry-sets
    post:
      description: >+

        Create a `geometry-set`. Once created, create scenes via the createScene
        API. For details, see our [Importing
        data](https://developer.vertexvis.com/docs/guides/importing-data) guide.


        ###### Body Params


        |Name|Type|Required|Description|

        |---|---|---|---|

        |data|CreateGeometrySetRequest_data|true||

        |▹ relationships|CreateGeometrySetRequest_data_relationships|true||

        |▹▹ source|FileRelationship|true|Relationship to a `file`.|

        |▹▹▹ data|FileRelationship_data|true||

        |▹▹▹▹ id|string(uuid)|true|ID of the resource.|

        |▹▹▹▹ type|enum(file)|true|Resource object type.|

        |▹ type|string|true|Resource object type.|

      operationId: createGeometrySet
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateGeometrySetRequest'
        required: true
      responses:
        '202':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: Accepted
          headers:
            content-location:
              $ref: '#/components/headers/ContentLocation'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: BadRequest
                    status: '400'
                    title: 'Invalid, missing, or out-of-range request parameters.'
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - geometry-sets
  '/geometry-sets/{id}':
    get:
      description: |+

        Get a `geometry-set` by ID.

      operationId: getGeometrySet
      parameters:
        - description: The `geometry-set` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GeometrySet'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - geometry-sets
  /oauth2/revoke:
    post:
      description: |+

        Revoke an OAuth2 access token.

        ###### Body Params

        |Name|Type|Required|Description|
        |---|---|---|---|
        |data|RevokeOAuth2TokenRequest_data|true||
        |▹ attributes|RevokeOAuth2TokenRequest_data_attributes|true||
        |▹▹ token|string|true|Token to revoke.|
        |▹ type|string|true|Resource object type.|

      operationId: revokeToken
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RevokeOAuth2TokenRequest'
        required: true
      responses:
        '204':
          description: No Content
      security:
        - basicAuth: []
      tags:
        - oauth2
  /oauth2/token:
    post:
      description: >+

        Create an OAuth2 access token. For details, see our
        [Authentication](https://developer.vertexvis.com/docs/guides/authentication)
        guide.


        ###### Body Params


        |Name|Type|Required|Description|

        |---|---|---|---|

        |grant_type|string|true||

        |scope|string|false||

      operationId: createToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateTokenRequest'
        required: true
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OAuth2Token'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OAuth2BadRequest'
          description: Invalid or missing request.
      security:
        - basicAuth: []
      tags:
        - oauth2
  '/part-revisions/{id}':
    get:
      description: |+

        Get a `part-revision` by ID.

      operationId: getPartRevision
      parameters:
        - description: The `part-revision` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
        - description: >-
            Comma-separated list of fields to return in response. An empty value
            returns no fields. Due to its potential size, metadata is only
            returned if explicitly requested.
          explode: true
          in: query
          name: 'fields[part-revision]'
          required: false
          schema:
            example: 'created,suppliedId'
            maxLength: 32
            type: string
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PartRevision'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - part-revisions
      x-scala-package: translations
    patch:
      description: >+

        Update a `part-revision`. Note that metadata updates are eventually
        consistent.


        ###### Body Params


        |Name|Type|Required|Description|

        |---|---|---|---|

        |data|UpdatePartRevisionRequest_data|true||

        |▹ attributes|UpdatePartRevisionRequest_data_attributes|true||

        |▹▹ metadata|object|false|Metadata about the `part` and/or
        `part-revision`.|

        |▹▹▹ **additionalProperties**|MetadataValue|false||

        |▹▹▹▹ type|enum(string, long, float, date, null)|true|Type of metadata
        value.|

        |▹▹▹▹ value|string|false|Metadata value.|

        |▹ id|string(uuid)|true|ID of the resource.|

        |▹ type|string|true|Resource object type.|

      operationId: updatePartRevision
      parameters:
        - description: The `part-revision` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdatePartRevisionRequest'
        required: true
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PartRevision'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: BadRequest
                    status: '400'
                    title: 'Invalid, missing, or out-of-range request parameters.'
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - part-revisions
  '/part-revisions/{id}/image':
    get:
      description: |+

        Get a rendered image of a `part-revision`.

      operationId: renderPartRevision
      parameters:
        - description: The `part-revision` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
        - description: The height of the image to render.
          explode: true
          in: query
          name: height
          required: false
          schema:
            example: 1000
            format: int32
            maximum: 2160
            minimum: 1
            type: integer
          style: form
        - description: The width of the image to render.
          explode: true
          in: query
          name: width
          required: false
          schema:
            example: 1000
            format: int32
            maximum: 3840
            minimum: 1
            type: integer
          style: form
      responses:
        '200':
          content:
            image/jpeg:
              schema:
                format: binary
                type: string
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - part-revisions
  /parts:
    get:
      description: |+

        Get `parts`.

      operationId: getParts
      parameters:
        - description: The cursor for the next page of items.
          explode: true
          in: query
          name: 'page[cursor]'
          required: false
          schema:
            example: cHJkMDVFR2RLag==
            type: string
          style: form
        - description: The number of items to return.
          explode: true
          in: query
          name: 'page[size]'
          required: false
          schema:
            example: 10
            format: int32
            maximum: 200
            minimum: 1
            type: integer
          style: form
        - description: Comma-separated list of supplied IDs to filter on.
          explode: true
          in: query
          name: 'filter[suppliedId]'
          required: false
          schema:
            example: 'some-id-1,some-id-2'
            maxLength: 1024
            type: string
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PartList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - parts
    post:
      description: >+

        Create a `part`. This API is asynchronous, returning the location of a
        `queued-translation`. Check the status via the getQueuedTranslation API.
        For details, see our [Importing
        data](https://developer.vertexvis.com/docs/guides/importing-data) guide.


        ###### Body Params


        |Name|Type|Required|Description|

        |---|---|---|---|

        |data|CreatePartRequest_data|true||

        |▹ attributes|CreatePartRequest_data_attributes|true||

        |▹▹ indexMetadata|boolean|false|Whether or not to index metadata in the
        part file.|

        |▹▹ suppliedId|string|true|ID provided for correlation. For example, an
        existing ID from a PLM system.|

        |▹▹ suppliedRevisionId|string|true|ID provided for correlation. For
        example, an existing ID from a PLM system.|

        |▹ relationships|CreateGeometrySetRequest_data_relationships|true||

        |▹▹ source|FileRelationship|true|Relationship to a `file`.|

        |▹▹▹ data|FileRelationship_data|true||

        |▹▹▹▹ id|string(uuid)|true|ID of the resource.|

        |▹▹▹▹ type|enum(file)|true|Resource object type.|

        |▹ type|string|true|Resource object type.|

      operationId: createPart
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreatePartRequest'
        required: true
      responses:
        '202':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: Accepted
          headers:
            content-location:
              $ref: '#/components/headers/ContentLocation'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: BadRequest
                    status: '400'
                    title: 'Invalid, missing, or out-of-range request parameters.'
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - parts
  '/parts/{id}':
    get:
      description: |+

        Get a `part` by ID.

      operationId: getPart
      parameters:
        - description: Comma-separated list of relationships to include in response.
          explode: true
          in: query
          name: include
          required: false
          schema:
            example: partRevisions
            maxLength: 32
            type: string
          style: form
        - description: The `part` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Part'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - parts
  '/parts/{id}/part-revisions':
    get:
      description: |+

        Get `part-revisions`.

      operationId: getPartRevisions
      parameters:
        - description: The `part` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
        - description: The cursor for the next page of items.
          explode: true
          in: query
          name: 'page[cursor]'
          required: false
          schema:
            example: cHJkMDVFR2RLag==
            type: string
          style: form
        - description: The number of items to return.
          explode: true
          in: query
          name: 'page[size]'
          required: false
          schema:
            example: 10
            format: int32
            maximum: 200
            minimum: 1
            type: integer
          style: form
        - description: Comma-separated list of supplied IDs to filter on.
          explode: true
          in: query
          name: 'filter[suppliedId]'
          required: false
          schema:
            example: 'some-id-1,some-id-2'
            maxLength: 1024
            type: string
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PartRevisionList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - part-revisions
  '/queued-scene-alterations/{id}':
    get:
      description: |+

        Get a `queued-scene-alteration` by ID.

      operationId: getQueuedSceneAlteration
      parameters:
        - description: The `queued-scene-alteration` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: OK
        '301':
          description: Moved Permanently
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-alterations
  '/queued-scene-items/{id}':
    get:
      description: >+

        Get a `queued-scene-item`. The response is either the status if
        `running` or `error` or, upon completion, redirects to the created
        `scene-item`. Once created, commit the scene via the updateScene API.
        For details, see our [Rendering
        scenes](https://developer.vertexvis.com/docs/guides/rendering-scenes)
        guide.

      operationId: getQueuedSceneItem
      parameters:
        - description: The `queued-scene-item` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: OK
        '301':
          description: Moved Permanently
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-items
  '/queued-scene-templates/{id}':
    get:
      deprecated: true
      description: |+

        Get a `queued-scene-template`.

      operationId: getQueuedSceneTemplate
      parameters:
        - description: The `queued-scene-template` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-templates
  '/queued-scenes/{id}':
    get:
      description: |+

        Get a `queued-scene`.

      operationId: getQueuedScene
      parameters:
        - description: The `scene` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: OK
        '301':
          description: Moved Permanently
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scenes
  '/queued-translations/{id}':
    get:
      description: >+

        Get a `queued-translation`. The response is either the status if
        `running` or `error` or, upon completion, redirects to the created
        `part-revision`. Once created, create scenes via the createScene API.
        For details, see our [Rendering
        scenes](https://developer.vertexvis.com/docs/guides/rendering-scenes)
        guide.

      operationId: getQueuedTranslation
      parameters:
        - description: The `queued-translation` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: OK
        '301':
          description: Moved Permanently
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - translation-inspections
  '/scene-alterations/{id}':
    get:
      description: |+

        Get a `scene-alteration` by ID.

      operationId: getSceneAlteration
      parameters:
        - description: The `scene-alteration` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneAlteration'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-alterations
  '/scene-item-overrides/{id}':
    delete:
      description: |+

        Delete a `scene-item-override`.

      operationId: deleteSceneItemOverride
      parameters:
        - description: The `scene-item-override` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '204':
          description: No Content
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-item-overrides
    patch:
      description: >+

        Update a `scene-item-override`.


        ###### Body Params


        |Name|Type|Required|Description|

        |---|---|---|---|

        |data|UpdateSceneItemOverrideRequest_data|true||

        |▹ attributes|UpdateSceneItemOverrideRequest_data_attributes|true||

        |▹▹ material|ColorMaterialNullable¦null|false|Color properties
        describing how a material looks.|

        |▹▹▹ ambient|Color3|true|RGB color.|

        |▹▹▹▹ b|integer(int32)|true|Color value from 0 to 255.|

        |▹▹▹▹ g|integer(int32)|true|Color value from 0 to 255.|

        |▹▹▹▹ r|integer(int32)|true|Color value from 0 to 255.|

        |▹▹▹ diffuse|Color3|true|RGB color.|

        |▹▹▹ emissive|Color3|true|RGB color.|

        |▹▹▹ glossiness|integer(int32)|true|Glossiness from 0 to 128.|

        |▹▹▹ opacity|integer(int32)|true|Opacity from 0 to 100.|

        |▹▹▹ specular|Color3|true|RGB color.|

        |▹▹ transform|Matrix4Nullable¦null|false|4x4 affine transformation
        matrix, see [Transformation
        Matrices](https://developer.vertexvis.com/docs/guides/rendering-scenes#transformation-matrices)
        for details.|

        |▹▹▹ r0|Vector4|true|4D vector.|

        |▹▹▹▹ w|number|true|w value.|

        |▹▹▹▹ x|number|true|x-axis coordinate.|

        |▹▹▹▹ y|number|true|y-axis coordinate.|

        |▹▹▹▹ z|number|true|z-axis coordinate.|

        |▹▹▹ r1|Vector4|true|4D vector.|

        |▹▹▹ r2|Vector4|true|4D vector.|

        |▹▹▹ r3|Vector4|true|4D vector.|

        |▹▹ visible|boolean¦null|false|Item visibility.|

        |▹ id|string(uuid)|true|ID of the resource.|

        |▹ type|string|true|Resource object type.|

      operationId: updateSceneItemOverride
      parameters:
        - description: The `scene-item-override` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateSceneItemOverrideRequest'
        required: true
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneItemOverride'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: BadRequest
                    status: '400'
                    title: 'Invalid, missing, or out-of-range request parameters.'
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-item-overrides
  '/scene-items/{id}':
    delete:
      description: |+

        Delete a `scene-item`.

      operationId: deleteSceneItem
      parameters:
        - description: The `scene-item` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '204':
          description: No Content
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-items
    get:
      description: |+

        Get a `scene-item` by ID.

      operationId: getSceneItem
      parameters:
        - description: The `scene-item` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneItem'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-items
    patch:
      description: >+

        Update a `scene-item`.


        ###### Body Params


        |Name|Type|Required|Description|

        |---|---|---|---|

        |data|UpdateSceneItemRequest_data|true||

        |▹ attributes|UpdateSceneItemRequest_data_attributes|true||

        |▹▹ materialOverride|MaterialOverride|false|Color material override.|

        |▹▹▹ value|ColorMaterial|false|Color properties describing how a
        material looks.|

        |▹▹▹▹ ambient|Color3|true|RGB color.|

        |▹▹▹▹▹ b|integer(int32)|true|Color value from 0 to 255.|

        |▹▹▹▹▹ g|integer(int32)|true|Color value from 0 to 255.|

        |▹▹▹▹▹ r|integer(int32)|true|Color value from 0 to 255.|

        |▹▹▹▹ diffuse|Color3|true|RGB color.|

        |▹▹▹▹ emissive|Color3|true|RGB color.|

        |▹▹▹▹ glossiness|integer(int32)|true|Glossiness from 0 to 128.|

        |▹▹▹▹ opacity|integer(int32)|true|Opacity from 0 to 100.|

        |▹▹▹▹ specular|Color3|true|RGB color.|

        |▹▹ transform|Matrix4|false|4x4 affine transformation matrix, see
        [Transformation
        Matrices](https://developer.vertexvis.com/docs/guides/rendering-scenes#transformation-matrices)
        for details.|

        |▹▹▹ r0|Vector4|true|4D vector.|

        |▹▹▹▹ w|number|true|w value.|

        |▹▹▹▹ x|number|true|x-axis coordinate.|

        |▹▹▹▹ y|number|true|y-axis coordinate.|

        |▹▹▹▹ z|number|true|z-axis coordinate.|

        |▹▹▹ r1|Vector4|true|4D vector.|

        |▹▹▹ r2|Vector4|true|4D vector.|

        |▹▹▹ r3|Vector4|true|4D vector.|

        |▹▹ visible|boolean|false|Item visibility.|

        |▹ type|string|true|Resource object type.|

      operationId: updateSceneItem
      parameters:
        - description: The `scene-item` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateSceneItemRequest'
        required: true
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneItem'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: BadRequest
                    status: '400'
                    title: 'Invalid, missing, or out-of-range request parameters.'
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-items
  /scene-templates:
    get:
      deprecated: true
      description: |+

        Get `scene-templates`.

      operationId: getSceneTemplates
      parameters:
        - description: The cursor for the next page of items.
          explode: true
          in: query
          name: 'page[cursor]'
          required: false
          schema:
            example: cHJkMDVFR2RLag==
            type: string
          style: form
        - description: The number of items to return.
          explode: true
          in: query
          name: 'page[size]'
          required: false
          schema:
            example: 10
            format: int32
            maximum: 200
            minimum: 1
            type: integer
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneTemplateList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-templates
    post:
      deprecated: true
      description: >+

        Create a `scene-template`.


        ###### Body Params


        |Name|Type|Required|Description|

        |---|---|---|---|

        |data|CreateSceneTemplateRequest_data|true||

        |▹ attributes|CreateSceneTemplateRequest_data_attributes|true||

        |▹▹ name|string|false|Name of the scene template.|

        |▹▹ suppliedId|string|true|ID provided for correlation. For example, an
        existing ID from a PLM system.|

        |▹ relationships|CreateGeometrySetRequest_data_relationships|true||

        |▹▹ source|FileRelationship|true|Relationship to a `file`.|

        |▹▹▹ data|FileRelationship_data|true||

        |▹▹▹▹ id|string(uuid)|true|ID of the resource.|

        |▹▹▹▹ type|enum(file)|true|Resource object type.|

        |▹ type|string|true|Resource object type.|

      operationId: createSceneTemplate
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateSceneTemplateRequest'
        required: true
      responses:
        '202':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: Accepted
          headers:
            content-location:
              $ref: '#/components/headers/ContentLocation'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: BadRequest
                    status: '400'
                    title: 'Invalid, missing, or out-of-range request parameters.'
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-templates
  '/scene-templates/{id}':
    get:
      deprecated: true
      description: |+

        Get a `scene-template` by ID.

      operationId: getSceneTemplate
      parameters:
        - description: The `scene-template` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneTemplate'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-templates
  '/scene-views/{id}':
    delete:
      description: |+

        Delete a `scene-view`.

      operationId: deleteSceneView
      parameters:
        - description: The `scene-view` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '204':
          description: No Content
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-views
    get:
      description: |+

        Get a `scene-view` by ID.

      operationId: getSceneView
      parameters:
        - description: The `scene-view` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneView'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-views
    patch:
      description: >+

        Update a `scene-view`.


        ###### Body Params


        |Name|Type|Required|Description|

        |---|---|---|---|

        |data|UpdateSceneViewRequest_data|true||

        |▹ attributes|UpdateSceneViewRequest_data_attributes|true||

        |▹▹ camera|any|false||

        |▹▹▹ *anonymous*|Camera|false|Camera placement in 3D space.|

        |▹▹▹▹ lookAt|Vector3|true|3D vector.|

        |▹▹▹▹▹ x|number|true|x-axis coordinate.|

        |▹▹▹▹▹ y|number|true|y-axis coordinate.|

        |▹▹▹▹▹ z|number|true|z-axis coordinate.|

        |▹▹▹▹ position|Vector3|true|3D vector.|

        |▹▹▹▹ up|Vector3|true|3D vector.|

        |▹▹▹ *anonymous*|CameraFit|false|Fit camera in 3D space based on items
        in scene.|

        |▹▹▹▹ type|enum(fit-visible-scene-items)|true|Resource object type.|

        |▹ type|string|true|Resource object type.|

      operationId: updateSceneView
      parameters:
        - description: The `scene-view` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateSceneViewRequest'
        required: true
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneView'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: BadRequest
                    status: '400'
                    title: 'Invalid, missing, or out-of-range request parameters.'
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-views
  '/scene-views/{id}/hits':
    post:
      description: |+

        Create a `hit` for a `scene-view`.

        ###### Body Params

        |Name|Type|Required|Description|
        |---|---|---|---|
        |data|CreateHitRequest_data|true||
        |▹ attributes|CreateHitRequest_data_attributes|true||
        |▹▹ point|Point|true|2D point.|
        |▹▹▹ dx|integer(int32)|true|x-axis coordinate.|
        |▹▹▹ dy|integer(int32)|true|y-axis coordinate.|
        |▹▹ viewport|Dimensions|true|An item's height and width.|
        |▹▹▹ height|integer(int32)|true|Item's height.|
        |▹▹▹ width|integer(int32)|true|Item's width.|
        |▹ type|string|true|Resource object type.|

      operationId: createSceneViewHit
      parameters:
        - description: Comma-separated list of relationships to include in response.
          explode: true
          in: query
          name: include
          required: false
          schema:
            example: results.sceneItem.source
            maxLength: 32
            type: string
          style: form
        - description: The `scene-view` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
        - description: >-
            Comma-separated list of fields to return in response. An empty value
            returns no fields. Due to its potential size, metadata is only
            returned if explicitly requested.
          explode: true
          in: query
          name: 'fields[part-revision]'
          required: false
          schema:
            example: 'created,suppliedId'
            maxLength: 32
            type: string
          style: form
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateHitRequest'
        required: true
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Hit'
          description: Created
          headers:
            location:
              $ref: '#/components/headers/Location'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: BadRequest
                    status: '400'
                    title: 'Invalid, missing, or out-of-range request parameters.'
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - hits
  '/scene-views/{id}/image':
    get:
      description: >+

        Get a rendered image of a `scene-view`. If a single pixel is returned,
        ensure the `scene` is in the `commit` state and contains scene items.

      operationId: renderSceneView
      parameters:
        - description: The `scene-view` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
        - description: The height of the image to render.
          explode: true
          in: query
          name: height
          required: false
          schema:
            example: 1000
            format: int32
            maximum: 2160
            minimum: 1
            type: integer
          style: form
        - description: The width of the image to render.
          explode: true
          in: query
          name: width
          required: false
          schema:
            example: 1000
            format: int32
            maximum: 3840
            minimum: 1
            type: integer
          style: form
      responses:
        '200':
          content:
            image/jpeg:
              schema:
                format: binary
                type: string
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-views
  '/scene-views/{id}/scene-alterations':
    get:
      description: |+

        Get `scene-alterations`.

      operationId: getSceneAlterations
      parameters:
        - description: The `scene-view` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneAlterationList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-alterations
    post:
      description: >+

        Create a `scene-alteration` for a `scene-view`.


        ###### Body Params


        |Name|Type|Required|Description|

        |---|---|---|---|

        |data|CreateSceneAlterationRequest_data|true||

        |▹ attributes|CreateSceneAlterationRequest_data_attributes|true||

        |▹▹ alterations|[SceneOperation]|true|List of alterations to apply.|

        |▹▹▹ operations|[anyOf]|true|List of operations to perform on
        `scene-items` matching the query.|

        |▹▹▹▹ *anonymous*|ChangeVisibilityOperation|false||

        |▹▹▹▹▹ type|enum(change-visibility)|true|Resource object type.|

        |▹▹▹▹▹ visible|boolean|true|Item visibility.|

        |▹▹▹▹ *anonymous*|ChangeMaterialOperation|false||

        |▹▹▹▹▹ material|ColorMaterial|true|Color properties describing how a
        material looks.|

        |▹▹▹▹▹▹ ambient|Color3|true|RGB color.|

        |▹▹▹▹▹▹▹ b|integer(int32)|true|Color value from 0 to 255.|

        |▹▹▹▹▹▹▹ g|integer(int32)|true|Color value from 0 to 255.|

        |▹▹▹▹▹▹▹ r|integer(int32)|true|Color value from 0 to 255.|

        |▹▹▹▹▹▹ diffuse|Color3|true|RGB color.|

        |▹▹▹▹▹▹ emissive|Color3|true|RGB color.|

        |▹▹▹▹▹▹ glossiness|integer(int32)|true|Glossiness from 0 to 128.|

        |▹▹▹▹▹▹ opacity|integer(int32)|true|Opacity from 0 to 100.|

        |▹▹▹▹▹▹ specular|Color3|true|RGB color.|

        |▹▹▹▹▹ type|enum(change-material)|true|Resource object type.|

        |▹▹▹▹ *anonymous*|ClearMaterialOperation|false||

        |▹▹▹▹▹ type|enum(clear-material)|true|Resource object type.|

        |▹▹▹▹ *anonymous*|ChangeTransformOperation|false||

        |▹▹▹▹▹ transform|Matrix4|true|4x4 affine transformation matrix, see
        [Transformation
        Matrices](https://developer.vertexvis.com/docs/guides/rendering-scenes#transformation-matrices)
        for details.|

        |▹▹▹▹▹▹ r0|Vector4|true|4D vector.|

        |▹▹▹▹▹▹▹ w|number|true|w value.|

        |▹▹▹▹▹▹▹ x|number|true|x-axis coordinate.|

        |▹▹▹▹▹▹▹ y|number|true|y-axis coordinate.|

        |▹▹▹▹▹▹▹ z|number|true|z-axis coordinate.|

        |▹▹▹▹▹▹ r1|Vector4|true|4D vector.|

        |▹▹▹▹▹▹ r2|Vector4|true|4D vector.|

        |▹▹▹▹▹▹ r3|Vector4|true|4D vector.|

        |▹▹▹▹▹ type|enum(change-transform)|true|Resource object type.|

        |▹▹▹▹ *anonymous*|ClearTransformOperation|false||

        |▹▹▹▹▹ type|enum(clear-transform)|true|Resource object type.|

        |▹▹▹ query|any|true|Query `scene-items`. Use `query-by-collection` to
        combine multiple queries.|

        |▹▹▹▹ *anonymous*|QueryById|false||

        |▹▹▹▹▹ data|QueryById_data|true||

        |▹▹▹▹▹▹ attributes|QueryById_data_attributes|true||

        |▹▹▹▹▹▹▹ type|enum(id, suppliedId)|true|Resource object type.|

        |▹▹▹▹▹▹▹ value|string|true|ID of the resource.|

        |▹▹▹▹▹▹ type|enum(query-by-id)|true|Resource object type.|

        |▹▹▹▹ *anonymous*|QueryByCollection|false||

        |▹▹▹▹▹ data|QueryByCollection_data|true||

        |▹▹▹▹▹▹ attributes|QueryByCollection_data_attributes|true||

        |▹▹▹▹▹▹▹ type|enum(and, or)|true|Resource object type.|

        |▹▹▹▹▹▹▹ values|[QueryById]|true|Query `scene-items`.|

        |▹▹▹▹▹▹ type|enum(query-by-collection)|true|Resource object type.|

        |▹▹▹▹ *anonymous*|QueryAll|false|Resource object type.|

        |▹ type|string|true|Resource object type.|

      operationId: createSceneAlteration
      parameters:
        - description: The `scene-view` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateSceneAlterationRequest'
        required: true
      responses:
        '202':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: Accepted
          headers:
            content-location:
              $ref: '#/components/headers/ContentLocation'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: BadRequest
                    status: '400'
                    title: 'Invalid, missing, or out-of-range request parameters.'
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-alterations
  '/scene-views/{id}/scene-item-overrides':
    get:
      description: |+

        Get `scene-item-overrides` for a `scene-view`.

      operationId: getSceneItemOverrides
      parameters:
        - description: The `scene-view` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneItemOverrideList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-item-overrides
    post:
      description: >+

        Create a `scene-item-override` for a `scene-view`.


        ###### Body Params


        |Name|Type|Required|Description|

        |---|---|---|---|

        |data|CreateSceneItemOverrideRequest_data|true||

        |▹ attributes|CreateSceneItemOverrideRequest_data_attributes|true||

        |▹▹ material|ColorMaterial|false|Color properties describing how a
        material looks.|

        |▹▹▹ ambient|Color3|true|RGB color.|

        |▹▹▹▹ b|integer(int32)|true|Color value from 0 to 255.|

        |▹▹▹▹ g|integer(int32)|true|Color value from 0 to 255.|

        |▹▹▹▹ r|integer(int32)|true|Color value from 0 to 255.|

        |▹▹▹ diffuse|Color3|true|RGB color.|

        |▹▹▹ emissive|Color3|true|RGB color.|

        |▹▹▹ glossiness|integer(int32)|true|Glossiness from 0 to 128.|

        |▹▹▹ opacity|integer(int32)|true|Opacity from 0 to 100.|

        |▹▹▹ specular|Color3|true|RGB color.|

        |▹▹ transform|Matrix4|false|4x4 affine transformation matrix, see
        [Transformation
        Matrices](https://developer.vertexvis.com/docs/guides/rendering-scenes#transformation-matrices)
        for details.|

        |▹▹▹ r0|Vector4|true|4D vector.|

        |▹▹▹▹ w|number|true|w value.|

        |▹▹▹▹ x|number|true|x-axis coordinate.|

        |▹▹▹▹ y|number|true|y-axis coordinate.|

        |▹▹▹▹ z|number|true|z-axis coordinate.|

        |▹▹▹ r1|Vector4|true|4D vector.|

        |▹▹▹ r2|Vector4|true|4D vector.|

        |▹▹▹ r3|Vector4|true|4D vector.|

        |▹▹ visible|boolean|false|Item visibility.|

        |▹
        relationships|CreateSceneItemOverrideRequest_data_relationships|true||

        |▹▹ sceneItem|SceneItemRelationship|true|Relationship to a
        `scene-item`.|

        |▹▹▹ data|SceneItemRelationship_data|true||

        |▹▹▹▹ id|string(uuid)|true|ID of the resource.|

        |▹▹▹▹ type|enum(scene-item)|true|Resource object type.|

        |▹ type|string|true|Resource object type.|

      operationId: createSceneItemOverride
      parameters:
        - description: The `scene-view` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateSceneItemOverrideRequest'
        required: true
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneItemOverride'
          description: Created
          headers:
            location:
              $ref: '#/components/headers/Location'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: BadRequest
                    status: '400'
                    title: 'Invalid, missing, or out-of-range request parameters.'
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-item-overrides
  /scenes:
    get:
      description: |+

        Get `scenes`.

      operationId: getScenes
      parameters:
        - description: The cursor for the next page of items.
          explode: true
          in: query
          name: 'page[cursor]'
          required: false
          schema:
            example: cHJkMDVFR2RLag==
            type: string
          style: form
        - description: The number of items to return.
          explode: true
          in: query
          name: 'page[size]'
          required: false
          schema:
            example: 10
            format: int32
            maximum: 200
            minimum: 1
            type: integer
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scenes
    post:
      description: >+

        Create a `scene`. Once created, add scene items via the createSceneItem
        API. For details, see our [Rendering
        scenes](https://developer.vertexvis.com/docs/guides/rendering-scenes)
        guide.


        ###### Body Params


        |Name|Type|Required|Description|

        |---|---|---|---|

        |data|CreateSceneRequest_data|true||

        |▹ attributes|CreateSceneRequest_data_attributes|true||

        |▹▹ camera|Camera|false|Camera placement in 3D space.|

        |▹▹▹ lookAt|Vector3|true|3D vector.|

        |▹▹▹▹ x|number|true|x-axis coordinate.|

        |▹▹▹▹ y|number|true|y-axis coordinate.|

        |▹▹▹▹ z|number|true|z-axis coordinate.|

        |▹▹▹ position|Vector3|true|3D vector.|

        |▹▹▹ up|Vector3|true|3D vector.|

        |▹▹ name|string|false||

        |▹▹ suppliedId|string|false|ID provided for correlation. For example, an
        existing ID from a PLM system.|

        |▹ relationships|CreateSceneRequest_data_relationships|false||

        |▹▹ source|any|true||

        |▹▹▹ *anonymous*|SceneTemplateRelationship|false|Relationship to a
        `scene-template`.|

        |▹▹▹▹ data|SceneTemplateRelationship_data|true||

        |▹▹▹▹▹ id|string(uuid)|true|ID of the resource.|

        |▹▹▹▹▹ type|enum(scene-template)|true|Resource object type.|

        |▹▹▹ *anonymous*|SceneRelationship|false|Relationship to a `scene`.|

        |▹▹▹▹ data|SceneRelationship_data|true||

        |▹▹▹▹▹ id|string(uuid)|true|ID of the resource.|

        |▹▹▹▹▹ type|enum(scene)|true|Resource object type.|

        |▹ type|string|true|Resource object type.|

      operationId: createScene
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateSceneRequest'
        required: true
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Scene'
          description: Created
          headers:
            location:
              $ref: '#/components/headers/Location'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: BadRequest
                    status: '400'
                    title: 'Invalid, missing, or out-of-range request parameters.'
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scenes
  '/scenes/{id}':
    delete:
      description: |+

        Delete a `scene`.

      operationId: deleteScene
      parameters:
        - description: The `scene` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '204':
          description: No Content
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scenes
    get:
      description: |+

        Get a `scene` by ID.

      operationId: getScene
      parameters:
        - description: The `scene` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Scene'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scenes
    patch:
      description: >+

        Update a `scene` camera and/or state. Once updated, view the scene via
        the renderScene API or with the Viewer SDK. For details, see our
        [Rendering
        scenes](https://developer.vertexvis.com/docs/guides/rendering-scenes)
        guide.


        ###### Body Params


        |Name|Type|Required|Description|

        |---|---|---|---|

        |data|UpdateSceneRequest_data|true||

        |▹ attributes|UpdateSceneRequest_data_attributes|true||

        |▹▹ camera|any|false||

        |▹▹▹ *anonymous*|Camera|false|Camera placement in 3D space.|

        |▹▹▹▹ lookAt|Vector3|true|3D vector.|

        |▹▹▹▹▹ x|number|true|x-axis coordinate.|

        |▹▹▹▹▹ y|number|true|y-axis coordinate.|

        |▹▹▹▹▹ z|number|true|z-axis coordinate.|

        |▹▹▹▹ position|Vector3|true|3D vector.|

        |▹▹▹▹ up|Vector3|true|3D vector.|

        |▹▹▹ *anonymous*|CameraFit|false|Fit camera in 3D space based on items
        in scene.|

        |▹▹▹▹ type|enum(fit-visible-scene-items)|true|Resource object type.|

        |▹▹ name|string|false||

        |▹▹ state|enum(draft, commit)|false|State of the scene.|

        |▹▹ suppliedId|string|false|ID provided for correlation. For example, an
        existing ID from a PLM system.|

        |▹ type|string|true|Resource object type.|

      operationId: updateScene
      parameters:
        - description: The `scene` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateSceneRequest'
        required: true
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Scene'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: BadRequest
                    status: '400'
                    title: 'Invalid, missing, or out-of-range request parameters.'
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scenes
  '/scenes/{id}/hits':
    post:
      description: |+

        Create a `hit` for a `scene`.

        ###### Body Params

        |Name|Type|Required|Description|
        |---|---|---|---|
        |data|CreateHitRequest_data|true||
        |▹ attributes|CreateHitRequest_data_attributes|true||
        |▹▹ point|Point|true|2D point.|
        |▹▹▹ dx|integer(int32)|true|x-axis coordinate.|
        |▹▹▹ dy|integer(int32)|true|y-axis coordinate.|
        |▹▹ viewport|Dimensions|true|An item's height and width.|
        |▹▹▹ height|integer(int32)|true|Item's height.|
        |▹▹▹ width|integer(int32)|true|Item's width.|
        |▹ type|string|true|Resource object type.|

      operationId: createSceneHit
      parameters:
        - description: Comma-separated list of relationships to include in response.
          explode: true
          in: query
          name: include
          required: false
          schema:
            example: results.sceneItem.source
            maxLength: 32
            type: string
          style: form
        - description: The `scene` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
        - description: >-
            Comma-separated list of fields to return in response. An empty value
            returns no fields. Due to its potential size, metadata is only
            returned if explicitly requested.
          explode: true
          in: query
          name: 'fields[part-revision]'
          required: false
          schema:
            example: 'created,suppliedId'
            maxLength: 32
            type: string
          style: form
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateHitRequest'
        required: true
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Hit'
          description: Created
          headers:
            location:
              $ref: '#/components/headers/Location'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: BadRequest
                    status: '400'
                    title: 'Invalid, missing, or out-of-range request parameters.'
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - hits
  '/scenes/{id}/image':
    get:
      description: >+

        Get a rendered image of a `scene`. If only a single pixel is returned,
        ensure the `scene` is in the `commit` state and contains scene items.

      operationId: renderScene
      parameters:
        - description: The `scene` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
        - description: The height of the image to render.
          explode: true
          in: query
          name: height
          required: false
          schema:
            example: 1000
            format: int32
            maximum: 2160
            minimum: 1
            type: integer
          style: form
        - description: The width of the image to render.
          explode: true
          in: query
          name: width
          required: false
          schema:
            example: 1000
            format: int32
            maximum: 3840
            minimum: 1
            type: integer
          style: form
      responses:
        '200':
          content:
            image/jpeg:
              schema:
                format: binary
                type: string
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scenes
  '/scenes/{id}/scene-items':
    get:
      description: |+

        Get `scenes-items` for a `scene`.

      operationId: getSceneItems
      parameters:
        - description: The `scene` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
        - description: The cursor for the next page of items.
          explode: true
          in: query
          name: 'page[cursor]'
          required: false
          schema:
            example: cHJkMDVFR2RLag==
            type: string
          style: form
        - description: The number of items to return.
          explode: true
          in: query
          name: 'page[size]'
          required: false
          schema:
            example: 10
            format: int32
            maximum: 200
            minimum: 1
            type: integer
          style: form
        - description: Comma-separated list of supplied IDs to filter on.
          explode: true
          in: query
          name: 'filter[suppliedId]'
          required: false
          schema:
            example: 'some-id-1,some-id-2'
            maxLength: 1024
            type: string
          style: form
        - description: Parent ID to filter on.
          explode: true
          in: query
          name: 'filter[parent]'
          required: false
          schema:
            example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
            format: uuid
            maxLength: 36
            type: string
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneItemList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-items
    post:
      description: >+

        Create a `scene-item` for a `scene`. Provide the source geometry either
        via `part-revision` or `geometry-set` UUID using `relationship.source`
        or by supplied IDs using `attributes.source`. Provide the hierarchical
        parent either via `scene-item` UUID using `relationship.source` or by
        supplied ID using `attributes.parent`. This API is asynchronous,
        returning the location of a `queued-scene-item`. Check the status via
        the getQueuedSceneItem API. For details, see our [Rendering
        scenes](https://developer.vertexvis.com/docs/guides/rendering-scenes)
        guide.


        ###### Body Params


        |Name|Type|Required|Description|

        |---|---|---|---|

        |data|CreateSceneItemRequest_data|true||

        |▹ attributes|CreateSceneItemRequest_data_attributes|true||

        |▹▹ materialOverride|ColorMaterial|false|Color properties describing how
        a material looks.|

        |▹▹▹ ambient|Color3|true|RGB color.|

        |▹▹▹▹ b|integer(int32)|true|Color value from 0 to 255.|

        |▹▹▹▹ g|integer(int32)|true|Color value from 0 to 255.|

        |▹▹▹▹ r|integer(int32)|true|Color value from 0 to 255.|

        |▹▹▹ diffuse|Color3|true|RGB color.|

        |▹▹▹ emissive|Color3|true|RGB color.|

        |▹▹▹ glossiness|integer(int32)|true|Glossiness from 0 to 128.|

        |▹▹▹ opacity|integer(int32)|true|Opacity from 0 to 100.|

        |▹▹▹ specular|Color3|true|RGB color.|

        |▹▹ parent|string|false|ID provided for correlation. For example, an
        existing ID from a PLM system.|

        |▹▹ source|PartRevisionSuppliedId|false||

        |▹▹▹ suppliedPartId|string|true|ID provided for correlation. For
        example, an existing ID from a PLM system.|

        |▹▹▹ suppliedRevisionId|string|true|ID provided for correlation. For
        example, an existing ID from a PLM system.|

        |▹▹ suppliedId|string|false|ID provided for correlation. For example, an
        existing ID from a PLM system.|

        |▹▹ transform|Matrix4|false|4x4 affine transformation matrix, see
        [Transformation
        Matrices](https://developer.vertexvis.com/docs/guides/rendering-scenes#transformation-matrices)
        for details.|

        |▹▹▹ r0|Vector4|true|4D vector.|

        |▹▹▹▹ w|number|true|w value.|

        |▹▹▹▹ x|number|true|x-axis coordinate.|

        |▹▹▹▹ y|number|true|y-axis coordinate.|

        |▹▹▹▹ z|number|true|z-axis coordinate.|

        |▹▹▹ r1|Vector4|true|4D vector.|

        |▹▹▹ r2|Vector4|true|4D vector.|

        |▹▹▹ r3|Vector4|true|4D vector.|

        |▹▹ visible|boolean|false|Item visibility.|

        |▹ relationships|CreateSceneItemRequest_data_relationships|true||

        |▹▹ parent|SceneItemRelationship|false|Relationship to a `scene-item`.|

        |▹▹▹ data|SceneItemRelationship_data|true||

        |▹▹▹▹ id|string(uuid)|true|ID of the resource.|

        |▹▹▹▹ type|enum(scene-item)|true|Resource object type.|

        |▹▹ source|any|false|Relationship to a `geometry-set`, `part-revision`,
        or `scene`.|

        |▹▹▹ *anonymous*|GeometrySetRelationship|false|Relationship to a
        `geometry-set`.|

        |▹▹▹▹ data|GeometrySetRelationshipData|true||

        |▹▹▹▹▹ id|string(uuid)|true|ID of the resource.|

        |▹▹▹▹▹ type|enum(geometry-set)|true|Resource object type.|

        |▹▹▹ *anonymous*|PartRevisionRelationship|false|Relationship to a
        `part-revision`.|

        |▹▹▹▹ data|PartData_relationships_partRevisions|true||

        |▹▹▹▹▹ id|string(uuid)|true|ID of the resource.|

        |▹▹▹▹▹ type|enum(part-revision)|true|Resource object type.|

        |▹▹▹ *anonymous*|SceneRelationship|false|Relationship to a `scene`.|

        |▹▹▹▹ data|SceneRelationship_data|true||

        |▹▹▹▹▹ id|string(uuid)|true|ID of the resource.|

        |▹▹▹▹▹ type|enum(scene)|true|Resource object type.|

        |▹ type|string|true|Resource object type.|

      operationId: createSceneItem
      parameters:
        - description: The `scene` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateSceneItemRequest'
        required: true
      responses:
        '202':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: Accepted
          headers:
            content-location:
              $ref: '#/components/headers/ContentLocation'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: BadRequest
                    status: '400'
                    title: 'Invalid, missing, or out-of-range request parameters.'
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '409':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Conflict
                    status: '409'
                    title: The state of the resource does not permit this operation.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Conflict
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-items
  '/scenes/{id}/scene-views':
    post:
      description: |+

        Create a `scene-view` of a `scene`.

        ###### Body Params

        |Name|Type|Required|Description|
        |---|---|---|---|
        |data|CreateSceneViewRequest_data|true||
        |▹ attributes|CreateSceneViewRequest_data_attributes|true||
        |▹▹ camera|Camera|false|Camera placement in 3D space.|
        |▹▹▹ lookAt|Vector3|true|3D vector.|
        |▹▹▹▹ x|number|true|x-axis coordinate.|
        |▹▹▹▹ y|number|true|y-axis coordinate.|
        |▹▹▹▹ z|number|true|z-axis coordinate.|
        |▹▹▹ position|Vector3|true|3D vector.|
        |▹▹▹ up|Vector3|true|3D vector.|
        |▹ type|string|true|Resource object type.|

      operationId: createSceneView
      parameters:
        - description: The `scene` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateSceneViewRequest'
        required: true
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneView'
          description: Created
          headers:
            location:
              $ref: '#/components/headers/Location'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: BadRequest
                    status: '400'
                    title: 'Invalid, missing, or out-of-range request parameters.'
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-views
  '/scenes/{id}/stream-keys':
    post:
      description: >+

        Create a `stream-key` for a `scene`.


        ###### Body Params


        |Name|Type|Required|Description|

        |---|---|---|---|

        |data|CreateStreamKeyRequest_data|true||

        |▹ attributes|CreateStreamKeyRequest_data_attributes|true||

        |▹▹ expiry|integer(int32)|false|Number of seconds before the
        `stream-key` expires.|

        |▹ type|string|true|Resource object type.|

      operationId: createSceneStreamKey
      parameters:
        - description: The `scene` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateStreamKeyRequest'
        required: true
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StreamKey'
          description: Created
          headers:
            location:
              $ref: '#/components/headers/Location'
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - stream-keys
  /stream-keys:
    get:
      description: |+

        Get `stream-key`s.

      operationId: getStreamKeys
      parameters:
        - description: The cursor for the next page of items.
          explode: true
          in: query
          name: 'page[cursor]'
          required: false
          schema:
            example: cHJkMDVFR2RLag==
            type: string
          style: form
        - description: The number of items to return.
          explode: true
          in: query
          name: 'page[size]'
          required: false
          schema:
            example: 10
            format: int32
            maximum: 200
            minimum: 1
            type: integer
          style: form
        - description: Stream key to filter on.
          explode: true
          in: query
          name: 'filter[key]'
          required: false
          schema:
            example: i3MFRDOmg1pxD36dGCTONRwOujkgV8m9LQ
            type: string
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StreamKeyList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - stream-keys
  '/stream-keys/{id}':
    delete:
      description: |+

        Delete a `stream-key`.

      operationId: deleteStreamKey
      parameters:
        - description: The `stream-key` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '204':
          description: No Content
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - stream-keys
  /translation-inspections:
    post:
      description: |+

        Create a `translation-inspection`.

        ###### Body Params

        |Name|Type|Required|Description|
        |---|---|---|---|
        |data|CreateTranslationInspectionRequest_data|true||
        |▹ relationships|CreateGeometrySetRequest_data_relationships|true||
        |▹▹ source|FileRelationship|true|Relationship to a `file`.|
        |▹▹▹ data|FileRelationship_data|true||
        |▹▹▹▹ id|string(uuid)|true|ID of the resource.|
        |▹▹▹▹ type|enum(file)|true|Resource object type.|
        |▹ type|string|true|Resource object type.|

      operationId: createTranslationInspection
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateTranslationInspectionRequest'
        required: true
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TranslationInspectionJob'
          description: Created
          headers:
            location:
              $ref: '#/components/headers/Location'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: BadRequest
                    status: '400'
                    title: 'Invalid, missing, or out-of-range request parameters.'
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - translation-inspections
  '/translation-inspections/{id}':
    get:
      description: |+

        Get a `translation-inspection` by ID.


      operationId: getInspectionJob
      parameters:
        - description: The `translation-inspection` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TranslationInspectionJob'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: Unauthorized
                    status: '401'
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: NotFound
                    status: '404'
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - code: UnsupportedMediaType
                    status: '415'
                    title: >-
                      The provided media type is not supported. Update the
                      Content-Type header to application/vnd.api+json and try
                      again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - translation-inspections
servers:
  - url: 'https://platform.vertexvis.com'
  - url: 'https://platform.platdev.vertexvis.io'
tags:
  - description: >-
      Manage files in Vertex, such as uploading 3D CAD files to translate them
      into parts.
    name: files
  - description: >-
      The lowest-level geometry primitives exposed through the Vertex API. For
      most use-cases, use `parts` instead.
    name: geometry-sets
  - description: Pick `scene-items` by hit.
    name: hits
  - description: Authentication and authorization to Vertex APIs.
    name: oauth2
  - description: Specific revisions of `parts`.
    name: part-revisions
  - description: >-
      Parts and assemblies, each references geometry and may have one or many
      `part-revisions`.
    name: parts
  - description: Collections of operations performed on `scene-items` in `scene-views`.
    name: scene-alterations
  - description: >-
      Transform, material, and visibility overrides applied to `scene-items` in
      `scene-views`.
    name: scene-item-overrides
  - description: >-
      Viewable objects in `scenes` referencing either `parts` or
      `geometry-sets`.
    name: scene-items
  - description: Collections of `scene-items` to include in `scenes`.
    name: scene-templates
  - description: Viewing sessions for an individual user inheriting `scene` contents.
    name: scene-views
  - description: Blueprints for what users see rendered.
    name: scenes
  - description: Grant the Vertex SDK expirable access to specific scenes.
    name: stream-keys
  - description: Inspect `files` after upload.
    name: translation-inspections
