openapi: 3.0.3
info:
  contact:
    email: support@vertexvis.com
    name: Vertex API support
    url: https://developer.vertexvis.com/docs/support
  description: |
    The Vertex distributed cloud rendering platform includes a set of APIs and SDKs, which together allow easily integrating 3D product data into your business application.

    See our [Developer Guides](https://developer.vertexvis.com/docs/guides/render-your-first-scene) to get started.

    Notes about the Postman collection and API Reference code samples:
      - They include all required and optional body parameters for completeness. Remove any optional parameters as desired.
      - They use auto-generated IDs and other values that may share the same value for ease of documentation only. In actual requests and responses, the IDs should uniquely identify their corresponding resource.
  termsOfService: https://vertexvis.com/terms-of-use
  title: Vertex Platform API
  version: '1.0'
  x-logo:
    url: https://vertexvis.com/themes/custom/sparrow/img/vertex-logo.png
    backgroundColor: '#ffffff'
    altText: Vertex Software
externalDocs:
  description: Getting started guides
  url: https://developer.vertexvis.com/docs/guides/render-your-first-scene
servers:
  - url: https://platform.vertexvis.com
  - url: https://platform.platdev.vertexvis.io
tags:
  - name: accounts
  - name: applications
  - name: batches
  - name: files
  - name: geometry-sets
  - name: hits
  - name: oauth2
  - name: part-renditions
  - name: part-revisions
  - name: parts
  - name: scene-alterations
  - name: scene-item-overrides
  - name: scene-items
  - name: scene-views
  - name: scenes
  - name: scene-view-states
  - name: stream-keys
  - name: translation-inspections
  - name: webhook-subscriptions
paths:
  /accounts:
    post:
      description: Create an `account`.
      operationId: createAccount
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
        required: true
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Created
          headers:
            location:
              $ref: '#/components/headers/Location'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2Internal:
            - accounts.*
            - accounts.write
      tags:
        - accounts
  /accounts/{id}:
    delete:
      description: Delete an `account`.
      operationId: deleteAccount
      parameters:
        - description: The `account` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '204':
          description: No Content
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2Internal:
            - accounts.*
            - accounts.write
      tags:
        - accounts
    get:
      description: Get an `account`.
      operationId: getAccount
      parameters:
        - description: The `account` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Account'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2Internal:
            - accounts.*
            - accounts.read
      tags:
        - accounts
    patch:
      description: Update an `account`.
      operationId: updateAccount
      parameters:
        - description: The `account` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateAccountRequest'
        required: true
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Account'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2Internal:
            - accounts.*
            - accounts.write
      tags:
        - accounts
  /accounts/{id}/applications:
    post:
      description: Create an `application` for an `account`.
      operationId: createApplicationForAccount
      parameters:
        - description: The `account` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AdminCreateApplicationRequest'
        required: true
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreatedApplication'
          description: Created
          headers:
            location:
              $ref: '#/components/headers/Location'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2Internal:
            - accounts.*
            - accounts.write
      tags:
        - accounts
      x-scala-package: accounts
  /applications:
    get:
      description: Get `applications`.
      operationId: getApplications
      parameters:
        - description: The cursor for the next page of items.
          explode: true
          in: query
          name: page[cursor]
          required: false
          schema:
            example: cHJkMDVFR2RLag==
            type: string
          style: form
        - description: The number of items to return.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            example: 10
            format: int32
            maximum: 200
            minimum: 1
            type: integer
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - applications
    post:
      description: Create an OAuth2 `application`.
      operationId: createApplication
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateApplicationRequest'
        required: true
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/CreatedApplication'
          description: Created
          headers:
            location:
              $ref: '#/components/headers/Location'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - applications
  /applications/{id}:
    delete:
      description: Delete an `application`.
      operationId: deleteApplication
      parameters:
        - description: The `application` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '204':
          description: No Content
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - applications
    get:
      description: Get an `application`.
      operationId: getApplication
      parameters:
        - description: The `application` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - applications
    patch:
      description: Update an `application`.
      operationId: updateApplication
      parameters:
        - description: The `application` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationRequest'
        required: true
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - applications
  /batches:
    post:
      description:
        Create a `batch`. This API is asynchronous, returning the location
        of a `queued-batch`. Check the status via the getQueuedBatch API.
      operationId: createBatch
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateBatchRequest'
        required: true
      responses:
        '202':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: Accepted
          headers:
            content-location:
              $ref: '#/components/headers/ContentLocation'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - batches
  /batches/{id}:
    get:
      description: Get a `batch` by ID.
      operationId: getBatch
      parameters:
        - description: The `file` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Batch'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - batches
  /queued-batches/{id}:
    get:
      description:
        Get a `queued-batch`. The response is either the status if `running`
        or `error` or, upon completion, redirects to the created `batch`.
      operationId: getQueuedBatch
      parameters:
        - description: The `queued-batch` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: OK
        '301':
          description: Moved Permanently
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - batches
  /files:
    get:
      description: Get `files`.
      operationId: getFiles
      parameters:
        - description: The cursor for the next page of items.
          explode: true
          in: query
          name: page[cursor]
          required: false
          schema:
            example: cHJkMDVFR2RLag==
            type: string
          style: form
        - description: The number of items to return.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            example: 10
            format: int32
            maximum: 200
            minimum: 1
            type: integer
          style: form
        - description: Comma-separated list of supplied IDs to filter on.
          explode: true
          in: query
          name: filter[suppliedId]
          required: false
          schema:
            example: some-id-1,some-id-2
            maxLength: 1024
            type: string
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FileList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - files
    post:
      description:
        Create a `file`. Once created, upload file content via the uploadFile
        API. For details including supported file formats, see our [Import data](https://developer.vertexvis.com/docs/guides/import-data-with-api)
        guide.
      operationId: createFile
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateFileRequest'
        required: true
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FileMetadata'
          description: Created
          headers:
            location:
              $ref: '#/components/headers/Location'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - files
  /files/{id}:
    delete:
      description: Delete a `file`.
      operationId: deleteFile
      parameters:
        - description: The `file` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FileMetadata'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - files
    get:
      description: Get a `file` by ID.
      operationId: getFile
      parameters:
        - description: The `file` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/FileMetadata'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - files
    post:
      description:
        Upload a `file`. Once uploaded, create either parts or geometry
        sets via the createPart or createGeometrySet APIs.
      operationId: uploadFile
      parameters:
        - description: The `file` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
        required: true
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - files
  /geometry-sets:
    get:
      description: Get `geometry-sets`.
      operationId: getGeometrySets
      parameters:
        - description: The cursor for the next page of items.
          explode: true
          in: query
          name: page[cursor]
          required: false
          schema:
            example: cHJkMDVFR2RLag==
            type: string
          style: form
        - description: The number of items to return.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            example: 10
            format: int32
            maximum: 200
            minimum: 1
            type: integer
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GeometrySetList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - geometry-sets
    post:
      description:
        Create a `geometry-set`. Once created, create scenes via the createScene
        API. For details, see our [Import data](https://developer.vertexvis.com/docs/guides/import-data-with-api)
        guide.
      operationId: createGeometrySet
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateGeometrySetRequest'
        required: true
      responses:
        '202':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: Accepted
          headers:
            content-location:
              $ref: '#/components/headers/ContentLocation'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - geometry-sets
  /geometry-sets/{id}:
    get:
      description: Get a `geometry-set` by ID.
      operationId: getGeometrySet
      parameters:
        - description: The `geometry-set` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/GeometrySet'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - geometry-sets
  /scene-views/{id}/hits:
    post:
      description: Create a `hit` for a `scene-view`.
      operationId: createSceneViewHit
      parameters:
        - description: Comma-separated list of relationships to include in response.
          explode: true
          in: query
          name: include
          required: false
          schema:
            example: results.sceneItem.source
            maxLength: 32
            type: string
          style: form
        - description: The `scene-view` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
        - description:
            Comma-separated list of fields to return in response. An empty
            value returns no fields. Due to its potential size, metadata is only returned
            if explicitly requested.
          explode: true
          in: query
          name: fields[part-revision]
          required: false
          schema:
            example: created,suppliedId,metadata
            maxLength: 32
            type: string
          style: form
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateHitRequest'
        required: true
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Hit'
          description: Created
          headers:
            location:
              $ref: '#/components/headers/Location'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - hits
  /scenes/{id}/hits:
    post:
      description: Create a `hit` for a `scene`.
      operationId: createSceneHit
      parameters:
        - description: Comma-separated list of relationships to include in response.
          explode: true
          in: query
          name: include
          required: false
          schema:
            example: results.sceneItem.source
            maxLength: 32
            type: string
          style: form
        - description: The `scene` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
        - description:
            Comma-separated list of fields to return in response. An empty
            value returns no fields. Due to its potential size, metadata is only returned
            if explicitly requested.
          explode: true
          in: query
          name: fields[part-revision]
          required: false
          schema:
            example: created,suppliedId,metadata
            maxLength: 32
            type: string
          style: form
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateHitRequest'
        required: true
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Hit'
          description: Created
          headers:
            location:
              $ref: '#/components/headers/Location'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - hits
  /oauth2/token:
    post:
      description:
        Create an OAuth2 access token. For details, see our [Authentication](https://developer.vertexvis.com/docs/guides/authentication)
        guide.
      operationId: createToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateTokenRequest'
        required: true
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OAuth2Token'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/OAuth2BadRequest'
          description: Invalid or missing request.
      security:
        - basicAuth: []
      tags:
        - oauth2
  /oauth2/revoke:
    post:
      description: Revoke an OAuth2 access token.
      operationId: revokeToken
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RevokeOAuth2TokenRequest'
        required: true
      responses:
        '204':
          description: No Content
      security:
        - basicAuth: []
      tags:
        - oauth2
  /oauth2/auth/requests/login/accept:
    post:
      description: Accept Login Challenge with subject & login challenge
      operationId: adminAcceptLogin
      parameters:
        - description: Login Challenge ID from oauth2 flow
          explode: true
          in: query
          name: login_challenge
          required: true
          schema:
            type: string
          style: form
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AdminLoginAcceptRequest'
        required: true
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AdminRedirectTo'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
      security:
        - OAuth2Internal:
            - admin-login
      tags:
        - oauth2
  /oauth2/auth/requests/consent/accept:
    post:
      description: Accept Consent Challenge to login.
      operationId: adminAcceptConsent
      parameters:
        - description: Challenge ID from oauth2 flow
          explode: true
          in: query
          name: challenge
          required: true
          schema:
            type: string
          style: form
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AdminConsentAcceptRequest'
        required: false
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AdminRedirectTo'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
      security:
        - OAuth2Internal:
            - admin-login
      tags:
        - oauth2
  /part-renditions:
    get:
      description: Get `part-renditions` with an optional filter.
      operationId: getPartRenditions
      parameters:
        - description: The cursor for the next page of items.
          explode: true
          in: query
          name: page[cursor]
          required: false
          schema:
            example: cHJkMDVFR2RLag==
            type: string
          style: form
        - description: The number of items to return.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            example: 10
            format: int32
            maximum: 200
            minimum: 1
            type: integer
          style: form
        - description: Comma-separated list of supplied IDs to filter on.
          explode: true
          in: query
          name: filter[suppliedId]
          required: false
          schema:
            example: some-id-1,some-id-2
            maxLength: 1024
            type: string
          style: form
        - description: A revision ID to filter on.
          explode: true
          in: query
          name: filter[revisionId]
          required: false
          schema:
            $ref: '#/components/schemas/Uuid'
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PartRenditionList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - part-renditions
  /part-renditions/{id}:
    get:
      description: Get a `part-rendition` by ID.
      operationId: getPartRendition
      parameters:
        - description: The `part-rendition` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PartRendition'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - part-renditions
  /part-revisions/{id}:
    delete:
      description: Delete a `part-revision`.
      operationId: deletePartRevision
      parameters:
        - description: The `part-revision` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '202':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: Accepted
          headers:
            content-location:
              $ref: '#/components/headers/ContentLocation'
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - part-revisions
    get:
      description: Get a `part-revision` by ID.
      operationId: getPartRevision
      parameters:
        - description: The `part-revision` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
        - description:
            Comma-separated list of fields to return in response. An empty
            value returns no fields. Due to its potential size, metadata is only returned
            if explicitly requested.
          explode: true
          in: query
          name: fields[part-revision]
          required: false
          schema:
            example: created,suppliedId,metadata
            maxLength: 32
            type: string
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PartRevision'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - part-revisions
      x-scala-package: translations
    patch:
      description:
        "Update a `part-revision`. When given a `file` relationship as\
        \ a payload, this will invoke a translation job, similar to the POST /parts\
        \ endpoint. The response code will be a 202 and will respond with an async\
        \ workflow, and return an Accepted[QueuedJob]. The geometry of the part and\
        \ all of its children will be replaced with the geometry specified within\
        \ the translated file given from this relationship. Some of the properties\
        \ given here are only used for the translation of the file. Namely, `indexMetadata`,\
        \ `name`, `suppliedIdKey`, `suppliedRevisionIdKey`, and `suppliedInstanceIdKey`.\
        \ Note that geometry updates are eventually consistent and will not update\
        \ existing scenes.  \nFor updates to the revision when the file relationship\
        \ is not present will respond with a standard 200 ok code when successful.\
        \ Note that metadata updates are eventually consistent and will not update\
        \ existing scenes.   To view updated metadata within a scene, a new scene\
        \ must be created or the updated part-revision must be removed and re-added\
        \ to an existing scene.\n"
      operationId: updatePartRevision
      parameters:
        - description: The `part-revision` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdatePartRevisionRequest'
        required: true
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PartRevision'
          description: OK
        '202':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: Accepted
          headers:
            content-location:
              $ref: '#/components/headers/ContentLocation'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - part-revisions
  /part-revisions/{id}/part-renditions:
    post:
      operationId: createPartRendition
      parameters:
        - description: The `part-revision` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreatePartRenditionRequest'
        required: true
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PartRendition'
          description: OK
        '202':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: Accepted
          headers:
            content-location:
              $ref: '#/components/headers/ContentLocation'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - part-renditions
  /part-revisions/{id}/image:
    get:
      description: Get a rendered image of a `part-revision`.
      operationId: renderPartRevision
      parameters:
        - description: The `part-revision` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
        - description: The height of the image to render.
          explode: true
          in: query
          name: height
          required: false
          schema:
            example: 1000
            format: int32
            maximum: 2160
            minimum: 1
            type: integer
          style: form
        - description: The width of the image to render.
          explode: true
          in: query
          name: width
          required: false
          schema:
            example: 1000
            format: int32
            maximum: 3840
            minimum: 1
            type: integer
          style: form
        - description: The `camera` position vector.
          explode: true
          in: query
          name: camera[position]
          required: false
          schema:
            $ref: '#/components/schemas/Vector3'
          style: deepObject
        - description: The `camera` up vector.
          explode: true
          in: query
          name: camera[up]
          required: false
          schema:
            $ref: '#/components/schemas/Vector3'
          style: deepObject
        - description: The `camera` lookAt vector.
          explode: true
          in: query
          name: camera[lookAt]
          required: false
          schema:
            $ref: '#/components/schemas/Vector3'
          style: deepObject
        - description: The perspective camera position.
          explode: true
          in: query
          name: camera[perspective][position]
          required: false
          schema:
            $ref: '#/components/schemas/Vector3'
          style: deepObject
        - description: The perspective camera look at position.
          explode: true
          in: query
          name: camera[perspective][lookAt]
          required: false
          schema:
            $ref: '#/components/schemas/Vector3'
          style: deepObject
        - description: The perspective camera up vector.
          explode: true
          in: query
          name: camera[perspective][up]
          required: false
          schema:
            $ref: '#/components/schemas/Vector3'
          style: deepObject
        - description: The orthographic camera view vector.
          explode: true
          in: query
          name: camera[orthographic][viewVector]
          required: false
          schema:
            $ref: '#/components/schemas/Vector3'
          style: deepObject
        - description: The orthographic camera look at position.
          explode: true
          in: query
          name: camera[orthographic][lookAt]
          required: false
          schema:
            $ref: '#/components/schemas/Vector3'
          style: deepObject
        - description: The orthographic camera up vector.
          explode: true
          in: query
          name: camera[orthographic][up]
          required: false
          schema:
            $ref: '#/components/schemas/Vector3'
          style: deepObject
        - description: The orthographic field-of-view height.
          explode: true
          in: query
          name: camera[orthographic][fovHeight]
          required: false
          schema:
            exclusiveMinimum: true
            minimum: 0
            type: number
          style: form
      responses:
        '200':
          content:
            image/jpeg:
              schema:
                format: binary
                type: string
            image/png:
              schema:
                format: binary
                type: string
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
        '504':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '504'
                    code: GatewayTimeout
                    title: Request timed out.
              schema:
                $ref: '#/components/schemas/Failure'
          description: GatewayTimeout
      security:
        - OAuth2: []
      tags:
        - part-revisions
  /parts/{id}/part-revisions:
    get:
      description: Get `part-revisions` for a `part`.
      operationId: getPartRevisions
      parameters:
        - description: The `part` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
        - description: The cursor for the next page of items.
          explode: true
          in: query
          name: page[cursor]
          required: false
          schema:
            example: cHJkMDVFR2RLag==
            type: string
          style: form
        - description: The number of items to return.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            example: 10
            format: int32
            maximum: 200
            minimum: 1
            type: integer
          style: form
        - description: Comma-separated list of supplied IDs to filter on.
          explode: true
          in: query
          name: filter[suppliedId]
          required: false
          schema:
            example: some-id-1,some-id-2
            maxLength: 1024
            type: string
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PartRevisionList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - part-revisions
  /parts:
    get:
      description: Get `parts`.
      operationId: getParts
      parameters:
        - description: The cursor for the next page of items.
          explode: true
          in: query
          name: page[cursor]
          required: false
          schema:
            example: cHJkMDVFR2RLag==
            type: string
          style: form
        - description: The number of items to return.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            example: 10
            format: int32
            maximum: 200
            minimum: 1
            type: integer
          style: form
        - description: Comma-separated list of supplied IDs to filter on.
          explode: true
          in: query
          name: filter[suppliedId]
          required: false
          schema:
            example: some-id-1,some-id-2
            maxLength: 1024
            type: string
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PartList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - parts
    post:
      description:
        "Create a `part`.\n\nThis endpoint includes multiple successful\
        \ response codes: [`201`, `202`].\n\nWhen not given a relationship, this endpoint\
        \ will create a part with an empty part revision and return a `201` \nstatus\
        \ code of the part.\n\nWhen given a relationship to translate, this endpoint\
        \ will return a `202` status code with the location of a\n`queued-translation`.\
        \ The status of the translation can be queried via `getQueuedTranslation`.\
        \ After the\ntranslation is complete, a `part` and `part-revision` that references\
        \ the translated geometry.\n\nA unique suppliedId/suppliedRevisionId combination\
        \ will create a new part and new part revision. For instance, sending\nmy-part-id/my-revision-id\
        \ will create a new part and new revision with those corresponding supplied\
        \ ids. To create a new revision for `my-part-id`,\nlikewise you can invoke\
        \ this endpoint with a new revision id: `my-part-id/my-new-revision-id` and\
        \ a new revision will be created for the\nexisting part.\n\nSee our [Import\
        \ Data](https://developer.vertexvis.com/docs/guides/import-data-with-api)\
        \ guides for more\ninformation.\n"
      operationId: createPart
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreatePartRequest'
        required: true
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Part'
          description: Created Part
        '202':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: Accepted
          headers:
            content-location:
              $ref: '#/components/headers/ContentLocation'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - parts
  /parts/{id}:
    delete:
      description: Delete a `part`.
      operationId: deletePart
      parameters:
        - description: The `part` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '202':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: Accepted
          headers:
            content-location:
              $ref: '#/components/headers/ContentLocation'
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - parts
    get:
      description: Get a `part` by ID.
      operationId: getPart
      parameters:
        - description: Comma-separated list of relationships to include in response.
          explode: true
          in: query
          name: include
          required: false
          schema:
            example: partRevisions
            maxLength: 32
            type: string
          style: form
        - description: The `part` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Part'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - parts
  /queued-part-deletions/{id}:
    get:
      description: Get a `queued-part-deletion` by ID.
      operationId: getQueuedPartDeletion
      parameters:
        - description: The `queued-part-deletion` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - parts
  /queued-part-revision-deletions/{id}:
    get:
      description: Get a `queued-part-revision-deletion` by ID.
      operationId: getQueuedPartRevisionDeletion
      parameters:
        - description: The `queued-part-revision-deletion` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - part-revisions
  /scene-alterations/{id}:
    get:
      description: Get a `scene-alteration` by ID.
      operationId: getSceneAlteration
      parameters:
        - description: The `scene-alteration` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneAlteration'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-alterations
  /scene-views/{id}/scene-alterations:
    get:
      description: Get `scene-alterations` for a `scene-view`.
      operationId: getSceneAlterations
      parameters:
        - description: The `scene-view` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneAlterationList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-alterations
    post:
      description: Create a `scene-alteration` for a `scene-view`.
      operationId: createSceneAlteration
      parameters:
        - description: The `scene-view` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateSceneAlterationRequest'
        required: true
      responses:
        '202':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: Accepted
          headers:
            content-location:
              $ref: '#/components/headers/ContentLocation'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-alterations
  /queued-scene-alterations/{id}:
    get:
      description: Get a `queued-scene-alteration` by ID.
      operationId: getQueuedSceneAlteration
      parameters:
        - description: The `queued-scene-alteration` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: OK
        '301':
          description: Moved Permanently
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-alterations
  /scene-item-overrides/{id}:
    delete:
      description: Delete a `scene-item-override`.
      operationId: deleteSceneItemOverride
      parameters:
        - description: The `scene-item-override` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '204':
          description: No Content
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-item-overrides
    patch:
      description: Update a `scene-item-override`.
      operationId: updateSceneItemOverride
      parameters:
        - description: The `scene-item-override` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateSceneItemOverrideRequest'
        required: true
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneItemOverride'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-item-overrides
  /scene-views/{id}/scene-item-overrides:
    get:
      description: Get `scene-item-overrides` for a `scene-view`.
      operationId: getSceneItemOverrides
      parameters:
        - description: The `scene-view` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
        - description: The cursor for the next page of items.
          explode: true
          in: query
          name: page[cursor]
          required: false
          schema:
            example: cHJkMDVFR2RLag==
            type: string
          style: form
        - description: The number of items to return.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            example: 10
            format: int32
            maximum: 200
            minimum: 1
            type: integer
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneItemOverrideList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-item-overrides
    post:
      description: Create a `scene-item-override` for a `scene-view`.
      operationId: createSceneItemOverride
      parameters:
        - description: The `scene-view` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateSceneItemOverrideRequest'
        required: true
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneItemOverride'
          description: Created
          headers:
            location:
              $ref: '#/components/headers/Location'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-item-overrides
  /scene-items/{id}:
    delete:
      description: Delete a `scene-item`.
      operationId: deleteSceneItem
      parameters:
        - description: The `scene-item` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '204':
          description: No Content
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-items
    get:
      description: Get a `scene-item` by ID.
      operationId: getSceneItem
      parameters:
        - description: The `scene-item` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
        - description:
            Comma-separated list of fields to return in response. An empty
            value returns no fields. `boundingBox`, `worldTransform` and `metadata`
            are only returned if explicitly requested.
          explode: true
          in: query
          name: fields[scene-item]
          required: false
          schema:
            example: created,suppliedId,visible,transform,worldTransform,materialOverride,boundingBox,metadata
            type: string
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneItem'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-items
    patch:
      description: Update a `scene-item`.
      operationId: updateSceneItem
      parameters:
        - description: The `scene-item` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateSceneItemRequest'
        required: true
      responses:
        '202':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: Accepted
          headers:
            content-location:
              $ref: '#/components/headers/ContentLocation'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-items
  /scenes/{id}/scene-items:
    get:
      description: Get `scene-items` for a `scene`.
      operationId: getSceneItems
      parameters:
        - description: The `scene` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
        - description: The cursor for the next page of items.
          explode: true
          in: query
          name: page[cursor]
          required: false
          schema:
            example: cHJkMDVFR2RLag==
            type: string
          style: form
        - description: The number of items to return.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            example: 10
            format: int32
            maximum: 200
            minimum: 1
            type: integer
          style: form
        - description: Source ID to filter on.
          explode: true
          in: query
          name: filter[source]
          required: false
          schema:
            example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
            maxLength: 1024
            type: string
          style: form
        - description: Comma-separated list of supplied IDs to filter on.
          explode: true
          in: query
          name: filter[suppliedId]
          required: false
          schema:
            example: some-id-1,some-id-2
            maxLength: 1024
            type: string
          style: form
        - description: Parent ID to filter on.
          explode: true
          in: query
          name: filter[parent]
          required: false
          schema:
            example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
            format: uuid
            maxLength: 36
            type: string
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneItemList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-items
    post:
      description: |-
        Create a `scene-item` for a `scene`. Provide the source geometry either via `part-revision` or `geometry-set` UUID using `relationship.source` or by supplied IDs using `attributes.source`.
        Provide an existing `scene` using `relationship.source` to clone it.
        Provide the hierarchical parent either via `scene-item` UUID using `relationship.source` or by supplied ID using `attributes.parent`. To reduce the time taken creating many hierarchical `scene-items`, make a best effort to create parents before children. One way to do this is by sorting the items by depth and starting at the root.
        This API is asynchronous, returning the location of a `queued-scene-item`. Check the status via the getQueuedSceneItem API. For details, see our [Render static scenes](https://developer.vertexvis.com/docs/guides/render-static-scenes) guide.
      operationId: createSceneItem
      parameters:
        - description: The `scene` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateSceneItemRequest'
        required: true
      responses:
        '202':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: Accepted
          headers:
            content-location:
              $ref: '#/components/headers/ContentLocation'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '409':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '409'
                    code: Conflict
                    title: The state of the resource does not permit this operation.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Conflict
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-items
  /queued-scene-items/{id}:
    get:
      description:
        Get a `queued-scene-item`. The response is either the status if
        `running` or `error` or, upon completion, redirects to the created `scene-item`.
        Once created, commit the scene via the updateScene API. For details, see our
        [Render static scenes](https://developer.vertexvis.com/docs/guides/render-static-scenes)
        guide.
      operationId: getQueuedSceneItem
      parameters:
        - description: The `queued-scene-item` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: OK
        '301':
          description: Moved Permanently
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-items
  /queued-scene-item-deletions/{id}:
    get:
      description: Get a `queued-scene-item-deletion` by ID.
      operationId: getQueuedSceneItemDeletion
      parameters:
        - description: The `queued-scene-item-deletion` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-items
  /scene-views/{id}:
    delete:
      description: Delete a `scene-view`.
      operationId: deleteSceneView
      parameters:
        - description: The `scene-view` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '204':
          description: No Content
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-views
    get:
      description: Get a `scene-view` by ID.
      operationId: getSceneView
      parameters:
        - description: The `scene-view` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneView'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-views
    patch:
      description: Update a `scene-view`.
      operationId: updateSceneView
      parameters:
        - description: The `scene-view` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateSceneViewRequest'
        required: true
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneView'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-views
  /scene-views/{id}/image:
    get:
      description:
        Get a rendered image of a `scene-view`. If a single pixel is returned,
        ensure the `scene` is in the `commit` state and contains scene items.
      operationId: renderSceneView
      parameters:
        - description: The `scene-view` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
        - description: The height of the image to render.
          explode: true
          in: query
          name: height
          required: false
          schema:
            example: 1000
            format: int32
            maximum: 2160
            minimum: 1
            type: integer
          style: form
        - description: The width of the image to render.
          explode: true
          in: query
          name: width
          required: false
          schema:
            example: 1000
            format: int32
            maximum: 3840
            minimum: 1
            type: integer
          style: form
      responses:
        '200':
          content:
            image/jpeg:
              schema:
                format: binary
                type: string
            image/png:
              schema:
                format: binary
                type: string
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
        '504':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '504'
                    code: GatewayTimeout
                    title: Request timed out.
              schema:
                $ref: '#/components/schemas/Failure'
          description: GatewayTimeout
      security:
        - OAuth2: []
      tags:
        - scene-views
  /scene-views/{id}/scene-items/{itemId}:
    get:
      description: Get a `scene-item` within a view by ID.
      operationId: getViewSceneItem
      parameters:
        - description: The `scene-view` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
        - description: The `scene-item` ID.
          explode: false
          in: path
          name: itemId
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
        - description:
            Comma-separated list of fields to return in response. An empty
            value returns no fields. `boundingBox`, `worldTransform` and `metadata`
            are only returned if explicitly requested.
          explode: true
          in: query
          name: fields[scene-item]
          required: false
          schema:
            example: created,suppliedId,visible,transform,worldTransform,materialOverride,boundingBox,metadata
            type: string
          style: form
        - description: Comma-separated list of relationships to include in response.
          explode: true
          in: query
          name: include
          required: false
          schema:
            example: sceneItemOverride
            maxLength: 32
            type: string
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneViewItem'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-views
  /scenes/{id}/scene-views:
    get:
      description: Get `scene-view`s for a `scene`.
      operationId: getSceneViews
      parameters:
        - description: The cursor for the next page of items.
          explode: true
          in: query
          name: page[cursor]
          required: false
          schema:
            example: cHJkMDVFR2RLag==
            type: string
          style: form
        - description: The number of items to return.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            example: 10
            format: int32
            maximum: 200
            minimum: 1
            type: integer
          style: form
        - description: The `scene` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneViewList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-views
    post:
      description: Create a `scene-view` of a `scene`.
      operationId: createSceneView
      parameters:
        - description: The `scene` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateSceneViewRequest'
        required: true
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneView'
          description: Created
          headers:
            location:
              $ref: '#/components/headers/Location'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-views
  /scenes:
    get:
      description: Get `scenes`.
      operationId: getScenes
      parameters:
        - description: The cursor for the next page of items.
          explode: true
          in: query
          name: page[cursor]
          required: false
          schema:
            example: cHJkMDVFR2RLag==
            type: string
          style: form
        - description: The number of items to return.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            example: 10
            format: int32
            maximum: 200
            minimum: 1
            type: integer
          style: form
        - description: Comma-separated list of names to filter on.
          explode: true
          in: query
          name: filter[name]
          required: false
          schema:
            example: some-name-1,some-name-2
            maxLength: 1024
            type: string
          style: form
        - description: Comma-separated list of supplied IDs to filter on.
          explode: true
          in: query
          name: filter[suppliedId]
          required: false
          schema:
            example: some-id-1,some-id-2
            maxLength: 1024
            type: string
          style: form
        - description:
            Comma-separated list of fields to return in response. An empty
            value returns no fields. `metadata` is only returned if explicitly requested.
          explode: true
          in: query
          name: fields[scene]
          required: false
          schema:
            example: camera,state,created,suppliedId,name,treeEnabled,modified,up,metadata
            type: string
          style: form
        - description: |
            Filter scenes that contain all the given metadata key-value pairs. Should be specified in query parameter map notation: `filter[metadata][key1]=value1&filter[metadata][key]=value2`.
          explode: true
          in: query
          name: filter[metadata]
          required: false
          schema:
            additionalProperties:
              type: string
            example: filter[metadata][key1]=test
            type: object
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scenes
    post:
      description:
        Create a `scene`. Once created, add scene items via the createSceneItem
        API. For details, see our [Render static scenes](https://developer.vertexvis.com/docs/guides/render-static-scenes)
        guide.
      operationId: createScene
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateSceneRequest'
        required: true
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Scene'
          description: Created
          headers:
            location:
              $ref: '#/components/headers/Location'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scenes
  /scenes/{id}:
    delete:
      description: Delete a `scene`.
      operationId: deleteScene
      parameters:
        - description: The `scene` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '204':
          description: No Content
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scenes
    get:
      description: Get a `scene` by ID.
      operationId: getScene
      parameters:
        - description: The `scene` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
        - description:
            Comma-separated list of fields to return in response. An empty
            value returns no fields. `sceneItemCount` and `metadata` are only returned
            if explicitly requested.
          explode: true
          in: query
          name: fields[scene]
          required: false
          schema:
            example: camera,state,created,suppliedId,name,treeEnabled,modified,up,sceneItemCount,metadata
            type: string
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Scene'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scenes
    patch:
      description:
        Update a `scene` camera and/or state. Once updated, view the scene
        via the renderScene API or with the Viewer SDK. For details, see our [Render
        static scenes](https://developer.vertexvis.com/docs/guides/render-static-scenes)
        guide.
      operationId: updateScene
      parameters:
        - description: The `scene` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateSceneRequest'
        required: true
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Scene'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scenes
  /scenes/{id}/image:
    get:
      description:
        Get a rendered image of a `scene`. If only a single pixel is returned,
        ensure the `scene` is in the `commit` state and contains scene items.
      operationId: renderScene
      parameters:
        - description: The `scene` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
        - description: The height of the image to render.
          explode: true
          in: query
          name: height
          required: false
          schema:
            example: 1000
            format: int32
            maximum: 2160
            minimum: 1
            type: integer
          style: form
        - description: The width of the image to render.
          explode: true
          in: query
          name: width
          required: false
          schema:
            example: 1000
            format: int32
            maximum: 3840
            minimum: 1
            type: integer
          style: form
      responses:
        '200':
          content:
            image/jpeg:
              schema:
                format: binary
                type: string
            image/png:
              schema:
                format: binary
                type: string
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
        '504':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '504'
                    code: GatewayTimeout
                    title: Request timed out.
              schema:
                $ref: '#/components/schemas/Failure'
          description: GatewayTimeout
      security:
        - OAuth2: []
      tags:
        - scenes
  /queued-scenes/{id}:
    get:
      description: Get a `queued-scene`.
      operationId: getQueuedScene
      parameters:
        - description: The `scene` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: OK
        '301':
          description: Moved Permanently
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scenes
  /scenes/{id}/scene-view-states:
    get:
      description: Get `scene-view-states` for a `scene`.
      operationId: getSceneViewStates
      parameters:
        - description: The `scene` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
        - description: The cursor for the next page of items.
          explode: true
          in: query
          name: page[cursor]
          required: false
          schema:
            example: cHJkMDVFR2RLag==
            type: string
          style: form
        - description: The number of items to return.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            example: 10
            format: int32
            maximum: 200
            minimum: 1
            type: integer
          style: form
        - description:
            Comma-separated list of fields to return in response. An empty
            value returns no fields. `thumbnails` is only returned if explicitly requested.
          explode: true
          in: query
          name: fields[scene-view-state]
          required: false
          schema:
            example: thumbnails
            type: string
          style: form
        - description: Comma-separated list of IDs to filter on.
          explode: true
          in: query
          name: filter[id]
          required: false
          schema:
            example: some-id-1,some-id-2
            type: string
          style: form
        - description: Comma-separated list of supplied IDs to filter on.
          explode: true
          in: query
          name: filter[suppliedId]
          required: false
          schema:
            example: some-id-1,some-id-2
            maxLength: 1024
            type: string
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneViewStateList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-view-states
    post:
      description: Create a `scene-view-state` for a `scene`.
      operationId: createSceneViewState
      parameters:
        - description: The `scene` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateSceneViewStateRequest'
        required: true
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneViewState'
          description: Created
          headers:
            location:
              $ref: '#/components/headers/Location'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-view-states
  /scene-view-states/{id}:
    delete:
      description: Delete a `scene-view-state`.
      operationId: deleteSceneViewState
      parameters:
        - description: The `scene-view-state` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '204':
          description: No Content
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-view-states
    get:
      description: Get a `scene-view-state` by ID.
      operationId: getSceneViewState
      parameters:
        - description: The `scene-view-state` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
        - description:
            Comma-separated list of fields to return in response. An empty
            value returns no fields. `thumbnails` is only returned if explicitly requested.
          explode: true
          in: query
          name: fields[scene-view-state]
          required: false
          schema:
            example: thumbnails
            type: string
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneViewState'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-view-states
    patch:
      description: Update a `scene-view-state`.
      operationId: updateSceneViewState
      parameters:
        - description: The `scene-view-state` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateSceneViewStateRequest'
        required: true
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/SceneViewState'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - scene-view-states
  /scenes/{id}/stream-keys:
    post:
      description: Create a `stream-key` for a `scene`.
      operationId: createSceneStreamKey
      parameters:
        - description: The `scene` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateStreamKeyRequest'
        required: true
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StreamKey'
          description: Created
          headers:
            location:
              $ref: '#/components/headers/Location'
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - stream-keys
  /stream-keys:
    get:
      description: Get `stream-key`s.
      operationId: getStreamKeys
      parameters:
        - description: The cursor for the next page of items.
          explode: true
          in: query
          name: page[cursor]
          required: false
          schema:
            example: cHJkMDVFR2RLag==
            type: string
          style: form
        - description: The number of items to return.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            example: 10
            format: int32
            maximum: 200
            minimum: 1
            type: integer
          style: form
        - description: Stream key to filter on.
          explode: true
          in: query
          name: filter[key]
          required: false
          schema:
            example: i3MFRDOmg1pxD36dGCTONRwOujkgV8m9LQ
            type: string
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StreamKeyList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - stream-keys
  /stream-keys/{id}:
    delete:
      description: Delete a `stream-key`.
      operationId: deleteStreamKey
      parameters:
        - description: The `stream-key` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '204':
          description: No Content
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - stream-keys
  /translation-inspections:
    post:
      description: Create a `translation-inspection`.
      operationId: createTranslationInspection
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateTranslationInspectionRequest'
        required: true
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TranslationInspectionJob'
          description: Created
          headers:
            location:
              $ref: '#/components/headers/Location'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - translation-inspections
  /translation-inspections/{id}:
    get:
      description: Get a `translation-inspection` by ID.
      operationId: getInspectionJob
      parameters:
        - description: The `translation-inspection` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TranslationInspectionJob'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - translation-inspections
  /queued-translation-jobs:
    get:
      description: Get all current translation jobs in progress.
      operationId: getQueuedTranslationJobs
      parameters:
        - description: The cursor for the next page of items.
          explode: true
          in: query
          name: page[cursor]
          required: false
          schema:
            example: cHJkMDVFR2RLag==
            type: string
          style: form
        - description: The number of items to return.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            example: 10
            format: int32
            maximum: 200
            minimum: 1
            type: integer
          style: form
        - description: Status to filter on.
          explode: true
          in: query
          name: filter[status]
          required: false
          schema:
            example: running
            maxLength: 1024
            type: string
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJobList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - translation-inspections
  /queued-translation-jobs/{id}:
    get:
      description:
        Get a `queued-translation-job`. The response is either the status
        if `running` or `error` or, upon completion, the `part-revision` that was
        created. Once created, create scenes via the createScene API. For details,
        see our [Render static scenes](https://developer.vertexvis.com/docs/guides/render-static-scenes)
        guide.
      operationId: getQueuedTranslationJob
      parameters:
        - description: The `queued-translation` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedTranslationJob'
          description: OK
        '301':
          description: Moved Permanently
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - translation-inspections
  /queued-translations:
    get:
      deprecated: true
      description:
        This has been deprecated and replaced by **queued-translation-jobs**
        - Get `queued-translation`s.
      operationId: getQueuedTranslations
      parameters:
        - description: The cursor for the next page of items.
          explode: true
          in: query
          name: page[cursor]
          required: false
          schema:
            example: cHJkMDVFR2RLag==
            type: string
          style: form
        - description: The number of items to return.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            example: 10
            format: int32
            maximum: 200
            minimum: 1
            type: integer
          style: form
        - description: Status to filter on.
          explode: true
          in: query
          name: filter[status]
          required: false
          schema:
            example: running
            maxLength: 1024
            type: string
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJobList'
          description: OK
        '301':
          description: Moved Permanently
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - translation-inspections
  /queued-translations/{id}:
    get:
      deprecated: true
      description:
        This has been deprecated and replaced by **queued-translation-jobs/{id}**
        - Get a `queued-translation`. The response is either the status if `running`
        or `error` or, upon completion, redirects to the created `part-revision`.
        Once created, create scenes via the createScene API. For details, see our
        [Render static scenes](https://developer.vertexvis.com/docs/guides/render-static-scenes)
        guide.
      operationId: getQueuedTranslation
      parameters:
        - description: The `queued-translation` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: OK
        '301':
          description: Moved Permanently
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - translation-inspections
  /exports:
    post:
      description:
        Create an `export`. This API is asynchronous, returning the location
        of a `queued-export`. Check the status via the getQueuedExport API.
      operationId: createExport
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateExportRequest'
        required: true
      responses:
        '202':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: Accepted
          headers:
            content-location:
              $ref: '#/components/headers/ContentLocation'
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - exports
  /exports/{id}:
    get:
      description: Get an `export` by ID.
      operationId: getExport
      parameters:
        - description: The `export` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Export'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - exports
  /queued-exports/{id}:
    get:
      description:
        Get a `queued-export`. The response is either the status if `running`
        or `error` or, upon completion, redirects to the created `export`.
      operationId: getQueuedExport
      parameters:
        - description: The `queued-export` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/QueuedJob'
          description: OK
        '301':
          description: Moved Permanently
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - exports
  /webhook-subscriptions:
    get:
      description: Get `webhook-subscription`s.
      operationId: getWebhookSubscriptions
      parameters:
        - description: The cursor for the next page of items.
          explode: true
          in: query
          name: page[cursor]
          required: false
          schema:
            example: cHJkMDVFR2RLag==
            type: string
          style: form
        - description: The number of items to return.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            example: 10
            format: int32
            maximum: 200
            minimum: 1
            type: integer
          style: form
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/WebhookSubscriptionList'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - webhook-subscriptions
    post:
      callbacks:
        queued-scene-item.completed:
          '{$request.body#/data/attributes/url}':
            post:
              operationId: queued_scene_item_completed_Post
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/WebhookEvent'
              responses:
                '200':
                  description: OK
              x-callback-request: true
        queued-translation.completed:
          '{$request.body#/data/attributes/url}':
            post:
              operationId: queued_translation_completed_Post
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/WebhookEvent'
              responses:
                '200':
                  description: OK
              x-callback-request: true
        scene.updated:
          '{$request.body#/data/attributes/url}':
            post:
              operationId: scene_updated_Post
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/WebhookEvent'
              responses:
                '200':
                  description: OK
              x-callback-request: true
      description: Create a `webhook-subscription`
      operationId: createWebhookSubscription
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CreateWebhookSubscriptionRequest'
        required: true
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/WebhookSubscription'
          description: Created
          headers:
            location:
              $ref: '#/components/headers/Location'
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - webhook-subscriptions
  /webhook-subscriptions/{id}:
    delete:
      description: Delete a `webhook-subscription`.
      operationId: deleteWebhookSubscription
      parameters:
        - description: The `webhook-subscription` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '204':
          description: No Content
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - webhook-subscriptions
    get:
      description: Get a `webhook-subscription`.
      operationId: getWebhookSubscription
      parameters:
        - description: The `webhook-subscription` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/WebhookSubscription'
          description: OK
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - webhook-subscriptions
    patch:
      description: Update a `webhook-subscription`.
      operationId: updateWebhookSubscription
      parameters:
        - description: The `webhook-subscription` ID.
          explode: false
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/Uuid'
          style: simple
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/UpdateWebhookSubscriptionRequest'
        required: true
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/WebhookSubscription'
          description: OK
        '400':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '400'
                    code: BadRequest
                    title: Invalid, missing, or out-of-range request parameters.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Bad Request
        '401':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '401'
                    code: Unauthorized
                    title: Invalid or missing credentials.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unauthorized
        '404':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '404'
                    code: NotFound
                    title: The requested resource was not found.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Not Found
        '415':
          content:
            application/vnd.api+json:
              example:
                errors:
                  - status: '415'
                    code: UnsupportedMediaType
                    title:
                      The provided media type is not supported. Update the Content-Type
                      header to application/vnd.api+json and try again.
              schema:
                $ref: '#/components/schemas/Failure'
          description: Unsupported Media Type
      security:
        - OAuth2: []
      tags:
        - webhook-subscriptions
components:
  headers:
    Location:
      explode: false
      schema:
        example: /some-resource/d98d621a-23da-49fe-af96-6be709abb718
        maxLength: 128
        type: string
      style: simple
    ContentLocation:
      explode: false
      schema:
        example: /some-resource/d98d621a-23da-49fe-af96-6be709abb718
        maxLength: 128
        type: string
      style: simple
  parameters:
    AccountId:
      description: The `account` ID.
      explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    ApplicationId:
      description: The `application` ID.
      explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    PerspectiveCamera:
      description: A perspective camera that mimics the way the human eye sees.
      explode: true
      in: query
      name: camera[perspective]
      required: false
      schema:
        $ref: '#/components/schemas/PerspectiveCamera'
      style: deepObject
    PerspectiveCameraPosition:
      description: The perspective camera position.
      explode: true
      in: query
      name: camera[perspective][position]
      required: false
      schema:
        $ref: '#/components/schemas/Vector3'
      style: deepObject
    PerspectiveCameraLookAt:
      description: The perspective camera look at position.
      explode: true
      in: query
      name: camera[perspective][lookAt]
      required: false
      schema:
        $ref: '#/components/schemas/Vector3'
      style: deepObject
    PerspectiveCameraUp:
      description: The perspective camera up vector.
      explode: true
      in: query
      name: camera[perspective][up]
      required: false
      schema:
        $ref: '#/components/schemas/Vector3'
      style: deepObject
    OrthographicCameraViewVector:
      description: The orthographic camera view vector.
      explode: true
      in: query
      name: camera[orthographic][viewVector]
      required: false
      schema:
        $ref: '#/components/schemas/Vector3'
      style: deepObject
    OrthographicCameraLookAt:
      description: The orthographic camera look at position.
      explode: true
      in: query
      name: camera[orthographic][lookAt]
      required: false
      schema:
        $ref: '#/components/schemas/Vector3'
      style: deepObject
    OrthographicCameraUp:
      description: The orthographic camera up vector.
      explode: true
      in: query
      name: camera[orthographic][up]
      required: false
      schema:
        $ref: '#/components/schemas/Vector3'
      style: deepObject
    OrthographicCameraFovHeight:
      description: The orthographic field-of-view height.
      explode: true
      in: query
      name: camera[orthographic][fovHeight]
      required: false
      schema:
        exclusiveMinimum: true
        minimum: 0
        type: number
      style: form
    CameraUp:
      description: The `camera` up vector.
      explode: true
      in: query
      name: camera[up]
      required: false
      schema:
        $ref: '#/components/schemas/Vector3'
      style: deepObject
    CameraPosition:
      description: The `camera` position vector.
      explode: true
      in: query
      name: camera[position]
      required: false
      schema:
        $ref: '#/components/schemas/Vector3'
      style: deepObject
    CameraLookAt:
      description: The `camera` lookAt vector.
      explode: true
      in: query
      name: camera[lookAt]
      required: false
      schema:
        $ref: '#/components/schemas/Vector3'
      style: deepObject
    ExportId:
      description: The `export` ID.
      explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    FileId:
      description: The `file` ID.
      explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    Height:
      description: The height of the image to render.
      explode: true
      in: query
      name: height
      required: false
      schema:
        example: 1000
        format: int32
        maximum: 2160
        minimum: 1
        type: integer
      style: form
    IdFilter:
      description: Comma-separated list of IDs to filter on.
      explode: true
      in: query
      name: filter[id]
      required: false
      schema:
        example: some-id-1,some-id-2
        type: string
      style: form
    IncludeSource:
      description: Comma-separated list of relationships to include in response.
      explode: true
      in: query
      name: include
      required: false
      schema:
        example: results.sceneItem.source
        maxLength: 32
        type: string
      style: form
    IncludePartRevisions:
      description: Comma-separated list of relationships to include in response.
      explode: true
      in: query
      name: include
      required: false
      schema:
        example: partRevisions
        maxLength: 32
        type: string
      style: form
    IncludeSceneItemOverride:
      description: Comma-separated list of relationships to include in response.
      explode: true
      in: query
      name: include
      required: false
      schema:
        example: sceneItemOverride
        maxLength: 32
        type: string
      style: form
    NameFilter:
      description: Comma-separated list of names to filter on.
      explode: true
      in: query
      name: filter[name]
      required: false
      schema:
        example: some-name-1,some-name-2
        maxLength: 1024
        type: string
      style: form
    PageCursor:
      description: The cursor for the next page of items.
      explode: true
      in: query
      name: page[cursor]
      required: false
      schema:
        example: cHJkMDVFR2RLag==
        type: string
      style: form
    PageSize:
      description: The number of items to return.
      explode: true
      in: query
      name: page[size]
      required: false
      schema:
        example: 10
        format: int32
        maximum: 200
        minimum: 1
        type: integer
      style: form
    PartId:
      description: The `part` ID.
      explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    PartRevisionFields:
      description:
        Comma-separated list of fields to return in response. An empty
        value returns no fields. Due to its potential size, metadata is only returned
        if explicitly requested.
      explode: true
      in: query
      name: fields[part-revision]
      required: false
      schema:
        example: created,suppliedId,metadata
        maxLength: 32
        type: string
      style: form
    PartRenditionId:
      description: The `part-rendition` ID.
      explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    PartRevisionId:
      description: The `part-revision` ID.
      explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    SceneId:
      description: The `scene` ID.
      explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    SceneFields:
      description:
        Comma-separated list of fields to return in response. An empty
        value returns no fields. `sceneItemCount` and `metadata` are only returned
        if explicitly requested.
      explode: true
      in: query
      name: fields[scene]
      required: false
      schema:
        example: camera,state,created,suppliedId,name,treeEnabled,modified,up,sceneItemCount,metadata
        type: string
      style: form
    ListScenesFields:
      description:
        Comma-separated list of fields to return in response. An empty
        value returns no fields. `metadata` is only returned if explicitly requested.
      explode: true
      in: query
      name: fields[scene]
      required: false
      schema:
        example: camera,state,created,suppliedId,name,treeEnabled,modified,up,metadata
        type: string
      style: form
    MetadataFilter:
      description: |
        Filter scenes that contain all the given metadata key-value pairs. Should be specified in query parameter map notation: `filter[metadata][key1]=value1&filter[metadata][key]=value2`.
      explode: true
      in: query
      name: filter[metadata]
      required: false
      schema:
        additionalProperties:
          type: string
        example: filter[metadata][key1]=test
        type: object
      style: form
    RevisionIdFilter:
      description: A revision ID to filter on.
      explode: true
      in: query
      name: filter[revisionId]
      required: false
      schema:
        $ref: '#/components/schemas/Uuid'
      style: form
    SceneViewStateFields:
      description:
        Comma-separated list of fields to return in response. An empty
        value returns no fields. `thumbnails` is only returned if explicitly requested.
      explode: true
      in: query
      name: fields[scene-view-state]
      required: false
      schema:
        example: thumbnails
        type: string
      style: form
    SceneItemId:
      description: The `scene-item` ID.
      explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    SceneItemFields:
      description:
        Comma-separated list of fields to return in response. An empty
        value returns no fields. `boundingBox`, `worldTransform` and `metadata` are
        only returned if explicitly requested.
      explode: true
      in: query
      name: fields[scene-item]
      required: false
      schema:
        example: created,suppliedId,visible,transform,worldTransform,materialOverride,boundingBox,metadata
        type: string
      style: form
    SceneItemOverrideId:
      description: The `scene-item-override` ID.
      explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    SceneViewId:
      description: The `scene-view` ID.
      explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    SceneViewItemId:
      description: The `scene-item` ID.
      explode: false
      in: path
      name: itemId
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    SceneViewStateId:
      description: The `scene-view-state` ID.
      explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
    SourceFilter:
      description: Source ID to filter on.
      explode: true
      in: query
      name: filter[source]
      required: false
      schema:
        example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
        maxLength: 1024
        type: string
      style: form
    StatusFilter:
      description: Status to filter on.
      explode: true
      in: query
      name: filter[status]
      required: false
      schema:
        example: running
        maxLength: 1024
        type: string
      style: form
    SuppliedIdFilter:
      description: Comma-separated list of supplied IDs to filter on.
      explode: true
      in: query
      name: filter[suppliedId]
      required: false
      schema:
        example: some-id-1,some-id-2
        maxLength: 1024
        type: string
      style: form
    ParentIdFilter:
      description: Parent ID to filter on.
      explode: true
      in: query
      name: filter[parent]
      required: false
      schema:
        example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
        format: uuid
        maxLength: 36
        type: string
      style: form
    StreamKeyFilter:
      description: Stream key to filter on.
      explode: true
      in: query
      name: filter[key]
      required: false
      schema:
        example: i3MFRDOmg1pxD36dGCTONRwOujkgV8m9LQ
        type: string
      style: form
    Width:
      description: The width of the image to render.
      explode: true
      in: query
      name: width
      required: false
      schema:
        example: 1000
        format: int32
        maximum: 3840
        minimum: 1
        type: integer
      style: form
    WebhookSubscriptionId:
      description: The `webhook-subscription` ID.
      explode: false
      in: path
      name: id
      required: true
      schema:
        $ref: '#/components/schemas/Uuid'
      style: simple
  responses:
    Accepted:
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/QueuedJob'
      description: Accepted
      headers:
        content-location:
          $ref: '#/components/headers/ContentLocation'
    NoContent:
      description: No Content
    MovedPermanently:
      description: Moved Permanently
    BadRequest:
      content:
        application/vnd.api+json:
          example:
            errors:
              - status: '400'
                code: BadRequest
                title: Invalid, missing, or out-of-range request parameters.
          schema:
            $ref: '#/components/schemas/Failure'
      description: Bad Request
    Unauthorized:
      content:
        application/vnd.api+json:
          example:
            errors:
              - status: '401'
                code: Unauthorized
                title: Invalid or missing credentials.
          schema:
            $ref: '#/components/schemas/Failure'
      description: Unauthorized
    NotFound:
      content:
        application/vnd.api+json:
          example:
            errors:
              - status: '404'
                code: NotFound
                title: The requested resource was not found.
          schema:
            $ref: '#/components/schemas/Failure'
      description: Not Found
    Conflict:
      content:
        application/vnd.api+json:
          example:
            errors:
              - status: '409'
                code: Conflict
                title: The state of the resource does not permit this operation.
          schema:
            $ref: '#/components/schemas/Failure'
      description: Conflict
    UnsupportedMediaType:
      content:
        application/vnd.api+json:
          example:
            errors:
              - status: '415'
                code: UnsupportedMediaType
                title:
                  The provided media type is not supported. Update the Content-Type
                  header to application/vnd.api+json and try again.
          schema:
            $ref: '#/components/schemas/Failure'
      description: Unsupported Media Type
    GatewayTimeout:
      content:
        application/vnd.api+json:
          example:
            errors:
              - status: '504'
                code: GatewayTimeout
                title: Request timed out.
          schema:
            $ref: '#/components/schemas/Failure'
      description: GatewayTimeout
  schemas:
    CreateAccountRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateAccountRequest_data'
      required:
        - data
      type: object
    Account:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Account_data'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    Failure:
      additionalProperties: false
      properties:
        errors:
          items:
            $ref: '#/components/schemas/ApiError'
          maxItems: 20
          type: array
          uniqueItems: true
        meta:
          additionalProperties:
            type: string
          type: object
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - errors
      type: object
    Uuid:
      description: ID of the resource.
      example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
      format: uuid
      maxLength: 36
      type: string
    UpdateAccountRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/UpdateAccountRequest_data'
      required:
        - data
      type: object
    AdminCreateApplicationRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/AdminCreateApplicationRequest_data'
      required:
        - data
      type: object
    CreatedApplication:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreatedApplication_data'
      required:
        - data
      type: object
    ApplicationList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/ApplicationData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    CreateApplicationRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateAccountRequest_data'
      required:
        - data
      type: object
    Application:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/ApplicationData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    UpdateApplicationRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/UpdateApplicationRequest_data'
      required:
        - data
      type: object
    CreateBatchRequest:
      additionalProperties: false
      properties:
        vertexvis/batch:operations:
          description: List of operations to perform as a batch.
          items:
            $ref: '#/components/schemas/BatchOperation'
          maxItems: 500
          type: array
      required:
        - vertexvis/batch:operations
      type: object
    QueuedJob:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/QueuedJobData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    Batch:
      additionalProperties: false
      properties:
        vertexvis/batch:results:
          description: List of operation results.
          items:
            anyOf:
              - $ref: '#/components/schemas/RelationshipData'
              - $ref: '#/components/schemas/ApiError'
          type: array
      required:
        - vertexvis/batch:results
      type: object
    FileList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/FileMetadataData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    CreateFileRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateFileRequest_data'
      required:
        - data
      type: object
    FileMetadata:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/FileMetadataData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    GeometrySetList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/GeometrySetData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    CreateGeometrySetRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateGeometrySetRequest_data'
      required:
        - data
      type: object
    GeometrySet:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/GeometrySetData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    CreateHitRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateHitRequest_data'
      required:
        - data
      type: object
    Hit:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/Hit_data'
        included:
          items:
            oneOf:
              - $ref: '#/components/schemas/HitResultData'
              - $ref: '#/components/schemas/SceneItemData'
              - $ref: '#/components/schemas/PartRevisionData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - included
      type: object
    CreateTokenRequest:
      additionalProperties: false
      properties:
        scope:
          maxLength: 1024
          type: string
        code:
          $ref: '#/components/schemas/NonEmptyString'
        redirect_uri:
          $ref: '#/components/schemas/NonEmptyString'
        grant_type:
          example: client_credentials
          maxLength: 32
          type: string
        refresh_token:
          $ref: '#/components/schemas/NonEmptyString'
      required:
        - grant_type
      type: object
    OAuth2Token:
      additionalProperties: false
      properties:
        access_token:
          example: HnkQzHpk4iTaPfssu3zpI.PTbAxKdDIfrNcgrmsxQqg
          type: string
        token_type:
          example: bearer
          type: string
        account_id:
          example: 7b3f55e2-60f3-4bf3-82bc-f8afbce843b0
          type: string
        expires_in:
          example: 3600
          format: int32
          type: integer
        scopes:
          items:
            $ref: '#/components/schemas/NonEmptyString'
          type: array
        refresh_token:
          example: HnkQzHpk4iTaPfssu3zpI.PTbAxKdDIfrNcgrmsxQqg
          type: string
      required:
        - access_token
        - account_id
        - expires_in
        - scopes
        - token_type
      type: object
    OAuth2BadRequest:
      additionalProperties: false
      properties:
        error:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
      required:
        - error
      type: object
    RevokeOAuth2TokenRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/RevokeOAuth2TokenRequest_data'
      required:
        - data
      type: object
    AdminLoginAcceptRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/AdminLoginAcceptRequest_data'
      required:
        - data
      type: object
    AdminRedirectTo:
      additionalProperties: false
      properties:
        redirectTo:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
      required:
        - redirectTo
      type: object
    AdminConsentAcceptRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/AdminConsentAcceptRequest_data'
      required:
        - data
      type: object
    PartRenditionList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/PartRenditionData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    PartRendition:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/PartRenditionData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    PartRevision:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/PartRevisionData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    UpdatePartRevisionRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/UpdatePartRevisionRequest_data'
      required:
        - data
      type: object
    CreatePartRenditionRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreatePartRenditionRequest_data'
      required:
        - data
      type: object
    Vector3:
      additionalProperties: false
      description: 3D vector.
      properties:
        x:
          description: x-axis coordinate.
          example: 1.0
          type: number
        y:
          description: y-axis coordinate.
          example: 0.0
          type: number
        z:
          description: z-axis coordinate.
          example: 0.0
          type: number
      required:
        - x
        - 'y'
        - z
      type: object
    PartRevisionList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/PartRevisionData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    PartList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/PartData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    CreatePartRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreatePartRequest_data'
      required:
        - data
      type: object
    Part:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/PartData'
        included:
          items:
            $ref: '#/components/schemas/PartRevisionData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    SceneAlteration:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/SceneAlterationData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    SceneAlterationList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/SceneAlterationData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    CreateSceneAlterationRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateSceneAlterationRequest_data'
      required:
        - data
      type: object
    UpdateSceneItemOverrideRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/UpdateSceneItemOverrideRequest_data'
      required:
        - data
      type: object
    SceneItemOverride:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/SceneItemOverrideData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    SceneItemOverrideList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/SceneItemOverrideData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    CreateSceneItemOverrideRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateSceneItemOverrideRequest_data'
      required:
        - data
      type: object
    SceneItem:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/SceneItemData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    UpdateSceneItemRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/UpdateSceneItemRequest_data'
      required:
        - data
      type: object
    SceneItemList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/SceneItemData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    CreateSceneItemRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateSceneItemRequestData'
      required:
        - data
      type: object
    SceneView:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/SceneViewData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    UpdateSceneViewRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/UpdateSceneViewRequest_data'
      required:
        - data
      type: object
    SceneViewItem:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/SceneItemData'
        included:
          items:
            $ref: '#/components/schemas/SceneItemOverrideData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    SceneViewList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/SceneViewData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    CreateSceneViewRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateSceneViewRequest_data'
      required:
        - data
      type: object
    SceneList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/SceneData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    CreateSceneRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateSceneRequest_data'
      required:
        - data
      type: object
    Scene:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/SceneData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    UpdateSceneRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/UpdateSceneRequest_data'
      required:
        - data
      type: object
    SceneViewStateList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/SceneViewStateData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    CreateSceneViewStateRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateSceneViewStateRequest_data'
      required:
        - data
      type: object
    SceneViewState:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/SceneViewStateData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    UpdateSceneViewStateRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/UpdateSceneViewStateRequest_data'
      required:
        - data
      type: object
    CreateStreamKeyRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateStreamKeyRequest_data'
      required:
        - data
      type: object
    StreamKey:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/StreamKeyData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    StreamKeyList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/StreamKeyData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    CreateTranslationInspectionRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateTranslationInspectionRequest_data'
      required:
        - data
      type: object
    TranslationInspectionJob:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/TranslationInspectionJob_data'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    QueuedJobList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/QueuedJobData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    QueuedTranslationJob:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/QueuedTranslationJobData'
        included:
          items:
            anyOf:
              - $ref: '#/components/schemas/GeometrySetData'
              - $ref: '#/components/schemas/PartRevisionData'
              - $ref: '#/components/schemas/PartRenditionData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    CreateExportRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateExportRequest_data'
      required:
        - data
      type: object
    Export:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/ExportData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    WebhookSubscriptionList:
      additionalProperties: false
      properties:
        data:
          items:
            $ref: '#/components/schemas/WebhookSubscriptionData'
          type: array
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
        - links
      type: object
    CreateWebhookSubscriptionRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/CreateWebhookSubscriptionRequest_data'
      required:
        - data
      type: object
    WebhookSubscription:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/WebhookSubscriptionData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    WebhookEvent:
      additionalProperties: false
      example:
        data:
          relationships:
            owner:
              data:
                id: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
                type: account
              links:
                related: /some-resource/d98d621a-23da-49fe-af96-6be709abb718
            resource:
              data:
                id: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
                type: queued-scene-item
              links:
                related: /some-resource/d98d621a-23da-49fe-af96-6be709abb718
          attributes:
            created: 2020-01-01T12:00:00Z
            topic: some-string
          links:
            key:
              href: /some-resource/d98d621a-23da-49fe-af96-6be709abb718
          id: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          type: webhook-event
        links:
          key:
            href: /some-resource/d98d621a-23da-49fe-af96-6be709abb718
      properties:
        data:
          $ref: '#/components/schemas/WebhookEventData'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - data
      type: object
    UpdateWebhookSubscriptionRequest:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/UpdateWebhookSubscriptionRequest_data'
      required:
        - data
      type: object
    PerspectiveCamera:
      description: A camera type that mimics the way the human eye sees.
      example:
        type: perspective
        position:
          x: 0.0
          y: 0.0
          z: -100.0
        lookAt:
          x: 0.0
          y: 0.0
          z: 0.0
        up:
          x: 0.0
          y: 1.0
          z: 0.0
        fovY: 45.0
      properties:
        type:
          example: perspective
          type: string
        position:
          $ref: '#/components/schemas/Vector3'
        lookAt:
          $ref: '#/components/schemas/Vector3'
        up:
          $ref: '#/components/schemas/Vector3'
        fovY:
          description:
            A numerical floating-point value representing the field of
            view
          format: float
          maximum: 179
          minimum: 1
          type: number
      required:
        - lookAt
        - position
        - up
      type: object
    NonEmptyString:
      example: some-string
      maxLength: 1024
      minLength: 1
      type: string
    DateTime:
      example: 2020-01-01T12:00:00Z
      format: date-time
      type: string
    Links:
      additionalProperties:
        $ref: '#/components/schemas/Link'
      type: object
    ApiError:
      additionalProperties: false
      properties:
        id:
          example: 7c46d4c3-e065-4eae-87ec-08233cf8743b
          type: string
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
        status:
          example: '400'
          type: string
        code:
          example: ValidationError
          type: string
        title:
          example: A validation error occurred.
          type: string
        detail:
          example: '$.data.attributes.suppliedId: is missing but it is required'
          type: string
        source:
          $ref: '#/components/schemas/ApiError_source'
        meta:
          additionalProperties:
            type: string
          type: object
      type: object
    Meta:
      additionalProperties:
        type: string
      type: object
    ApplicationData:
      additionalProperties: false
      properties:
        type:
          example: application
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/ApplicationData_attributes'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - attributes
        - id
        - type
      type: object
    BatchOperation:
      additionalProperties: false
      properties:
        data:
          anyOf:
            - $ref: '#/components/schemas/CreateSceneItemRequestData'
          description: Operation's primary data.
        op:
          description: Batch operation type type.
          enum:
            - add
          example: add
          maxLength: 32
          type: string
        ref:
          $ref: '#/components/schemas/BatchOperation_ref'
      required:
        - data
        - op
        - ref
      type: object
    QueuedJobData:
      additionalProperties: false
      properties:
        type:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/QueuedJobData_attributes'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - attributes
        - id
        - type
      type: object
    RelationshipData:
      additionalProperties: false
      properties:
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        type:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
      required:
        - id
        - type
      type: object
    FileMetadataData:
      additionalProperties: false
      properties:
        type:
          example: file
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/FileMetadataData_attributes'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - attributes
        - id
        - type
      type: object
    GeometrySetData:
      additionalProperties: false
      properties:
        type:
          example: geometry-set
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/Hit_data_attributes'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - attributes
        - id
        - type
      type: object
    FileRelationship:
      additionalProperties: false
      description: Relationship to a `file`.
      properties:
        data:
          $ref: '#/components/schemas/FileRelationship_data'
      required:
        - data
      type: object
    Point:
      additionalProperties: false
      description: 2D point.
      properties:
        dx:
          description: x-axis coordinate.
          example: 0
          format: int32
          type: integer
        dy:
          description: y-axis coordinate.
          example: 0
          format: int32
          type: integer
      required:
        - dx
        - dy
      type: object
    Dimensions:
      additionalProperties: false
      description: An item's height and width.
      properties:
        height:
          description: Item's height.
          example: 10
          format: int32
          type: integer
        width:
          description: Item's width.
          example: 10
          format: int32
          type: integer
      required:
        - height
        - width
      type: object
    HitResultData:
      additionalProperties: false
      properties:
        type:
          example: hit
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/HitResultData_attributes'
        relationships:
          $ref: '#/components/schemas/HitResultData_relationships'
      required:
        - attributes
        - id
        - relationships
        - type
      type: object
    SceneItemData:
      additionalProperties: false
      properties:
        type:
          example: scene-item
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/SceneItemData_attributes'
        relationships:
          $ref: '#/components/schemas/SceneItemData_relationships'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - attributes
        - id
        - relationships
        - type
      type: object
    PartRevisionData:
      additionalProperties: false
      properties:
        type:
          example: part-revision
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/PartRevisionData_attributes'
        relationships:
          $ref: '#/components/schemas/PartRevisionData_relationships'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - attributes
        - id
        - relationships
        - type
      type: object
    PartRenditionData:
      additionalProperties: false
      properties:
        type:
          example: part-rendition
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/PartRenditionData_attributes'
        relationships:
          $ref: '#/components/schemas/PartRenditionData_relationships'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - attributes
        - id
        - relationships
        - type
      type: object
    MetadataLongType:
      properties:
        type:
          description: Type of metadata value.
          example: long
          maxLength: 32
          type: string
        value:
          description: A numerical long value.
          format: int64
          type: integer
      required:
        - type
        - value
      type: object
    MetadataFloatType:
      properties:
        type:
          description: Type of metadata value.
          example: float
          maxLength: 32
          type: string
        value:
          description: A numerical floating-point value.
          format: float
          type: number
      required:
        - type
        - value
      type: object
    MetadataDateType:
      properties:
        type:
          description: Type of metadata value.
          example: date
          maxLength: 32
          type: string
        value:
          description: A date value.
          example: 2022-02-22T10:11:12Z
          format: date-time
          type: string
      required:
        - type
        - value
      type: object
    MetadataStringType:
      properties:
        type:
          description: Type of metadata value.
          example: string
          maxLength: 32
          type: string
        value:
          description: A string value.
          example: Some value
          type: string
      required:
        - type
        - value
      type: object
    MetadataNullType:
      properties:
        type:
          description: Type of metadata value.
          example: 'null'
          maxLength: 32
          type: string
      required:
        - type
      type: object
    PartData:
      additionalProperties: false
      properties:
        type:
          example: part
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/PartData_attributes'
        relationships:
          $ref: '#/components/schemas/PartData_relationships'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - attributes
        - id
        - type
      type: object
    PartAssemblyRelationship:
      additionalProperties: false
      description: Create Part Assembly
      properties:
        data:
          $ref: '#/components/schemas/PartAssemblyRelationship_data'
      required:
        - data
      type: object
    SceneAlterationData:
      additionalProperties: false
      properties:
        type:
          example: scene-alteration
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/Hit_data_attributes'
        relationships:
          $ref: '#/components/schemas/SceneAlterationData_relationships'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - attributes
        - id
        - relationships
        - type
      type: object
    SceneOperation:
      additionalProperties: false
      properties:
        query:
          anyOf:
            - $ref: '#/components/schemas/QueryById'
            - $ref: '#/components/schemas/QueryByCollection'
            - $ref: '#/components/schemas/QueryAll'
          description:
            Query `scene-items`. Use `query-by-collection` to combine multiple
            queries.
        operations:
          description:
            List of operations to perform on `scene-items` matching the
            query.
          items:
            anyOf:
              - $ref: '#/components/schemas/ChangeVisibilityOp'
              - $ref: '#/components/schemas/ChangeMaterialOp'
              - $ref: '#/components/schemas/ClearMaterialOp'
              - $ref: '#/components/schemas/ChangeTransformOp'
              - $ref: '#/components/schemas/ClearTransformOp'
              - $ref: '#/components/schemas/SelectOp'
              - $ref: '#/components/schemas/DeselectOperation'
              - $ref: '#/components/schemas/ClearRenOp'
              - $ref: '#/components/schemas/ViewDefaultRenOp'
              - $ref: '#/components/schemas/ViewRenByIdOp'
              - $ref: '#/components/schemas/ViewRenBySuppliedIdOp'
              - $ref: '#/components/schemas/ViewRepByIdOp'
              - $ref: '#/components/schemas/ViewRepByPredefinedIdOp'
              - $ref: '#/components/schemas/ClearRepOp'
          maxItems: 1024
          type: array
      required:
        - operations
        - query
      type: object
    Matrix4Nullable:
      additionalProperties: false
      description:
        4x4 affine transformation matrix, see [Matrix transformations](https://developer.vertexvis.com/docs/guides/matrix-transformations)
        for details.
      example:
        r0:
          x: 1.0
          y: 0.0
          z: 0.0
          w: 0.0
        r1:
          x: 0.0
          y: 1.0
          z: 0.0
          w: 0.0
        r2:
          x: 0.0
          y: 0.0
          z: 1.0
          w: 0.0
        r3:
          x: 0.0
          y: 0.0
          z: 0.0
          w: 1.0
      nullable: true
      properties:
        r0:
          $ref: '#/components/schemas/Vector4'
        r1:
          $ref: '#/components/schemas/Vector4'
        r2:
          $ref: '#/components/schemas/Vector4'
        r3:
          $ref: '#/components/schemas/Vector4'
      required:
        - r0
        - r1
        - r2
        - r3
      type: object
    ColorMaterialNullable:
      additionalProperties: false
      description: Color properties describing how a material looks.
      nullable: true
      properties:
        opacity:
          description: An opacity value from 0 to 255.
          example: 255
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        glossiness:
          description: Glossiness from 0 to 128.
          example: 0
          format: int32
          maximum: 128
          minimum: 0
          type: integer
        ambient:
          $ref: '#/components/schemas/Color3'
        diffuse:
          $ref: '#/components/schemas/Color3'
        specular:
          $ref: '#/components/schemas/Color3'
        emissive:
          $ref: '#/components/schemas/Color3'
      required:
        - ambient
        - diffuse
        - emissive
        - glossiness
        - opacity
        - specular
      type: object
    SceneItemOverrideData:
      additionalProperties: false
      properties:
        type:
          example: scene-item-override
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/SceneItemOverrideData_attributes'
        relationships:
          $ref: '#/components/schemas/SceneItemOverrideData_relationships'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - attributes
        - id
        - relationships
        - type
      type: object
    Matrix4:
      additionalProperties: false
      description:
        4x4 affine transformation matrix, see [Matrix transformations](https://developer.vertexvis.com/docs/guides/matrix-transformations)
        for details.
      example:
        r0:
          x: 1.0
          y: 0.0
          z: 0.0
          w: 0.0
        r1:
          x: 0.0
          y: 1.0
          z: 0.0
          w: 0.0
        r2:
          x: 0.0
          y: 0.0
          z: 1.0
          w: 0.0
        r3:
          x: 0.0
          y: 0.0
          z: 0.0
          w: 1.0
      properties:
        r0:
          $ref: '#/components/schemas/Vector4'
        r1:
          $ref: '#/components/schemas/Vector4'
        r2:
          $ref: '#/components/schemas/Vector4'
        r3:
          $ref: '#/components/schemas/Vector4'
      required:
        - r0
        - r1
        - r2
        - r3
      type: object
    ColorMaterial:
      additionalProperties: false
      description: Color properties describing how a material looks.
      properties:
        opacity:
          description: An opacity value from 0 to 255.
          example: 255
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        glossiness:
          description: Glossiness from 0 to 128.
          example: 0
          format: int32
          maximum: 128
          minimum: 0
          type: integer
        ambient:
          $ref: '#/components/schemas/Color3'
        diffuse:
          $ref: '#/components/schemas/Color3'
        specular:
          $ref: '#/components/schemas/Color3'
        emissive:
          $ref: '#/components/schemas/Color3'
      required:
        - ambient
        - diffuse
        - emissive
        - glossiness
        - opacity
        - specular
      type: object
    SceneItemRelationship:
      additionalProperties: false
      description: Relationship to a `scene-item`.
      properties:
        data:
          $ref: '#/components/schemas/SceneItemRelationship_data'
      required:
        - data
      type: object
    MaterialOverride:
      additionalProperties: false
      description: Color material override.
      properties:
        value:
          $ref: '#/components/schemas/ColorMaterial'
      type: object
    GeometrySetRelationship:
      additionalProperties: false
      description: Relationship to a `geometry-set`.
      properties:
        data:
          $ref: '#/components/schemas/GeometrySetRelationshipData'
      required:
        - data
      type: object
    PartRevisionRelationship:
      additionalProperties: false
      description: Relationship to a `part-revision`.
      properties:
        data:
          $ref: '#/components/schemas/PartData_relationships_partRevisions'
      required:
        - data
      type: object
    CreateSceneItemRequestData:
      additionalProperties: false
      properties:
        type:
          description: Resource object type.
          example: scene-item
          maxLength: 32
          type: string
        attributes:
          $ref: '#/components/schemas/CreateSceneItemRequestData_attributes'
        relationships:
          $ref: '#/components/schemas/CreateSceneItemRequestData_relationships'
      required:
        - attributes
        - relationships
        - type
      type: object
    SceneViewData:
      additionalProperties: false
      properties:
        type:
          example: scene-view
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/SceneViewData_attributes'
        relationships:
          $ref: '#/components/schemas/SceneViewData_relationships'
      required:
        - attributes
        - id
        - relationships
        - type
      type: object
    OrthographicCamera:
      description:
        A camera type where an object's size stays consistent regardless
        of its distance to the camera.
      example:
        type: orthographic
        viewVector:
          x: 0.0
          y: 0.0
          z: 1.0
        lookAt:
          x: 0.0
          y: 0.0
          z: 0.0
        up:
          x: 0.0
          y: 1.0
          z: 0.0
        fovHeight: 1.0
      properties:
        type:
          example: orthographic
          type: string
        viewVector:
          $ref: '#/components/schemas/Vector3'
        lookAt:
          $ref: '#/components/schemas/Vector3'
        up:
          $ref: '#/components/schemas/Vector3'
        fovHeight:
          type: number
      required:
        - fovHeight
        - lookAt
        - up
        - viewVector
      type: object
    CameraFit:
      additionalProperties: false
      description: Fit camera in 3D space based on items in scene.
      properties:
        type:
          description: Resource object type.
          enum:
            - fit-visible-scene-items
            - reset
          example: fit-visible-scene-items
          maxLength: 32
          type: string
      required:
        - type
      type: object
    CrossSectioning:
      additionalProperties: false
      nullable: true
      properties:
        planes:
          items:
            $ref: '#/components/schemas/SectionPlane'
          type: array
      required:
        - planes
      type: object
    SceneViewStateRelationship:
      additionalProperties: false
      description: Relationship to a `scene-view-state`.
      properties:
        data:
          $ref: '#/components/schemas/SceneViewStateRelationship_data'
      required:
        - data
      type: object
    SceneData:
      additionalProperties: false
      properties:
        type:
          example: scene
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/SceneData_attributes'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - attributes
        - id
        - type
      type: object
    Orientation:
      additionalProperties: false
      description: Normals describing up & front directions
      properties:
        up:
          $ref: '#/components/schemas/Vector3'
        front:
          $ref: '#/components/schemas/Vector3'
      required:
        - front
        - up
      type: object
    SceneRelationship:
      additionalProperties: false
      description: Relationship to a `scene`.
      properties:
        data:
          $ref: '#/components/schemas/SceneRelationship_data'
      required:
        - data
      type: object
    SceneViewStateData:
      additionalProperties: false
      properties:
        type:
          example: scene-view-state
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/SceneViewStateData_attributes'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - attributes
        - id
        - type
      type: object
    SceneViewRelationship:
      additionalProperties: false
      description: Relationship to a `scene-view`.
      properties:
        data:
          $ref: '#/components/schemas/SceneViewRelationship_data'
      required:
        - data
      type: object
    StreamKeyData:
      additionalProperties: false
      properties:
        type:
          example: stream-key
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/StreamKeyData_attributes'
        relationships:
          $ref: '#/components/schemas/SceneViewData_relationships'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - attributes
        - id
        - relationships
        - type
      type: object
    QueuedTranslationJobData:
      additionalProperties: false
      properties:
        type:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/QueuedTranslationJobData_attributes'
        relationships:
          $ref: '#/components/schemas/QueuedTranslationJobData_relationships'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - attributes
        - id
        - type
      type: object
    CADExportConfig:
      allOf:
        - $ref: '#/components/schemas/ExportConfig'
      description: Describes the options for configuring a CAD file export.
      example:
        format: jt
    ExportRelationship:
      additionalProperties: false
      description: Relationship to an `export`.
      properties:
        data:
          $ref: '#/components/schemas/ExportRelationshipData'
      required:
        - data
      type: object
    ExportStateRelationship:
      additionalProperties: false
      description: Relationship to an `export`.
      properties:
        data:
          $ref: '#/components/schemas/ExportStateRelationshipData'
      required:
        - data
      type: object
    ExportData:
      additionalProperties: false
      properties:
        type:
          example: export
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/ExportData_attributes'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - attributes
        - id
        - type
      type: object
    WebhookSubscriptionData:
      additionalProperties: false
      properties:
        type:
          example: webhook-subscription
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/WebhookSubscriptionData_attributes'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - attributes
        - id
        - relationships
        - type
      type: object
    WebhookEventData:
      additionalProperties: false
      example:
        relationships:
          owner:
            data:
              id: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
              type: account
            links:
              related: /some-resource/d98d621a-23da-49fe-af96-6be709abb718
          resource:
            data:
              id: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
              type: queued-scene-item
            links:
              related: /some-resource/d98d621a-23da-49fe-af96-6be709abb718
        attributes:
          created: 2020-01-01T12:00:00Z
          topic: some-string
        links:
          key:
            href: /some-resource/d98d621a-23da-49fe-af96-6be709abb718
        id: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
        type: webhook-event
      properties:
        type:
          example: webhook-event
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/WebhookEventData_attributes'
        relationships:
          $ref: '#/components/schemas/WebhookEventData_relationships'
        links:
          additionalProperties:
            $ref: '#/components/schemas/Link'
          type: object
      required:
        - attributes
        - id
        - type
      type: object
    Link:
      additionalProperties: false
      example:
        href: /some-resource/d98d621a-23da-49fe-af96-6be709abb718
      properties:
        href:
          example: /some-resource/d98d621a-23da-49fe-af96-6be709abb718
          type: string
      required:
        - href
      type: object
    BoundingBox:
      additionalProperties: false
      description: 3D bounding-box
      example:
        min:
          x: 0.0
          y: 0.0
          z: 0.0
        max:
          x: 100.0
          y: 100.0
          z: 100.0
      properties:
        min:
          $ref: '#/components/schemas/Vector3'
        max:
          $ref: '#/components/schemas/Vector3'
      required:
        - max
        - min
      type: object
    PartRenditionRelationship:
      additionalProperties: false
      description: Relationship to a `part-rendition`.
      properties:
        data:
          $ref: '#/components/schemas/PartRenditionRelationship_data'
      required:
        - data
      type: object
    GeometrySetRelationshipData:
      additionalProperties: false
      properties:
        type:
          description: Resource object type.
          enum:
            - geometry-set
          example: geometry-set
          maxLength: 32
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
      required:
        - id
        - type
      type: object
    PartRelationshipData:
      additionalProperties: false
      properties:
        type:
          description: Resource object type.
          enum:
            - part
          example: part
          maxLength: 32
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
      required:
        - id
        - type
      type: object
    PartRevisionInstance:
      additionalProperties: false
      description:
        A reference to an existing PartRevision. Specify one and only one
        of referenceId or suppliedReferenceId to refer to a revision.
      properties:
        ordinal:
          description:
            A 0-based index used for defining a consistent ordering for
            children of an assembly
          minimum: 0
          type: integer
        revisionId:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        suppliedRevisionId:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        transform:
          $ref: '#/components/schemas/Matrix4'
      required:
        - ordinal
      type: object
    QueryById:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/QueryById_data'
      required:
        - data
      type: object
    QueryByCollection:
      additionalProperties: false
      properties:
        data:
          $ref: '#/components/schemas/QueryByCollection_data'
      required:
        - data
      type: object
    QueryAll:
      description: Resource object type.
      enum:
        - all
      example: all
      maxLength: 32
      type: string
    ChangeVisibilityOp:
      additionalProperties: false
      properties:
        type:
          description: Resource object type.
          enum:
            - change-visibility
          example: change-visibility
          maxLength: 32
          type: string
        visible:
          description: Item visibility.
          example: true
          type: boolean
      required:
        - type
        - visible
      type: object
    ChangeMaterialOp:
      additionalProperties: false
      properties:
        type:
          description: Resource object type.
          enum:
            - change-material
          example: change-material
          maxLength: 32
          type: string
        material:
          $ref: '#/components/schemas/ColorMaterial'
      required:
        - material
        - type
      type: object
    ClearMaterialOp:
      additionalProperties: false
      properties:
        type:
          description: Resource object type.
          enum:
            - clear-material
          example: clear-material
          maxLength: 32
          type: string
      required:
        - type
      type: object
    ChangeTransformOp:
      additionalProperties: false
      properties:
        type:
          description: Resource object type.
          enum:
            - change-transform
          example: change-transform
          maxLength: 32
          type: string
        transform:
          $ref: '#/components/schemas/Matrix4'
      required:
        - transform
        - type
      type: object
    ClearTransformOp:
      additionalProperties: false
      properties:
        type:
          description: Resource object type.
          enum:
            - clear-transform
          example: clear-transform
          maxLength: 32
          type: string
      required:
        - type
      type: object
    SelectOp:
      additionalProperties: false
      properties:
        type:
          description: Resource object type.
          enum:
            - select
          example: select
          maxLength: 32
          type: string
      required:
        - type
      type: object
    DeselectOperation:
      additionalProperties: false
      properties:
        type:
          description: Resource object type.
          enum:
            - deselect
          example: deselect
          maxLength: 32
          type: string
      required:
        - type
      type: object
    ClearRenOp:
      additionalProperties: false
      properties:
        type:
          description: Resource object type.
          enum:
            - clear-rendition
          example: clear-rendition
          maxLength: 32
          type: string
      required:
        - type
      type: object
    ViewDefaultRenOp:
      additionalProperties: false
      properties:
        type:
          description: Resource object type.
          enum:
            - view-default-rendition
          example: view-default-rendition
          maxLength: 32
          type: string
      required:
        - type
      type: object
    ViewRenByIdOp:
      additionalProperties: false
      properties:
        type:
          description: Resource object type.
          enum:
            - view-rendition-by-id
          example: view-rendition-by-id
          maxLength: 32
          type: string
        renditionId:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
      required:
        - renditionId
        - type
      type: object
    ViewRenBySuppliedIdOp:
      additionalProperties: false
      properties:
        type:
          description: Resource object type.
          enum:
            - view-rendition-by-supplied-id
          example: view-rendition-by-supplied-id
          maxLength: 32
          type: string
        renditionSuppliedId:
          maxLength: 255
          type: string
      required:
        - renditionSuppliedId
        - type
      type: object
    ViewRepByIdOp:
      additionalProperties: false
      properties:
        type:
          description: Resource object type.
          enum:
            - view-representation-by-id
          example: view-representation-by-id
          maxLength: 32
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
      required:
        - id
        - type
      type: object
    ViewRepByPredefinedIdOp:
      additionalProperties: false
      properties:
        type:
          description: Resource object type.
          enum:
            - view-representation-by-predefined-id
          example: view-representation-by-predefined-id
          maxLength: 64
          type: string
        id:
          description: A predefined representation identifier, such as `entire-part`.
          enum:
            - empty
            - entire-part
          example: entire-part
          maxLength: 32
          type: string
      required:
        - id
        - type
      type: object
    ClearRepOp:
      additionalProperties: false
      properties:
        type:
          description: Resource object type.
          enum:
            - clear-representation
          example: clear-representation
          maxLength: 32
          type: string
      required:
        - type
      type: object
    Vector4:
      additionalProperties: false
      description: 4D vector.
      properties:
        x:
          description: x-axis coordinate.
          example: 1.0
          type: number
        y:
          description: y-axis coordinate.
          example: 0.0
          type: number
        z:
          description: z-axis coordinate.
          example: 0.0
          type: number
        w:
          description: w value.
          example: 0.0
          type: number
      required:
        - w
        - x
        - 'y'
        - z
      type: object
    ColorMaterialOpacity:
      description: An opacity value from 0 to 255.
      example: 255
      format: int32
      maximum: 255
      minimum: 0
      type: integer
    Glossiness:
      description: Glossiness from 0 to 128.
      example: 0
      format: int32
      maximum: 128
      minimum: 0
      type: integer
    Color3:
      additionalProperties: false
      description: RGB color.
      properties:
        r:
          description: Color value from 0 to 255.
          example: 255
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        g:
          description: Color value from 0 to 255.
          example: 255
          format: int32
          maximum: 255
          minimum: 0
          type: integer
        b:
          description: Color value from 0 to 255.
          example: 255
          format: int32
          maximum: 255
          minimum: 0
          type: integer
      required:
        - b
        - g
        - r
      type: object
    PartRevisionSuppliedId:
      additionalProperties: false
      properties:
        suppliedPartId:
          description:
            ID provided for correlation. For example, an existing ID from
            a PLM system.
          maxLength: 1024
          type: string
        suppliedRevisionId:
          description:
            ID provided for correlation. For example, an existing ID from
            a PLM system.
          maxLength: 1024
          type: string
      required:
        - suppliedPartId
        - suppliedRevisionId
      type: object
    SectionPlane:
      additionalProperties: false
      properties:
        normal:
          $ref: '#/components/schemas/Vector3'
        offset:
          description: Distance from the center point to move the plane.
          example: 0.0
          type: number
      required:
        - normal
        - offset
      type: object
    ThumbnailData:
      additionalProperties: false
      properties:
        uri:
          type: string
        height:
          type: integer
        width:
          type: integer
      required:
        - height
        - uri
        - width
      type: object
    FeatureLines:
      additionalProperties: false
      properties:
        color:
          $ref: '#/components/schemas/Color3'
        width:
          type: number
      required:
        - color
        - width
      type: object
    ExportConfig:
      description: Describes the options for configuring a file export.
      discriminator:
        propertyName: format
      example:
        format: jt
      properties:
        format:
          example: jt
          type: string
      required:
        - format
      type: object
    ExportRelationshipData:
      additionalProperties: false
      properties:
        type:
          description: Resource object type.
          enum:
            - scene
          example: scene
          maxLength: 32
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
      required:
        - id
        - type
      type: object
    ExportStateRelationshipData:
      additionalProperties: false
      properties:
        type:
          description: Resource object type.
          enum:
            - scene-view-state
          example: scene-view-state
          maxLength: 32
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
      required:
        - id
        - type
      type: object
    RelationshipLinks:
      additionalProperties: false
      example:
        related: /some-resource/d98d621a-23da-49fe-af96-6be709abb718
      properties:
        related:
          example: /some-resource/d98d621a-23da-49fe-af96-6be709abb718
          type: string
      required:
        - related
      type: object
    Color:
      description: Color value from 0 to 255.
      example: 255
      format: int32
      maximum: 255
      minimum: 0
      type: integer
    CreateAccountRequest_data_attributes:
      properties:
        name:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
      required:
        - name
      type: object
    CreateAccountRequest_data:
      properties:
        type:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        attributes:
          $ref: '#/components/schemas/CreateAccountRequest_data_attributes'
      required:
        - attributes
        - type
      type: object
    Account_data_attributes:
      properties:
        name:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        status:
          example: active
          type: string
        created:
          example: 2020-01-01T12:00:00Z
          format: date-time
          type: string
      required:
        - created
        - name
      type: object
    Account_data:
      properties:
        type:
          example: account
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/Account_data_attributes'
      required:
        - attributes
        - id
        - type
      type: object
    UpdateAccountRequest_data_attributes:
      properties:
        status:
          enum:
            - active
            - disabled
          example: active
          maxLength: 32
          type: string
        name:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        owner:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
      type: object
    UpdateAccountRequest_data:
      properties:
        type:
          description: Resource object type.
          example: account
          maxLength: 32
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateAccountRequest_data_attributes'
      required:
        - attributes
        - type
      type: object
    AdminCreateApplicationRequest_data_attributes:
      properties:
        name:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        scopes:
          items:
            $ref: '#/components/schemas/NonEmptyString'
          type: array
        redirect_uris:
          items:
            $ref: '#/components/schemas/NonEmptyString'
          type: array
      required:
        - name
      type: object
    AdminCreateApplicationRequest_data:
      properties:
        type:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        attributes:
          $ref: '#/components/schemas/AdminCreateApplicationRequest_data_attributes'
      required:
        - attributes
        - type
      type: object
    CreatedApplication_data_attributes:
      properties:
        name:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        clientId:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        secret:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        created:
          example: 2020-01-01T12:00:00Z
          format: date-time
          type: string
        scopes:
          items:
            $ref: '#/components/schemas/NonEmptyString'
          type: array
        redirect_uris:
          items:
            $ref: '#/components/schemas/NonEmptyString'
          type: array
      required:
        - clientId
        - created
        - name
        - redirect_uris
        - scopes
        - secret
      type: object
    CreatedApplication_data:
      properties:
        type:
          example: application
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/CreatedApplication_data_attributes'
      required:
        - attributes
        - id
        - type
      type: object
    UpdateApplicationRequest_data:
      properties:
        type:
          description: Resource object type.
          example: application
          maxLength: 32
          type: string
        attributes:
          $ref: '#/components/schemas/CreateAccountRequest_data_attributes'
      required:
        - attributes
        - type
      type: object
    CreateFileRequest_data_attributes:
      properties:
        name:
          description:
            Name matching that of the file you are uploading, including
            file extension.
          example: model.zip
          maxLength: 1024
          minLength: 1
          type: string
        suppliedId:
          description:
            ID provided for correlation. For example, an existing ID from
            a PLM system.
          example: PN12345
          maxLength: 1024
          type: string
        rootFileName:
          description:
            File name of the root part or assembly, including file extension.
            Required if `name` references an archive file extension, ignored otherwise.
          example: root-assembly.prt.1
          maxLength: 1024
          type: string
      required:
        - name
      type: object
    CreateFileRequest_data:
      properties:
        type:
          description: Resource object type.
          example: file
          maxLength: 32
          type: string
        attributes:
          $ref: '#/components/schemas/CreateFileRequest_data_attributes'
      required:
        - attributes
        - type
      type: object
    CreateGeometrySetRequest_data_relationships:
      properties:
        source:
          $ref: '#/components/schemas/FileRelationship'
      required:
        - source
      type: object
    CreateGeometrySetRequest_data:
      properties:
        type:
          description: Resource object type.
          example: geometry-set
          maxLength: 32
          type: string
        relationships:
          $ref: '#/components/schemas/CreateGeometrySetRequest_data_relationships'
      required:
        - relationships
        - type
      type: object
    CreateHitRequest_data_attributes:
      properties:
        point:
          $ref: '#/components/schemas/Point'
        viewport:
          $ref: '#/components/schemas/Dimensions'
      required:
        - point
        - viewport
      type: object
    CreateHitRequest_data:
      properties:
        type:
          description: Resource object type.
          example: hit
          maxLength: 32
          type: string
        attributes:
          $ref: '#/components/schemas/CreateHitRequest_data_attributes'
      required:
        - attributes
        - type
      type: object
    Hit_data_attributes:
      properties:
        created:
          example: 2020-01-01T12:00:00Z
          format: date-time
          type: string
      required:
        - created
      type: object
    Hit_data_relationships:
      properties:
        results:
          items:
            $ref: '#/components/schemas/RelationshipData'
          type: array
      required:
        - results
      type: object
    Hit_data:
      properties:
        type:
          example: hit
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/Hit_data_attributes'
        relationships:
          $ref: '#/components/schemas/Hit_data_relationships'
      required:
        - attributes
        - id
        - relationships
        - type
      type: object
    RevokeOAuth2TokenRequest_data_attributes:
      properties:
        token:
          description: Token to revoke.
          example: yj4oeKWCib6JlLsN64Ns.9CyY4gvhueXfCw6wPBJ6
          maxLength: 1024
          type: string
      required:
        - token
      type: object
    RevokeOAuth2TokenRequest_data:
      properties:
        type:
          description: Resource object type.
          example: oauth2
          maxLength: 32
          type: string
        attributes:
          $ref: '#/components/schemas/RevokeOAuth2TokenRequest_data_attributes'
      required:
        - attributes
        - type
      type: object
    AdminLoginAcceptRequest_data_attributes:
      properties:
        subject:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
      required:
        - subject
      type: object
    AdminLoginAcceptRequest_data:
      properties:
        type:
          description: Resource object type.
          type: string
        attributes:
          $ref: '#/components/schemas/AdminLoginAcceptRequest_data_attributes'
      required:
        - attributes
        - type
      type: object
    AdminConsentAcceptRequest_data_attributes:
      properties:
        session:
          type: object
      required:
        - session
      type: object
    AdminConsentAcceptRequest_data:
      properties:
        type:
          description: Resource object type.
          type: string
        attributes:
          $ref: '#/components/schemas/AdminConsentAcceptRequest_data_attributes'
      required:
        - attributes
        - type
      type: object
    UpdatePartRevisionRequest_data_attributes:
      properties:
        metadata:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/MetadataLongType'
              - $ref: '#/components/schemas/MetadataFloatType'
              - $ref: '#/components/schemas/MetadataDateType'
              - $ref: '#/components/schemas/MetadataStringType'
              - $ref: '#/components/schemas/MetadataNullType'
          description: |
            Metadata about the `part` and/or `part-revision`. This metadata will take precedence over any metadata that belongs to the part file if `indexMetadata` is specified.
          type: object
        indexMetadata:
          description: |
            Whether or not to index metadata in the part file when sending a file relationship - not used otherwise. To ignore metadata from the part file and add your own, pass `false` for `indexMetadata` and supply custom metadata using the `metadata` field.
          example: false
          type: boolean
        name:
          description:
            Name to be used for the root part. This will be used when given
            a file relationship - not used otherwise.
          example: 1/2in. Flat Washer
          maxLength: 255
          type: string
        suppliedIdKey:
          description:
            Metadata key used to extract an ID used for correlation. This
            will be used when given a file relationship - not used otherwise.
          example: ProductNumber
          maxLength: 255
          type: string
        suppliedRevisionIdKey:
          description:
            Metadata key used to extract an ID used for correlation. This
            will be used when given a file relationship - not used otherwise.
          example: RevisionId
          maxLength: 255
          type: string
        suppliedInstanceIdKey:
          description:
            Metadata key used to extract an ID used for correlation. This
            will be used when given a file relationship - not used otherwise.
          example: InstanceId
          maxLength: 255
          type: string
      type: object
    UpdatePartRevisionRequest_data:
      description: |
        Modify existing part revisions using this endpoint. When specifying a `relationship`, the generated output from that relationship will be used to replace any relationship that is present on the revision prior to the update.
        For example, sending a file relationship that has geometry will replace the existing geometry on the revision with the new geometry in the given file.
      properties:
        type:
          description: Resource object type.
          example: part-revision
          maxLength: 32
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/UpdatePartRevisionRequest_data_attributes'
        relationships:
          $ref: '#/components/schemas/CreateGeometrySetRequest_data_relationships'
      required:
        - attributes
        - id
        - type
      type: object
    CreatePartRenditionRequest_data_attributes:
      properties:
        name:
          example: 1/2in. Washer (flat)
          maxLength: 255
          type: string
        suppliedId:
          description:
            ID provided for correlation. For example, an existing ID from
            a PLM system.
          example: PN12345
          maxLength: 255
          type: string
        makeDefault:
          description:
            Whether or not to replace the default rendition for the part
            revision with the newly created rendition.
          example: false
          type: boolean
      type: object
    CreatePartRenditionRequest_data:
      description: |
        Create a new part rendition.

        This endpoint includes multiple successful response codes: [`201`, `202`].

        When not given a relationship, this endpoint will create a part rendition with an empty geometry and return a `201`
        status code.

        When given a relationship to translate, this endpoint will return a `202` status code with the location of a
        `queued-translation`. The status of the translation can be queried via `getQueuedTranslation`. After the
        translation is complete, the returned value will include a `part-rendition` that references
        the translated geometry.
      properties:
        type:
          description: Resource object type.
          example: part-rendition
          maxLength: 32
          type: string
        attributes:
          $ref: '#/components/schemas/CreatePartRenditionRequest_data_attributes'
        relationships:
          $ref: '#/components/schemas/CreateGeometrySetRequest_data_relationships'
      required:
        - attributes
        - type
      type: object
    CreatePartRequest_data_attributes:
      properties:
        suppliedId:
          description: |
            ID provided for correlation. For example, an existing ID from a PLM system.
          example: PN12345
          maxLength: 1024
          type: string
        suppliedRevisionId:
          description: |
            ID provided for correlation. For example, an existing ID from a PLM system.
            Sending a new suppliedRevisionId combined with an existing suppliedId will create a new
            part revision for an existing part.
          example: RevA
          maxLength: 1024
          type: string
        indexMetadata:
          description: |
            Whether or not to index metadata in the part file. To ignore metadata from the part file and add your own, pass `false` for `indexMetadata` and supply custom metadata using the `metadata` field.
          example: false
          type: boolean
        metadata:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/MetadataLongType'
              - $ref: '#/components/schemas/MetadataFloatType'
              - $ref: '#/components/schemas/MetadataDateType'
              - $ref: '#/components/schemas/MetadataStringType'
              - $ref: '#/components/schemas/MetadataNullType'
          description: |
            Additional metadata about the `part` and/or `part-revision`. This metadata will take precedence over any metadata that belongs to the part file if `indexMetadata` is specified.
          type: object
        name:
          description: Name to be used for the root part.
          example: 1/2in. Flat Washer
          maxLength: 255
          type: string
        revisionName:
          description: Optional name to be used for the part revision.
          example: 1/2in. Flat Washer - A
          maxLength: 255
          type: string
        suppliedIdKey:
          description: Metadata key used to extract an ID used for correlation.
          example: ProductNumber
          maxLength: 255
          type: string
        suppliedRevisionIdKey:
          description: Metadata key used to extract an ID used for correlation.
          example: RevisionId
          maxLength: 255
          type: string
        suppliedInstanceIdKey:
          description: Metadata key used to extract an ID used for correlation.
          example: InstanceId
          maxLength: 255
          type: string
      type: object
    CreatePartRequest_data_relationships:
      properties:
        source:
          anyOf:
            - $ref: '#/components/schemas/FileRelationship'
            - $ref: '#/components/schemas/PartAssemblyRelationship'
      required:
        - source
      type: object
    CreatePartRequest_data:
      properties:
        type:
          description:
            Resource object type. Specify one and only one of suppliedId
            or suppliedIdKey and one and only one of suppliedRevisionId or suppliedRevisionIdKey.
          example: part
          maxLength: 32
          type: string
        attributes:
          $ref: '#/components/schemas/CreatePartRequest_data_attributes'
        relationships:
          $ref: '#/components/schemas/CreatePartRequest_data_relationships'
      required:
        - attributes
        - type
      type: object
    CreateSceneAlterationRequest_data_attributes:
      properties:
        alterations:
          description: List of alterations to apply.
          items:
            $ref: '#/components/schemas/SceneOperation'
          maxItems: 1024
          type: array
      required:
        - alterations
      type: object
    CreateSceneAlterationRequest_data:
      properties:
        type:
          description: Resource object type.
          example: scene-alteration
          maxLength: 32
          type: string
        attributes:
          $ref: '#/components/schemas/CreateSceneAlterationRequest_data_attributes'
      required:
        - attributes
        - type
      type: object
    UpdateSceneItemOverrideRequest_data_attributes:
      properties:
        visible:
          description: Item visibility.
          example: true
          nullable: true
          type: boolean
        transform:
          $ref: '#/components/schemas/Matrix4Nullable'
        material:
          $ref: '#/components/schemas/ColorMaterialNullable'
        selected:
          nullable: true
          type: boolean
        phantom:
          nullable: true
          type: boolean
        endItem:
          nullable: true
          type: boolean
      type: object
    UpdateSceneItemOverrideRequest_data:
      properties:
        type:
          description: Resource object type.
          example: scene-item-override
          maxLength: 32
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateSceneItemOverrideRequest_data_attributes'
      required:
        - attributes
        - id
        - type
      type: object
    CreateSceneItemOverrideRequest_data_attributes:
      properties:
        visible:
          description: Item visibility.
          example: true
          type: boolean
        transform:
          $ref: '#/components/schemas/Matrix4'
        material:
          $ref: '#/components/schemas/ColorMaterial'
        selected:
          type: boolean
        phantom:
          description: Phantom state of the item.
          type: boolean
        endItem:
          description: Whether this item is an end item.
          type: boolean
      type: object
    CreateSceneItemOverrideRequest_data_relationships:
      properties:
        sceneItem:
          $ref: '#/components/schemas/SceneItemRelationship'
      required:
        - sceneItem
      type: object
    CreateSceneItemOverrideRequest_data:
      properties:
        type:
          description: Resource object type.
          example: scene-item-override
          maxLength: 32
          type: string
        attributes:
          $ref: '#/components/schemas/CreateSceneItemOverrideRequest_data_attributes'
        relationships:
          $ref: '#/components/schemas/CreateSceneItemOverrideRequest_data_relationships'
      required:
        - attributes
        - relationships
        - type
      type: object
    UpdateSceneItemRequest_data_attributes:
      properties:
        visible:
          description: Item visibility.
          example: true
          type: boolean
        materialOverride:
          $ref: '#/components/schemas/MaterialOverride'
        transform:
          $ref: '#/components/schemas/Matrix4'
        name:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        suppliedId:
          description:
            ID provided for correlation. For example, an existing ID from
            a PLM system.
          example: PN12345
          maxLength: 1024
          type: string
        metadata:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/MetadataLongType'
              - $ref: '#/components/schemas/MetadataFloatType'
              - $ref: '#/components/schemas/MetadataDateType'
              - $ref: '#/components/schemas/MetadataStringType'
              - $ref: '#/components/schemas/MetadataNullType'
          description: |
            Additional metadata for the scene-item. This metadata will take precedence over any metadata that belongs to the part file.
          type: object
        phantom:
          description: Phantom state of the item.
          type: boolean
        endItem:
          description: Whether this item is an end item.
          type: boolean
      type: object
    UpdateSceneItemRequest_data_relationships:
      properties:
        source:
          anyOf:
            - $ref: '#/components/schemas/GeometrySetRelationship'
            - $ref: '#/components/schemas/PartRevisionRelationship'
          description: Relationship to a `geometry-set` or `part-revision`.
      type: object
    UpdateSceneItemRequest_data:
      properties:
        type:
          description: Resource object type.
          example: scene-item
          maxLength: 32
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateSceneItemRequest_data_attributes'
        relationships:
          $ref: '#/components/schemas/UpdateSceneItemRequest_data_relationships'
      required:
        - attributes
        - type
      type: object
    UpdateSceneViewRequest_data_attributes:
      properties:
        camera:
          anyOf:
            - $ref: '#/components/schemas/PerspectiveCamera'
            - $ref: '#/components/schemas/OrthographicCamera'
            - $ref: '#/components/schemas/CameraFit'
        crossSectioning:
          $ref: '#/components/schemas/CrossSectioning'
        noDefaultLights:
          description: Whether or not to turn off default lighting
          example: true
          type: boolean
      type: object
    UpdateSceneViewRequest_data:
      properties:
        type:
          description: Resource object type.
          example: scene-view
          maxLength: 32
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateSceneViewRequest_data_attributes'
      required:
        - attributes
        - type
      type: object
    CreateSceneViewRequest_data_attributes:
      properties:
        camera:
          oneOf:
            - $ref: '#/components/schemas/PerspectiveCamera'
            - $ref: '#/components/schemas/OrthographicCamera'
        crossSectioning:
          $ref: '#/components/schemas/CrossSectioning'
        excludePrunedItems:
          description: Whether to exclude non-visible items in the view
          example: true
          type: boolean
      type: object
    CreateSceneViewRequest_data_relationships:
      properties:
        sceneViewState:
          $ref: '#/components/schemas/SceneViewStateRelationship'
      type: object
    CreateSceneViewRequest_data:
      properties:
        type:
          description: Resource object type.
          example: scene-view
          maxLength: 32
          type: string
        attributes:
          $ref: '#/components/schemas/CreateSceneViewRequest_data_attributes'
        relationships:
          $ref: '#/components/schemas/CreateSceneViewRequest_data_relationships'
      required:
        - attributes
        - type
      type: object
    CreateSceneRequest_data_attributes:
      properties:
        camera:
          oneOf:
            - $ref: '#/components/schemas/PerspectiveCamera'
            - $ref: '#/components/schemas/OrthographicCamera'
        suppliedId:
          description:
            ID provided for correlation. For example, an existing ID from
            a PLM system.
          example: PN12345
          maxLength: 1024
          type: string
        name:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        treeEnabled:
          example: false
          type: boolean
        worldOrientation:
          $ref: '#/components/schemas/Orientation'
        metadata:
          additionalProperties:
            maxLength: 256
            minLength: 0
            type: string
          type: object
      type: object
    CreateSceneRequest_data_relationships:
      properties:
        source:
          $ref: '#/components/schemas/SceneRelationship'
      required:
        - source
      type: object
    CreateSceneRequest_data:
      properties:
        type:
          description: Resource object type.
          example: scene
          maxLength: 32
          type: string
        attributes:
          $ref: '#/components/schemas/CreateSceneRequest_data_attributes'
        relationships:
          $ref: '#/components/schemas/CreateSceneRequest_data_relationships'
      required:
        - attributes
        - type
      type: object
    UpdateSceneRequest_data_attributes:
      properties:
        camera:
          anyOf:
            - $ref: '#/components/schemas/PerspectiveCamera'
            - $ref: '#/components/schemas/OrthographicCamera'
            - $ref: '#/components/schemas/CameraFit'
        state:
          description: State of the scene.
          enum:
            - draft
            - commit
          example: commit
          maxLength: 32
          type: string
        suppliedId:
          description:
            ID provided for correlation. For example, an existing ID from
            a PLM system.
          example: PN12345
          maxLength: 1024
          type: string
        name:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        treeEnabled:
          description: Whether or not scene trees can be viewed for this scene.
          type: boolean
        worldOrientation:
          $ref: '#/components/schemas/Orientation'
        metadata:
          additionalProperties:
            maxLength: 256
            minLength: 0
            type: string
          type: object
      type: object
    UpdateSceneRequest_data:
      properties:
        type:
          description: Resource object type.
          example: scene
          maxLength: 32
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateSceneRequest_data_attributes'
      required:
        - attributes
        - type
      type: object
    CreateSceneViewStateRequest_data_attributes:
      properties:
        name:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        suppliedId:
          description:
            ID provided for correlation. For example, an existing ID from
            a PLM system.
          example: PN12345
          maxLength: 1024
          type: string
      type: object
    CreateSceneViewStateRequest_data_relationships:
      properties:
        source:
          oneOf:
            - $ref: '#/components/schemas/SceneViewRelationship'
            - $ref: '#/components/schemas/SceneViewStateRelationship'
      required:
        - source
      type: object
    CreateSceneViewStateRequest_data:
      properties:
        type:
          description: Resource object type.
          example: scene-view-state
          maxLength: 32
          type: string
        attributes:
          $ref: '#/components/schemas/CreateSceneViewStateRequest_data_attributes'
        relationships:
          $ref: '#/components/schemas/CreateSceneViewStateRequest_data_relationships'
      required:
        - attributes
        - relationships
        - type
      type: object
    UpdateSceneViewStateRequest_data:
      properties:
        type:
          description: Resource object type.
          example: scene-view-state
          maxLength: 32
          type: string
        attributes:
          $ref: '#/components/schemas/CreateSceneViewStateRequest_data_attributes'
      required:
        - attributes
        - type
      type: object
    CreateStreamKeyRequest_data_attributes:
      properties:
        expiry:
          description: Number of seconds before the `stream-key` expires.
          example: 600
          format: int32
          maximum: 31557600
          minimum: 1
          type: integer
        excludePrunedItems:
          description: Whether to exclude non-visible items in the view
          example: true
          type: boolean
      type: object
    CreateStreamKeyRequest_data:
      properties:
        type:
          description: Resource object type.
          example: stream-key
          maxLength: 32
          type: string
        attributes:
          $ref: '#/components/schemas/CreateStreamKeyRequest_data_attributes'
      required:
        - attributes
        - type
      type: object
    CreateTranslationInspectionRequest_data:
      properties:
        type:
          description: Resource object type.
          example: translation-inspection
          maxLength: 32
          type: string
        relationships:
          $ref: '#/components/schemas/CreateGeometrySetRequest_data_relationships'
      required:
        - relationships
        - type
      type: object
    TranslationInspectionJob_data_attributes:
      properties:
        status:
          example: running
          type: string
        missing:
          items:
            $ref: '#/components/schemas/NonEmptyString'
          type: array
      required:
        - missing
        - status
      type: object
    TranslationInspectionJob_data:
      properties:
        type:
          example: translation-inspection
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
        attributes:
          $ref: '#/components/schemas/TranslationInspectionJob_data_attributes'
      required:
        - attributes
        - id
        - type
      type: object
    CreateExportRequest_data_attributes:
      properties:
        config:
          description: Specifies the export format and options to configure the export.
          discriminator:
            mapping:
              jt: '#/components/schemas/CADExportConfig'
              step: '#/components/schemas/CADExportConfig'
              x_t: '#/components/schemas/CADExportConfig'
            propertyName: format
          oneOf:
            - $ref: '#/components/schemas/CADExportConfig'
        fileName:
          description: Optional file name to use for the resulting export
          example: exportedScene
          maxLength: 1024
          type: string
      required:
        - config
      type: object
    CreateExportRequest_data_relationships:
      properties:
        source:
          $ref: '#/components/schemas/ExportRelationship'
        state:
          $ref: '#/components/schemas/ExportStateRelationship'
      required:
        - source
      type: object
    CreateExportRequest_data:
      properties:
        type:
          description: Resource object type.
          example: export
          maxLength: 32
          type: string
        attributes:
          $ref: '#/components/schemas/CreateExportRequest_data_attributes'
        relationships:
          $ref: '#/components/schemas/CreateExportRequest_data_relationships'
      required:
        - attributes
        - relationships
        - type
      type: object
    CreateWebhookSubscriptionRequest_data_attributes:
      properties:
        url:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        topics:
          items:
            $ref: '#/components/schemas/NonEmptyString'
          type: array
      required:
        - topics
        - url
      type: object
    CreateWebhookSubscriptionRequest_data:
      properties:
        type:
          description: Resource object type.
          example: webhook-subscription
          maxLength: 32
          type: string
        attributes:
          $ref: '#/components/schemas/CreateWebhookSubscriptionRequest_data_attributes'
      required:
        - attributes
        - type
      type: object
    UpdateWebhookSubscriptionRequest_data_attributes:
      properties:
        status:
          description: Status of subscription.
          enum:
            - active
            - paused
          example: active
          type: string
        topics:
          items:
            $ref: '#/components/schemas/NonEmptyString'
          type: array
        url:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
      type: object
    UpdateWebhookSubscriptionRequest_data:
      properties:
        type:
          description: Resource object type.
          example: webhook-subscription
          maxLength: 32
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateWebhookSubscriptionRequest_data_attributes'
      required:
        - attributes
        - type
      type: object
    ApiError_source:
      properties:
        pointer:
          example: /body/data/attributes
          type: string
        parameter:
          example: page[cursor]
          type: string
      type: object
    ApplicationData_attributes:
      properties:
        name:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        clientId:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        created:
          example: 2020-01-01T12:00:00Z
          format: date-time
          type: string
        scopes:
          items:
            $ref: '#/components/schemas/NonEmptyString'
          type: array
      required:
        - clientId
        - created
        - name
        - scopes
      type: object
    BatchOperation_ref:
      description: Target of batch operation.
      properties:
        type:
          description: Resource object type.
          enum:
            - scene
          example: scene
          maxLength: 32
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
      required:
        - id
        - type
      type: object
    QueuedJobData_attributes:
      properties:
        status:
          example: running
          type: string
        created:
          example: 2020-01-01T12:00:00Z
          format: date-time
          type: string
        errors:
          items:
            $ref: '#/components/schemas/ApiError'
          maxItems: 20
          type: array
          uniqueItems: true
      required:
        - created
        - status
      type: object
    FileMetadataData_attributes:
      properties:
        name:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        status:
          example: complete
          type: string
        suppliedId:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        rootFileName:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        created:
          example: 2020-01-01T12:00:00Z
          format: date-time
          type: string
        uploaded:
          example: 2020-01-01T12:00:00Z
          format: date-time
          type: string
        size:
          format: int64
          type: integer
      required:
        - created
        - name
        - status
      type: object
    FileRelationship_data:
      properties:
        type:
          description: Resource object type.
          enum:
            - file
          example: file
          maxLength: 32
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
      required:
        - id
        - type
      type: object
    HitResultData_attributes:
      properties:
        point:
          $ref: '#/components/schemas/Vector3'
        normal:
          $ref: '#/components/schemas/Vector3'
      required:
        - normal
        - point
      type: object
    HitResultData_relationships:
      properties:
        sceneItem:
          $ref: '#/components/schemas/RelationshipData'
      required:
        - sceneItem
      type: object
    SceneItemData_attributes:
      properties:
        boundingBox:
          $ref: '#/components/schemas/BoundingBox'
        created:
          example: 2020-01-01T12:00:00Z
          format: date-time
          type: string
        endItem:
          type: boolean
        materialOverride:
          $ref: '#/components/schemas/ColorMaterial'
        metadata:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/MetadataLongType'
              - $ref: '#/components/schemas/MetadataFloatType'
              - $ref: '#/components/schemas/MetadataDateType'
              - $ref: '#/components/schemas/MetadataStringType'
              - $ref: '#/components/schemas/MetadataNullType'
          type: object
        name:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        phantom:
          type: boolean
        suppliedId:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        transform:
          $ref: '#/components/schemas/Matrix4'
        visible:
          example: true
          type: boolean
        worldTransform:
          $ref: '#/components/schemas/Matrix4'
      type: object
    SceneItemData_relationships:
      properties:
        source:
          anyOf:
            - $ref: '#/components/schemas/GeometrySetRelationship'
            - $ref: '#/components/schemas/PartRevisionRelationship'
            - $ref: '#/components/schemas/SceneRelationship'
            - $ref: '#/components/schemas/PartRenditionRelationship'
        parent:
          $ref: '#/components/schemas/SceneItemRelationship'
        partRendition:
          $ref: '#/components/schemas/PartRenditionRelationship'
      type: object
    PartRevisionData_attributes:
      properties:
        created:
          example: 2020-01-01T12:00:00Z
          format: date-time
          type: string
        metadata:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/MetadataLongType'
              - $ref: '#/components/schemas/MetadataFloatType'
              - $ref: '#/components/schemas/MetadataDateType'
              - $ref: '#/components/schemas/MetadataStringType'
              - $ref: '#/components/schemas/MetadataNullType'
          type: object
        suppliedId:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        name:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
      type: object
    PartRevisionData_relationships:
      properties:
        geometrySet:
          $ref: '#/components/schemas/GeometrySetRelationshipData'
        part:
          $ref: '#/components/schemas/PartRelationshipData'
        defaultPartRendition:
          $ref: '#/components/schemas/PartRenditionRelationship'
      type: object
    PartRenditionData_attributes:
      properties:
        created:
          example: 2020-01-01T12:00:00Z
          format: date-time
          type: string
        suppliedId:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        name:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
      type: object
    PartRenditionData_relationships:
      properties:
        geometrySet:
          $ref: '#/components/schemas/GeometrySetRelationshipData'
        partRevision:
          $ref: '#/components/schemas/PartRevisionRelationship'
      type: object
    PartData_attributes:
      properties:
        name:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        suppliedId:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        created:
          example: 2020-01-01T12:00:00Z
          format: date-time
          type: string
      required:
        - created
        - name
        - suppliedId
      type: object
    PartData_relationships_partRevisions:
      properties:
        type:
          description: Resource object type.
          enum:
            - part-revision
          example: part-revision
          maxLength: 32
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
      required:
        - id
        - type
      type: object
    PartData_relationships:
      properties:
        partRevisions:
          items:
            $ref: '#/components/schemas/PartData_relationships_partRevisions'
          type: array
      required:
        - partRevisions
      type: object
    PartAssemblyRelationship_data:
      properties:
        children:
          items:
            $ref: '#/components/schemas/PartRevisionInstance'
          type: array
        metadata:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/MetadataLongType'
              - $ref: '#/components/schemas/MetadataFloatType'
              - $ref: '#/components/schemas/MetadataDateType'
              - $ref: '#/components/schemas/MetadataStringType'
              - $ref: '#/components/schemas/MetadataNullType'
          description: |
            Additional metadata about the `part` and/or `part-revision`.
          type: object
      required:
        - children
      type: object
    SceneAlterationData_relationships:
      properties:
        sceneView:
          $ref: '#/components/schemas/SceneViewRelationship'
      required:
        - sceneView
      type: object
    SceneItemOverrideData_attributes:
      properties:
        created:
          example: 2020-01-01T12:00:00Z
          format: date-time
          type: string
        visible:
          example: true
          type: boolean
        transform:
          $ref: '#/components/schemas/Matrix4'
        material:
          $ref: '#/components/schemas/ColorMaterial'
        selected:
          type: boolean
        phantom:
          type: boolean
        endItem:
          type: boolean
      required:
        - created
      type: object
    SceneItemOverrideData_relationships:
      properties:
        sceneItem:
          $ref: '#/components/schemas/SceneItemRelationship'
        sceneView:
          $ref: '#/components/schemas/SceneViewRelationship'
      required:
        - sceneItem
        - sceneView
      type: object
    SceneItemRelationship_data:
      properties:
        type:
          description: Resource object type.
          enum:
            - scene-item
          example: scene-item
          maxLength: 32
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
      required:
        - id
        - type
      type: object
    CreateSceneItemRequestData_attributes:
      properties:
        materialOverride:
          $ref: '#/components/schemas/ColorMaterial'
        name:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        ordinal:
          description:
            A 0-based index used for defining a consistent ordering amongst
            sibling scene items.
          type: integer
        parent:
          description: |
            Optional ability to specify a parent scene item by scene item supplied ID. For example, an  existing ID from a PLM system. This approach is an alternative to providing a specific scene  item ID with the relationship parent property.
          example: PN12345
          maxLength: 1024
          type: string
        partInstanceSuppliedIdsAsSuppliedIds:
          description:
            Whether or not to use part instance supplied IDs as scene item
            supplied IDs.
          example: false
          type: boolean
        source:
          $ref: '#/components/schemas/PartRevisionSuppliedId'
        suppliedId:
          description:
            ID provided for correlation. For example, an existing ID from
            a PLM system.
          example: PN12345
          maxLength: 1024
          type: string
        transform:
          $ref: '#/components/schemas/Matrix4'
        visible:
          description: Item visibility.
          example: true
          type: boolean
        phantom:
          description: Phantom state of the item.
          type: boolean
        endItem:
          description: Whether this item is an end item.
          type: boolean
        metadata:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/MetadataLongType'
              - $ref: '#/components/schemas/MetadataFloatType'
              - $ref: '#/components/schemas/MetadataDateType'
              - $ref: '#/components/schemas/MetadataStringType'
              - $ref: '#/components/schemas/MetadataNullType'
          description: |
            Additional metadata for the scene-item. This metadata will take precedence over any metadata that belongs to the part file.
          type: object
      type: object
    CreateSceneItemRequestData_relationships:
      properties:
        parent:
          $ref: '#/components/schemas/SceneItemRelationship'
        source:
          anyOf:
            - $ref: '#/components/schemas/GeometrySetRelationship'
            - $ref: '#/components/schemas/PartRevisionRelationship'
            - $ref: '#/components/schemas/SceneRelationship'
            - $ref: '#/components/schemas/PartRenditionRelationship'
          description:
            Relationship to a `geometry-set`, `part-revision`, `part-rendition`,
            or `scene`.
        referenceTree:
          $ref: '#/components/schemas/SceneItemRelationship'
      type: object
    SceneViewData_attributes:
      properties:
        camera:
          oneOf:
            - $ref: '#/components/schemas/PerspectiveCamera'
            - $ref: '#/components/schemas/OrthographicCamera'
        created:
          example: 2020-01-01T12:00:00Z
          format: date-time
          type: string
        crossSectioning:
          $ref: '#/components/schemas/CrossSectioning'
        worldOrientation:
          $ref: '#/components/schemas/Orientation'
        excludePrunedItems:
          description: Whether to exclude non-visible items in the view
          example: true
          type: boolean
      required:
        - camera
        - created
      type: object
    SceneViewData_relationships:
      properties:
        scene:
          $ref: '#/components/schemas/SceneRelationship'
      required:
        - scene
      type: object
    SceneViewStateRelationship_data:
      properties:
        type:
          description: Resource object type.
          enum:
            - scene-view-state
          example: scene-view-state
          maxLength: 32
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
      required:
        - id
        - type
      type: object
    SceneData_attributes:
      properties:
        camera:
          oneOf:
            - $ref: '#/components/schemas/PerspectiveCamera'
            - $ref: '#/components/schemas/OrthographicCamera'
        state:
          example: draft
          type: string
        created:
          example: 2020-01-01T12:00:00Z
          format: date-time
          type: string
        suppliedId:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        name:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        treeEnabled:
          type: boolean
        modified:
          example: 2020-01-01T12:00:00Z
          format: date-time
          type: string
        worldOrientation:
          $ref: '#/components/schemas/Orientation'
        sceneItemCount:
          description:
            The number of scene items in this scene. (This field needs
            to be explicitly requested)
          example: 100
          type: integer
        metadata:
          additionalProperties:
            type: string
          type: object
      type: object
    SceneRelationship_data:
      properties:
        type:
          description: Resource object type.
          enum:
            - scene
          example: scene
          maxLength: 32
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
      required:
        - id
        - type
      type: object
    SceneViewStateData_attributes:
      properties:
        camera:
          oneOf:
            - $ref: '#/components/schemas/PerspectiveCamera'
            - $ref: '#/components/schemas/OrthographicCamera'
        created:
          example: 2020-01-01T12:00:00Z
          format: date-time
          type: string
        name:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
        thumbnails:
          items:
            $ref: '#/components/schemas/ThumbnailData'
          type: array
        featureLines:
          $ref: '#/components/schemas/FeatureLines'
        noDefaultLights:
          type: boolean
        suppliedId:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
      type: object
    SceneViewRelationship_data:
      properties:
        type:
          description: Resource object type.
          enum:
            - scene-view
          example: scene-view
          maxLength: 32
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
      required:
        - id
        - type
      type: object
    StreamKeyData_attributes:
      properties:
        key:
          example: i3MFRDOmg1pxD36dGCTONRwOujkgV8m9LQ
          type: string
        expiry:
          example: 600
          format: int32
          type: integer
        created:
          example: 2020-01-01T12:00:00Z
          format: date-time
          type: string
        excludePrunedItems:
          example: true
          type: boolean
      required:
        - created
        - expiry
      type: object
    QueuedTranslationJobData_attributes:
      properties:
        status:
          example: running
          type: string
        created:
          example: 2020-01-01T12:00:00Z
          format: date-time
          type: string
        completed:
          example: 2020-01-01T12:00:00Z
          format: date-time
          type: string
        errors:
          items:
            $ref: '#/components/schemas/ApiError'
          maxItems: 20
          type: array
          uniqueItems: true
      required:
        - created
        - status
      type: object
    QueuedTranslationJobData_relationships:
      properties:
        geometrySet:
          $ref: '#/components/schemas/GeometrySetRelationship'
        partRevision:
          $ref: '#/components/schemas/PartRevisionRelationship'
        partRendition:
          $ref: '#/components/schemas/PartRenditionRelationship'
      type: object
    ExportData_attributes:
      properties:
        created:
          example: 2020-01-01T12:00:00Z
          format: date-time
          type: string
        downloadUrl:
          example: https://example.com/path/to/file.jt
          type: string
      required:
        - created
        - downloadUrl
      type: object
    WebhookSubscriptionData_attributes:
      properties:
        url:
          type: string
        secret:
          example: i3MFRDOmg1pxD36dGCTONRwOujkgV8m9LQ
          type: string
        topics:
          items:
            $ref: '#/components/schemas/NonEmptyString'
          type: array
        status:
          enum:
            - active
            - paused
          example: active
          maxLength: 32
          type: string
        created:
          example: 2020-01-01T12:00:00Z
          format: date-time
          type: string
      required:
        - created
        - status
        - topics
        - url
      type: object
    WebhookEventData_attributes:
      example:
        created: 2020-01-01T12:00:00Z
        topic: some-string
      properties:
        created:
          example: 2020-01-01T12:00:00Z
          format: date-time
          type: string
        topic:
          example: some-string
          maxLength: 1024
          minLength: 1
          type: string
      required:
        - created
        - topic
      type: object
    WebhookEventData_relationships_owner_data:
      example:
        id: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
        type: account
      properties:
        type:
          description: Resource object type.
          enum:
            - account
          example: account
          maxLength: 32
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
      required:
        - id
        - type
      type: object
    WebhookEventData_relationships_owner:
      description: Relationship to an `owner`.
      example:
        data:
          id: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          type: account
        links:
          related: /some-resource/d98d621a-23da-49fe-af96-6be709abb718
      properties:
        data:
          $ref: '#/components/schemas/WebhookEventData_relationships_owner_data'
        links:
          $ref: '#/components/schemas/RelationshipLinks'
      required:
        - data
      type: object
    WebhookEventData_relationships_resource_data:
      example:
        id: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
        type: queued-scene-item
      properties:
        type:
          description: Resource object type.
          example: queued-scene-item
          maxLength: 32
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
      required:
        - id
        - type
      type: object
    WebhookEventData_relationships_resource:
      description: Relationship to a `resource`.
      example:
        data:
          id: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          type: queued-scene-item
        links:
          related: /some-resource/d98d621a-23da-49fe-af96-6be709abb718
      properties:
        data:
          $ref: '#/components/schemas/WebhookEventData_relationships_resource_data'
        links:
          $ref: '#/components/schemas/RelationshipLinks'
      required:
        - data
      type: object
    WebhookEventData_relationships:
      example:
        owner:
          data:
            id: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
            type: account
          links:
            related: /some-resource/d98d621a-23da-49fe-af96-6be709abb718
        resource:
          data:
            id: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
            type: queued-scene-item
          links:
            related: /some-resource/d98d621a-23da-49fe-af96-6be709abb718
      properties:
        owner:
          $ref: '#/components/schemas/WebhookEventData_relationships_owner'
        resource:
          $ref: '#/components/schemas/WebhookEventData_relationships_resource'
      required:
        - owner
        - resource
      type: object
    PartRenditionRelationship_data:
      properties:
        type:
          description: Resource object type.
          enum:
            - part-rendition
          example: part-rendition
          maxLength: 32
          type: string
        id:
          description: ID of the resource.
          example: f79d4760-0b71-44e4-ad0b-22743fdd4ca3
          format: uuid
          maxLength: 36
          type: string
      required:
        - id
        - type
      type: object
    QueryById_data_attributes:
      properties:
        type:
          description: Resource object type.
          enum:
            - id
            - suppliedId
          example: suppliedId
          maxLength: 32
          type: string
        value:
          description: ID of the resource.
          maxLength: 1024
          type: string
      required:
        - type
        - value
      type: object
    QueryById_data:
      properties:
        type:
          description: Resource object type.
          enum:
            - query-by-id
          example: query-by-id
          maxLength: 32
          type: string
        attributes:
          $ref: '#/components/schemas/QueryById_data_attributes'
      required:
        - attributes
        - type
      type: object
    QueryByCollection_data_attributes:
      properties:
        type:
          description: Resource object type.
          enum:
            - and
            - or
          example: and
          maxLength: 32
          type: string
        values:
          description: Query `scene-items`.
          items:
            $ref: '#/components/schemas/QueryById'
          maxItems: 1024
          type: array
      required:
        - type
        - values
      type: object
    QueryByCollection_data:
      properties:
        type:
          description: Resource object type.
          enum:
            - query-by-collection
          example: query-by-collection
          maxLength: 32
          type: string
        attributes:
          $ref: '#/components/schemas/QueryByCollection_data_attributes'
      required:
        - attributes
        - type
      type: object
  securitySchemes:
    OAuth2:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: /oauth2/token
      type: oauth2
    OAuth2Internal:
      flows:
        clientCredentials:
          scopes:
            accounts.*: Read and write access to account endpoints
            accounts.read: Read-only access to account endpoints
            accounts.write: Write-only access to account endpoints
          tokenUrl: /oauth2/token
      type: oauth2
    basicAuth:
      scheme: basic
      type: http
